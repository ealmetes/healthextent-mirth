<channelGroup version="3.11.0">
  <id>ee74fc3e-49ac-4d0c-81e1-85d484fcb2b8</id>
  <name>Health Extent Prod</name>
  <revision>2</revision>
  <lastModified>
    <time>1632172196612</time>
    <timezone>Etc/UTC</timezone>
  </lastModified>
  <description></description>
  <channels>
    <channel version="3.11.0">
      <id>4b589d39-1f0d-4985-900e-6dcb86fa5900</id>
      <nextMetaDataId>16</nextMetaDataId>
      <name>Encounter Feed</name>
      <description></description>
      <revision>22</revision>
      <sourceConnector version="3.11.0">
        <metaDataId>0</metaDataId>
        <name>sourceConnector</name>
        <properties class="com.mirth.connect.connectors.file.FileReceiverProperties" version="3.11.0">
          <pluginProperties/>
          <pollConnectorProperties version="3.11.0">
            <pollingType>INTERVAL</pollingType>
            <pollOnStart>false</pollOnStart>
            <pollingFrequency>5000</pollingFrequency>
            <pollingHour>0</pollingHour>
            <pollingMinute>0</pollingMinute>
            <cronJobs/>
            <pollConnectorPropertiesAdvanced>
              <weekly>true</weekly>
              <inactiveDays>
                <boolean>false</boolean>
                <boolean>false</boolean>
                <boolean>false</boolean>
                <boolean>false</boolean>
                <boolean>false</boolean>
                <boolean>false</boolean>
                <boolean>false</boolean>
                <boolean>false</boolean>
              </inactiveDays>
              <dayOfMonth>1</dayOfMonth>
              <allDay>true</allDay>
              <startingHour>8</startingHour>
              <startingMinute>0</startingMinute>
              <endingHour>17</endingHour>
              <endingMinute>0</endingMinute>
            </pollConnectorPropertiesAdvanced>
          </pollConnectorProperties>
          <sourceConnectorProperties version="3.11.0">
            <responseVariable>None</responseVariable>
            <respondAfterProcessing>true</respondAfterProcessing>
            <processBatch>false</processBatch>
            <firstResponse>false</firstResponse>
            <processingThreads>1</processingThreads>
            <resourceIds class="linked-hash-map">
              <entry>
                <string>Default Resource</string>
                <string>[Default Resource]</string>
              </entry>
            </resourceIds>
            <queueBufferSize>1000</queueBufferSize>
          </sourceConnectorProperties>
          <scheme>FILE</scheme>
          <host>root@b74b17d7221f:/tmp/</host>
          <fileFilter>*</fileFilter>
          <regex>false</regex>
          <directoryRecursion>false</directoryRecursion>
          <ignoreDot>true</ignoreDot>
          <anonymous>true</anonymous>
          <username>anonymous</username>
          <password>anonymous</password>
          <timeout>10000</timeout>
          <secure>true</secure>
          <passive>true</passive>
          <validateConnection>true</validateConnection>
          <afterProcessingAction>NONE</afterProcessingAction>
          <moveToDirectory></moveToDirectory>
          <moveToFileName></moveToFileName>
          <errorReadingAction>NONE</errorReadingAction>
          <errorResponseAction>AFTER_PROCESSING</errorResponseAction>
          <errorMoveToDirectory></errorMoveToDirectory>
          <errorMoveToFileName></errorMoveToFileName>
          <checkFileAge>true</checkFileAge>
          <fileAge>1000</fileAge>
          <fileSizeMinimum>0</fileSizeMinimum>
          <fileSizeMaximum></fileSizeMaximum>
          <ignoreFileSizeMaximum>true</ignoreFileSizeMaximum>
          <sortBy>date</sortBy>
          <binary>false</binary>
          <charsetEncoding>DEFAULT_ENCODING</charsetEncoding>
        </properties>
        <transformer version="3.11.0">
          <elements>
            <com.mirth.connect.plugins.mapper.MapperStep version="3.11.0">
              <name>PatientId</name>
              <sequenceNumber>0</sequenceNumber>
              <enabled>true</enabled>
              <variable>PatientId</variable>
              <mapping></mapping>
              <defaultValue>&apos;&apos;</defaultValue>
              <replacements/>
              <scope>CHANNEL</scope>
            </com.mirth.connect.plugins.mapper.MapperStep>
            <com.mirth.connect.plugins.mapper.MapperStep version="3.11.0">
              <name>PrimaryDoctor</name>
              <sequenceNumber>1</sequenceNumber>
              <enabled>true</enabled>
              <variable>PrimaryDoctor</variable>
              <mapping></mapping>
              <defaultValue>&apos;&apos;</defaultValue>
              <replacements/>
              <scope>GLOBAL</scope>
            </com.mirth.connect.plugins.mapper.MapperStep>
            <com.mirth.connect.plugins.mapper.MapperStep version="3.11.0">
              <name>PrimaryDoctorId</name>
              <sequenceNumber>2</sequenceNumber>
              <enabled>true</enabled>
              <variable>PrimaryDoctorId</variable>
              <mapping></mapping>
              <defaultValue>&apos;&apos;</defaultValue>
              <replacements/>
              <scope>CHANNEL</scope>
            </com.mirth.connect.plugins.mapper.MapperStep>
            <com.mirth.connect.plugins.mapper.MapperStep version="3.11.0">
              <name>InsuranceName</name>
              <sequenceNumber>3</sequenceNumber>
              <enabled>true</enabled>
              <variable>InsuranceName</variable>
              <mapping></mapping>
              <defaultValue>&apos;&apos;</defaultValue>
              <replacements/>
              <scope>CHANNEL</scope>
            </com.mirth.connect.plugins.mapper.MapperStep>
            <com.mirth.connect.plugins.mapper.MapperStep version="3.11.0">
              <name>InsuranceType</name>
              <sequenceNumber>4</sequenceNumber>
              <enabled>true</enabled>
              <variable>InsuranceType</variable>
              <mapping></mapping>
              <defaultValue>&apos;&apos;</defaultValue>
              <replacements/>
              <scope>CHANNEL</scope>
            </com.mirth.connect.plugins.mapper.MapperStep>
            <com.mirth.connect.plugins.mapper.MapperStep version="3.11.0">
              <name>InsurancePolicyNumber</name>
              <sequenceNumber>5</sequenceNumber>
              <enabled>true</enabled>
              <variable>InsurancePolicyNumber</variable>
              <mapping></mapping>
              <defaultValue>&apos;&apos;</defaultValue>
              <replacements/>
              <scope>CHANNEL</scope>
            </com.mirth.connect.plugins.mapper.MapperStep>
          </elements>
          <inboundTemplate encoding="base64"></inboundTemplate>
          <outboundTemplate encoding="base64"></outboundTemplate>
          <inboundDataType>HL7V2</inboundDataType>
          <outboundDataType>HL7V2</outboundDataType>
          <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.11.0">
            <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.11.0">
              <handleRepetitions>true</handleRepetitions>
              <handleSubcomponents>true</handleSubcomponents>
              <useStrictParser>false</useStrictParser>
              <useStrictValidation>false</useStrictValidation>
              <stripNamespaces>true</stripNamespaces>
              <segmentDelimiter>\r</segmentDelimiter>
              <convertLineBreaks>true</convertLineBreaks>
            </serializationProperties>
            <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.11.0">
              <useStrictParser>false</useStrictParser>
              <useStrictValidation>false</useStrictValidation>
              <segmentDelimiter>\r</segmentDelimiter>
            </deserializationProperties>
            <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.11.0">
              <splitType>MSH_Segment</splitType>
              <batchScript></batchScript>
            </batchProperties>
            <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.11.0">
              <segmentDelimiter>\r</segmentDelimiter>
              <successfulACKCode>AA</successfulACKCode>
              <successfulACKMessage></successfulACKMessage>
              <errorACKCode>AE</errorACKCode>
              <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
              <rejectedACKCode>AR</rejectedACKCode>
              <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
              <msh15ACKAccept>false</msh15ACKAccept>
              <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
            </responseGenerationProperties>
            <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.11.0">
              <successfulACKCode>AA,CA</successfulACKCode>
              <errorACKCode>AE,CE</errorACKCode>
              <rejectedACKCode>AR,CR</rejectedACKCode>
              <validateMessageControlId>true</validateMessageControlId>
              <originalMessageControlId>Destination_Encoded</originalMessageControlId>
              <originalIdMapVariable></originalIdMapVariable>
            </responseValidationProperties>
          </inboundProperties>
          <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.11.0">
            <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.11.0">
              <handleRepetitions>true</handleRepetitions>
              <handleSubcomponents>true</handleSubcomponents>
              <useStrictParser>false</useStrictParser>
              <useStrictValidation>false</useStrictValidation>
              <stripNamespaces>true</stripNamespaces>
              <segmentDelimiter>\r</segmentDelimiter>
              <convertLineBreaks>true</convertLineBreaks>
            </serializationProperties>
            <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.11.0">
              <useStrictParser>false</useStrictParser>
              <useStrictValidation>false</useStrictValidation>
              <segmentDelimiter>\r</segmentDelimiter>
            </deserializationProperties>
            <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.11.0">
              <splitType>MSH_Segment</splitType>
              <batchScript></batchScript>
            </batchProperties>
            <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.11.0">
              <segmentDelimiter>\r</segmentDelimiter>
              <successfulACKCode>AA</successfulACKCode>
              <successfulACKMessage></successfulACKMessage>
              <errorACKCode>AE</errorACKCode>
              <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
              <rejectedACKCode>AR</rejectedACKCode>
              <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
              <msh15ACKAccept>false</msh15ACKAccept>
              <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
            </responseGenerationProperties>
            <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.11.0">
              <successfulACKCode>AA,CA</successfulACKCode>
              <errorACKCode>AE,CE</errorACKCode>
              <rejectedACKCode>AR,CR</rejectedACKCode>
              <validateMessageControlId>true</validateMessageControlId>
              <originalMessageControlId>Destination_Encoded</originalMessageControlId>
              <originalIdMapVariable></originalIdMapVariable>
            </responseValidationProperties>
          </outboundProperties>
        </transformer>
        <filter version="3.11.0">
          <elements/>
        </filter>
        <transportName>File Reader</transportName>
        <mode>SOURCE</mode>
        <enabled>true</enabled>
        <waitForPrevious>true</waitForPrevious>
      </sourceConnector>
      <destinationConnectors>
        <connector version="3.11.0">
          <metaDataId>6</metaDataId>
          <name>Validate Patient</name>
          <properties class="com.mirth.connect.connectors.js.JavaScriptDispatcherProperties" version="3.11.0">
            <pluginProperties/>
            <destinationConnectorProperties version="3.11.0">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
              <reattachAttachments>true</reattachAttachments>
            </destinationConnectorProperties>
            <script>return connectorMessage.getTransformedData();</script>
          </properties>
          <transformer version="3.11.0">
            <elements>
              <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.11.0">
                <name>Validate Patient</name>
                <sequenceNumber>0</sequenceNumber>
                <enabled>true</enabled>
                <script>var person = getPatientId(msg[&apos;PID&apos;][&apos;PID.5&apos;][&apos;PID.5.2&apos;].toString(), msg[&apos;PID&apos;][&apos;PID.5&apos;][&apos;PID.5.1&apos;].toString(), msg[&apos;PID&apos;][&apos;PID.7&apos;][&apos;PID.7.1&apos;].toString(), &apos;&apos;);
if (person.length &gt; 0) {
	var patientId = person[0].PersonID
     if (!!patientId) {
         channelMap.put(&apos;PatientId&apos;, patientId);
     }
}

return person;


channelMap.put(&apos;PatientId&apos;, &apos;&apos;);
channelMap.put(&apos;PrimaryDoctor&apos;, &apos;&apos;);
channelMap.put(&apos;PrimaryDoctorId&apos;, &apos;&apos;);
channelMap.put(&apos;InsuranceName&apos;, &apos;&apos;);
channelMap.put(&apos;InsuranceType&apos;, &apos;&apos;);
channelMap.put(&apos;InsurancePolicyNumber&apos;, &apos;&apos;);
var Person = getPatientId(&apos;&apos;, &apos;&apos;, &apos;&apos;, msg[&apos;PID&apos;][&apos;PID.19&apos;][&apos;PID.19.1&apos;].toString());
var patientfound = false;

if (Person.length &gt; 0) {
    channelMap.put(&apos;PatientId&apos;, Person[0].PersonID);
    patientfound = true;
}else{
    var person = getPatientId(msg[&apos;PID&apos;][&apos;PID.5&apos;][&apos;PID.5.2&apos;].toString(), msg[&apos;PID&apos;][&apos;PID.5&apos;][&apos;PID.5.1&apos;].toString(), msg[&apos;PID&apos;][&apos;PID.7&apos;][&apos;PID.7.1&apos;].toString(), &apos;&apos;);
    if (person.length &gt; 0) {
        var patientId = person[0].PersonID
        if (!!patientId) {
            channelMap.put(&apos;PatientId&apos;, patientId);
        }
    }

}</script>
              </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
            </elements>
            <inboundTemplate encoding="base64">TVNIfF5+XCZ8fENPQ1RXfHx8MjAxODA2MDQxNDA4fHxBRFReQTA0fFRXR1RBRE0uMS41Mjk2NzY4fFB8Mi4yDUVWTnxBMDR8MjAxODA2MDQxNDA4fHx8RUNDMDIxN15DUklQU15FTElaQUJFVEgNUElEfDF8fEcwMDAxNzY0ODd8Rzk3ODEwfFNUQUxOQUtFUl5DQUxFQl5UfHwyMDAwMTAxM3xNfHxXfDEyMjUgU0hJUExFWSBEUl5eTklDRVZJTExFXkZMXjMyNTc4XlVTQV5eXk9LQUxPT1NBfHwoODUwKTUxNy03ODc2fCg5OTkpOTk5LTk5OTl8RU5HfFN8Q09DVFd8RzAwMDk3ODQwNTc2fDk5OS05OS05OTk5DU5LMXwxfFJJTkdTVEFEXkJST058RkF8MTIyNSBTSElQTEVZIERSXl5OSUNFVklMTEVeRkxeMzI1NzheVVNBXl5eT0tBTE9PU0F8KDg1MCk1MTctNzg3Ng1QVjF8MXxPfEcuUFR8RUx8fEcuUFR8TUVFRVZeTWVla3NeRXZhbnxNRUVFVl5NZWVrc15FdmFuXlJeXl5NRHxNRUVFVl5NZWVrc15FdmFuXlJeXl5NRHxQVHx8fHxDUnx8Tnx8UkNSfHwwN3x8fHx8fHx8fHx8fHx8fHx8fHxDT0NUV3xHUk9JTiBJU1NVRVN8UkVHfHx8MjAxODA2MDQxNDA3fHx8fHx8fHxNRUVFVl5NZWVrc15FdmFuXlJeXl5NRH5+fg1HVDF8MXx8UklOR1NUQUReQlJPTnx8MTIyNSBTSElQTEVZIERSXl5OSUNFVklMTEVeRkxeMzI1NzheVVNBXl5eT0tBTE9PU0F8KDg1MCk1MTctNzg3Nnx8MTk4NDA1Mjl8TXx8RkF8NTE2LTA0LTg0MDd8fHxFR0xJTiBGRURFUkFMIENSRURJVCBVTklPTnw4MzggRUdMSU4gUEtXWV5eRlQgV0FMVE9OIEJFQUNIXkZMXjMyNTQ3fCg5OTkpOTk5LTk5OTl8fHxGDUdUMXwyDUlOMXwxfFVIQ0hNT3x8VU5JVEVEIEhFQUxUSENBUkUgSE1PfFBPIEJPWCA3NDA4MDBeXkFUTEFOVEFeR0FeMzAzNzReVVNBfHwoODc3KTg0Mi0zMjEwfDkxMDUwMHxFR0xJTiBGRURFUkFMIENSRURJVCBVTklPTnx8fDIwMTgwMTAxfHxOUi9PXjIwMTgwNTMxfHxSSU5HU1RBRF5CUk9OXkx8MzN8MTk4NDA1Mjl8fHx8fHx8fHx8fHx8fHx8fHw5MzI2ODM3NTB8fHx8fHx8TQ0=</inboundTemplate>
            <outboundTemplate encoding="base64"></outboundTemplate>
            <inboundDataType>HL7V2</inboundDataType>
            <outboundDataType>JSON</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.11.0">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.11.0">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.11.0">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.11.0">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.11.0">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.11.0">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.11.0">
              <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.11.0">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.11.0">
            <elements/>
            <inboundTemplate encoding="base64"></inboundTemplate>
            <outboundTemplate encoding="base64"></outboundTemplate>
            <inboundDataType>JSON</inboundDataType>
            <outboundDataType>JSON</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.11.0">
              <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.11.0">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.11.0">
              <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.11.0">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.11.0">
            <elements>
              <com.mirth.connect.plugins.rulebuilder.RuleBuilderRule version="3.11.0">
                <name>Accept message if &quot;msg[&apos;PID&apos;][&apos;PID.19&apos;][&apos;PID.19.1&apos;].toString()&quot; exists</name>
                <sequenceNumber>0</sequenceNumber>
                <enabled>true</enabled>
                <field>msg[&apos;PID&apos;][&apos;PID.19&apos;][&apos;PID.19.1&apos;].toString()</field>
                <condition>EXISTS</condition>
                <values/>
              </com.mirth.connect.plugins.rulebuilder.RuleBuilderRule>
            </elements>
          </filter>
          <transportName>JavaScript Writer</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
        <connector version="3.11.0">
          <metaDataId>14</metaDataId>
          <name>Validate Discharged</name>
          <properties class="com.mirth.connect.connectors.vm.VmDispatcherProperties" version="3.11.0">
            <pluginProperties/>
            <destinationConnectorProperties version="3.11.0">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
              <reattachAttachments>true</reattachAttachments>
            </destinationConnectorProperties>
            <channelId>none</channelId>
            <channelTemplate>${message.transformedData}</channelTemplate>
            <mapVariables/>
          </properties>
          <transformer version="3.11.0">
            <elements/>
            <inboundTemplate encoding="base64">TVNIfF5+XCZ8fENPQ1RXfHx8MjAxODA2MDQxNDA4fHxBRFReQTA0fFRXR1RBRE0uMS41Mjk2NzY4fFB8Mi4yDUVWTnxBMDR8MjAxODA2MDQxNDA4fHx8RUNDMDIxN15DUklQU15FTElaQUJFVEgNUElEfDF8fEcwMDAxNzY0ODd8Rzk3ODEwfFNUQUxOQUtFUl5DQUxFQl5UfHwyMDAwMTAxM3xNfHxXfDEyMjUgU0hJUExFWSBEUl5eTklDRVZJTExFXkZMXjMyNTc4XlVTQV5eXk9LQUxPT1NBfHwoODUwKTUxNy03ODc2fCg5OTkpOTk5LTk5OTl8RU5HfFN8Q09DVFd8RzAwMDk3ODQwNTc2fDk5OS05OS05OTk5DU5LMXwxfFJJTkdTVEFEXkJST058RkF8MTIyNSBTSElQTEVZIERSXl5OSUNFVklMTEVeRkxeMzI1NzheVVNBXl5eT0tBTE9PU0F8KDg1MCk1MTctNzg3Ng1QVjF8MXxPfEcuUFR8RUx8fEcuUFR8TUVFRVZeTWVla3NeRXZhbnxNRUVFVl5NZWVrc15FdmFuXlJeXl5NRHxNRUVFVl5NZWVrc15FdmFuXlJeXl5NRHxQVHx8fHxDUnx8Tnx8UkNSfHwwN3x8fHx8fHx8fHx8fHx8fHx8fHxDT0NUV3xHUk9JTiBJU1NVRVN8UkVHfHx8MjAxODA2MDQxNDA3fHx8fHx8fHxNRUVFVl5NZWVrc15FdmFuXlJeXl5NRH5+fg1HVDF8MXx8UklOR1NUQUReQlJPTnx8MTIyNSBTSElQTEVZIERSXl5OSUNFVklMTEVeRkxeMzI1NzheVVNBXl5eT0tBTE9PU0F8KDg1MCk1MTctNzg3Nnx8MTk4NDA1Mjl8TXx8RkF8NTE2LTA0LTg0MDd8fHxFR0xJTiBGRURFUkFMIENSRURJVCBVTklPTnw4MzggRUdMSU4gUEtXWV5eRlQgV0FMVE9OIEJFQUNIXkZMXjMyNTQ3fCg5OTkpOTk5LTk5OTl8fHxGDUdUMXwyDUlOMXwxfFVIQ0hNT3x8VU5JVEVEIEhFQUxUSENBUkUgSE1PfFBPIEJPWCA3NDA4MDBeXkFUTEFOVEFeR0FeMzAzNzReVVNBfHwoODc3KTg0Mi0zMjEwfDkxMDUwMHxFR0xJTiBGRURFUkFMIENSRURJVCBVTklPTnx8fDIwMTgwMTAxfHxOUi9PXjIwMTgwNTMxfHxSSU5HU1RBRF5CUk9OXkx8MzN8MTk4NDA1Mjl8fHx8fHx8fHx8fHx8fHx8fHw5MzI2ODM3NTB8fHx8fHx8TQ0=</inboundTemplate>
            <outboundTemplate encoding="base64"></outboundTemplate>
            <inboundDataType>HL7V2</inboundDataType>
            <outboundDataType>JSON</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.11.0">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.11.0">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.11.0">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.11.0">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.11.0">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.11.0">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.11.0">
              <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.11.0">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.11.0">
            <elements/>
            <inboundDataType>JSON</inboundDataType>
            <outboundDataType>JSON</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.11.0">
              <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.11.0">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.11.0">
              <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.11.0">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.11.0">
            <elements>
              <com.mirth.connect.plugins.javascriptrule.JavaScriptRule version="3.11.0">
                <name>Filter Patient Id/Duplicate Encounters</name>
                <sequenceNumber>0</sequenceNumber>
                <enabled>true</enabled>
                <script>if ($(&apos;PatientId&apos;).length() &gt; 0) {
	return checkDuplicateData($(&apos;PatientId&apos;), msg[&apos;EVN&apos;][&apos;EVN.1&apos;][&apos;EVN.1.1&apos;].toString(),msg[&apos;EVN&apos;][&apos;EVN.2&apos;][&apos;EVN.2.1&apos;].toString());
}else{
	return false;
}</script>
              </com.mirth.connect.plugins.javascriptrule.JavaScriptRule>
              <com.mirth.connect.plugins.rulebuilder.RuleBuilderRule version="3.11.0">
                <name>Accept message if &quot;msg[&apos;PV1&apos;][&apos;PV1.45&apos;][&apos;PV1.45.1&apos;].toString()&quot; exists</name>
                <sequenceNumber>1</sequenceNumber>
                <enabled>false</enabled>
                <operator>AND</operator>
                <field>msg[&apos;PV1&apos;][&apos;PV1.45&apos;][&apos;PV1.45.1&apos;].toString()</field>
                <condition>EXISTS</condition>
                <values/>
              </com.mirth.connect.plugins.rulebuilder.RuleBuilderRule>
            </elements>
          </filter>
          <transportName>Channel Writer</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
        <connector version="3.11.0">
          <metaDataId>1</metaDataId>
          <name>Set Patient Validation</name>
          <properties class="com.mirth.connect.connectors.vm.VmDispatcherProperties" version="3.11.0">
            <pluginProperties/>
            <destinationConnectorProperties version="3.11.0">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
              <reattachAttachments>true</reattachAttachments>
            </destinationConnectorProperties>
            <channelId>none</channelId>
            <channelTemplate>${message.transformedData}</channelTemplate>
            <mapVariables/>
          </properties>
          <transformer version="3.11.0">
            <elements/>
            <inboundTemplate encoding="base64">TVNIfF5+XCZ8fENPQ1RXfHx8MjAxODA2MDQxNDA4fHxBRFReQTA0fFRXR1RBRE0uMS41Mjk2NzY4fFB8Mi4yDUVWTnxBMDR8MjAxODA2MDQxNDA4fHx8RUNDMDIxN15DUklQU15FTElaQUJFVEgNUElEfDF8fEcwMDAxNzY0ODd8Rzk3ODEwfFNUQUxOQUtFUl5DQUxFQl5UfHwyMDAwMTAxM3xNfHxXfDEyMjUgU0hJUExFWSBEUl5eTklDRVZJTExFXkZMXjMyNTc4XlVTQV5eXk9LQUxPT1NBfHwoODUwKTUxNy03ODc2fCg5OTkpOTk5LTk5OTl8RU5HfFN8Q09DVFd8RzAwMDk3ODQwNTc2fDk5OS05OS05OTk5DU5LMXwxfFJJTkdTVEFEXkJST058RkF8MTIyNSBTSElQTEVZIERSXl5OSUNFVklMTEVeRkxeMzI1NzheVVNBXl5eT0tBTE9PU0F8KDg1MCk1MTctNzg3Ng1QVjF8MXxPfEcuUFR8RUx8fEcuUFR8TUVFRVZeTWVla3NeRXZhbnxNRUVFVl5NZWVrc15FdmFuXlJeXl5NRHxNRUVFVl5NZWVrc15FdmFuXlJeXl5NRHxQVHx8fHxDUnx8Tnx8UkNSfHwwN3x8fHx8fHx8fHx8fHx8fHx8fHxDT0NUV3xHUk9JTiBJU1NVRVN8UkVHfHx8MjAxODA2MDQxNDA3fHx8fHx8fHxNRUVFVl5NZWVrc15FdmFuXlJeXl5NRH5+fg1HVDF8MXx8UklOR1NUQUReQlJPTnx8MTIyNSBTSElQTEVZIERSXl5OSUNFVklMTEVeRkxeMzI1NzheVVNBXl5eT0tBTE9PU0F8KDg1MCk1MTctNzg3Nnx8MTk4NDA1Mjl8TXx8RkF8NTE2LTA0LTg0MDd8fHxFR0xJTiBGRURFUkFMIENSRURJVCBVTklPTnw4MzggRUdMSU4gUEtXWV5eRlQgV0FMVE9OIEJFQUNIXkZMXjMyNTQ3fCg5OTkpOTk5LTk5OTl8fHxGDUdUMXwyDUlOMXwxfFVIQ0hNT3x8VU5JVEVEIEhFQUxUSENBUkUgSE1PfFBPIEJPWCA3NDA4MDBeXkFUTEFOVEFeR0FeMzAzNzReVVNBfHwoODc3KTg0Mi0zMjEwfDkxMDUwMHxFR0xJTiBGRURFUkFMIENSRURJVCBVTklPTnx8fDIwMTgwMTAxfHxOUi9PXjIwMTgwNTMxfHxSSU5HU1RBRF5CUk9OXkx8MzN8MTk4NDA1Mjl8fHx8fHx8fHx8fHx8fHx8fHw5MzI2ODM3NTB8fHx8fHx8TQ0=</inboundTemplate>
            <outboundTemplate encoding="base64"></outboundTemplate>
            <inboundDataType>HL7V2</inboundDataType>
            <outboundDataType>JSON</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.11.0">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.11.0">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.11.0">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.11.0">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.11.0">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.11.0">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.11.0">
              <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.11.0">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.11.0">
            <elements/>
            <inboundDataType>JSON</inboundDataType>
            <outboundDataType>JSON</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.11.0">
              <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.11.0">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.11.0">
              <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.11.0">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.11.0">
            <elements>
              <com.mirth.connect.plugins.javascriptrule.JavaScriptRule version="3.11.0">
                <sequenceNumber>0</sequenceNumber>
                <enabled>true</enabled>
                <script>var result = true;
if ($(&apos;PatientId&apos;).length() &gt; 0) {
    result = true;
}else{
	result = false;
}
var des=responseMap.get(&apos;Validate Discharged&apos;).getStatus();

if (des == &apos;SENT&apos;) {
    result = true;
}else{
	result = false
}


return result;</script>
              </com.mirth.connect.plugins.javascriptrule.JavaScriptRule>
            </elements>
          </filter>
          <transportName>Channel Writer</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
        <connector version="3.11.0">
          <metaDataId>2</metaDataId>
          <name>Set Attending Doctor</name>
          <properties class="com.mirth.connect.connectors.vm.VmDispatcherProperties" version="3.11.0">
            <pluginProperties/>
            <destinationConnectorProperties version="3.11.0">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
              <reattachAttachments>true</reattachAttachments>
            </destinationConnectorProperties>
            <channelId>none</channelId>
            <channelTemplate>${message.transformedData}</channelTemplate>
            <mapVariables/>
          </properties>
          <transformer version="3.11.0">
            <elements>
              <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.11.0">
                <name>Validate attending doctor</name>
                <sequenceNumber>0</sequenceNumber>
                <enabled>true</enabled>
                <script>var firstName = msg[&apos;PV1&apos;][&apos;PV1.7&apos;][&apos;PV1.7.3&apos;].toString();
var middleName = msg[&apos;PV1&apos;][&apos;PV1.7&apos;][&apos;PV1.7.4&apos;].toString();
var lastName = msg[&apos;PV1&apos;][&apos;PV1.7&apos;][&apos;PV1.7.2&apos;].toString();
var internalDoctorName = &quot;&quot;;
if(firstName.length&gt;0 &amp;&amp; lastName.length&gt;0){
	internalDoctorName = getProvider(firstName,middleName,lastName);
}else{
	return;
}


if (internalDoctorName.length &gt; 0) {
    channelMap.put(&apos;AttendingDoctor&apos;, internalDoctorName[0].FullName);
} else {

    var doctorName = firstName;
    if(middleName.length&gt;0){
    	doctorName += &quot; &quot; + middleName;
    }
    doctorName += &quot; &quot; + lastName;
    if(doctorName.length&gt;0){
    	channelMap.put(&apos;AttendingDoctor&apos;, doctorName + &quot; *&quot;);
    }
    
}</script>
              </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
            </elements>
            <inboundTemplate encoding="base64">TVNIfF5+XCZ8fENPQ1RXfHx8MjAxODA2MDQxNDA4fHxBRFReQTA0fFRXR1RBRE0uMS41Mjk2NzY4fFB8Mi4yDUVWTnxBMDR8MjAxODA2MDQxNDA4fHx8RUNDMDIxN15DUklQU15FTElaQUJFVEgNUElEfDF8fEcwMDAxNzY0ODd8Rzk3ODEwfFNUQUxOQUtFUl5DQUxFQl5UfHwyMDAwMTAxM3xNfHxXfDEyMjUgU0hJUExFWSBEUl5eTklDRVZJTExFXkZMXjMyNTc4XlVTQV5eXk9LQUxPT1NBfHwoODUwKTUxNy03ODc2fCg5OTkpOTk5LTk5OTl8RU5HfFN8Q09DVFd8RzAwMDk3ODQwNTc2fDk5OS05OS05OTk5DU5LMXwxfFJJTkdTVEFEXkJST058RkF8MTIyNSBTSElQTEVZIERSXl5OSUNFVklMTEVeRkxeMzI1NzheVVNBXl5eT0tBTE9PU0F8KDg1MCk1MTctNzg3Ng1QVjF8MXxPfEcuUFR8RUx8fEcuUFR8TUVFRVZeTWVla3NeRXZhbnxNRUVFVl5NZWVrc15FdmFuXlJeXl5NRHxNRUVFVl5NZWVrc15FdmFuXlJeXl5NRHxQVHx8fHxDUnx8Tnx8UkNSfHwwN3x8fHx8fHx8fHx8fHx8fHx8fHxDT0NUV3xHUk9JTiBJU1NVRVN8UkVHfHx8MjAxODA2MDQxNDA3fHx8fHx8fHxNRUVFVl5NZWVrc15FdmFuXlJeXl5NRH5+fg1HVDF8MXx8UklOR1NUQUReQlJPTnx8MTIyNSBTSElQTEVZIERSXl5OSUNFVklMTEVeRkxeMzI1NzheVVNBXl5eT0tBTE9PU0F8KDg1MCk1MTctNzg3Nnx8MTk4NDA1Mjl8TXx8RkF8NTE2LTA0LTg0MDd8fHxFR0xJTiBGRURFUkFMIENSRURJVCBVTklPTnw4MzggRUdMSU4gUEtXWV5eRlQgV0FMVE9OIEJFQUNIXkZMXjMyNTQ3fCg5OTkpOTk5LTk5OTl8fHxGDUdUMXwyDUlOMXwxfFVIQ0hNT3x8VU5JVEVEIEhFQUxUSENBUkUgSE1PfFBPIEJPWCA3NDA4MDBeXkFUTEFOVEFeR0FeMzAzNzReVVNBfHwoODc3KTg0Mi0zMjEwfDkxMDUwMHxFR0xJTiBGRURFUkFMIENSRURJVCBVTklPTnx8fDIwMTgwMTAxfHxOUi9PXjIwMTgwNTMxfHxSSU5HU1RBRF5CUk9OXkx8MzN8MTk4NDA1Mjl8fHx8fHx8fHx8fHx8fHx8fHw5MzI2ODM3NTB8fHx8fHx8TQ0=</inboundTemplate>
            <outboundTemplate encoding="base64"></outboundTemplate>
            <inboundDataType>HL7V2</inboundDataType>
            <outboundDataType>HL7V2</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.11.0">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.11.0">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.11.0">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.11.0">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.11.0">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.11.0">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.11.0">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.11.0">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.11.0">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.11.0">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.11.0">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.11.0">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.11.0">
            <elements/>
            <inboundDataType>HL7V2</inboundDataType>
            <outboundDataType>HL7V2</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.11.0">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.11.0">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.11.0">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.11.0">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.11.0">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.11.0">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.11.0">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.11.0">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.11.0">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.11.0">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.11.0">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.11.0">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.11.0">
            <elements>
              <com.mirth.connect.plugins.javascriptrule.JavaScriptRule version="3.11.0">
                <sequenceNumber>0</sequenceNumber>
                <enabled>true</enabled>
                <script>var des=responseMap.get(&apos;Set Patient Validation&apos;).getStatus();

if (des == &apos;SENT&apos;) {
    return true;
}
return false;</script>
              </com.mirth.connect.plugins.javascriptrule.JavaScriptRule>
              <com.mirth.connect.plugins.rulebuilder.RuleBuilderRule version="3.11.0">
                <name>Accept message if &quot;msg[&apos;PV1&apos;][&apos;PV1.7&apos;][&apos;PV1.7.2&apos;].toString()&quot; exists</name>
                <sequenceNumber>1</sequenceNumber>
                <enabled>true</enabled>
                <operator>AND</operator>
                <field>msg[&apos;PV1&apos;][&apos;PV1.7&apos;][&apos;PV1.7.2&apos;].toString()</field>
                <condition>EXISTS</condition>
                <values/>
              </com.mirth.connect.plugins.rulebuilder.RuleBuilderRule>
              <com.mirth.connect.plugins.rulebuilder.RuleBuilderRule version="3.11.0">
                <name>Accept message if &quot;msg[&apos;PV1&apos;][&apos;PV1.7&apos;][&apos;PV1.7.3&apos;].toString()&quot; exists</name>
                <sequenceNumber>2</sequenceNumber>
                <enabled>true</enabled>
                <operator>AND</operator>
                <field>msg[&apos;PV1&apos;][&apos;PV1.7&apos;][&apos;PV1.7.3&apos;].toString()</field>
                <condition>EXISTS</condition>
                <values/>
              </com.mirth.connect.plugins.rulebuilder.RuleBuilderRule>
            </elements>
          </filter>
          <transportName>Channel Writer</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
        <connector version="3.11.0">
          <metaDataId>7</metaDataId>
          <name>Set Referring Doctor</name>
          <properties class="com.mirth.connect.connectors.vm.VmDispatcherProperties" version="3.11.0">
            <pluginProperties/>
            <destinationConnectorProperties version="3.11.0">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
              <reattachAttachments>true</reattachAttachments>
            </destinationConnectorProperties>
            <channelId>none</channelId>
            <channelTemplate>${message.transformedData}</channelTemplate>
            <mapVariables/>
          </properties>
          <transformer version="3.11.0">
            <elements>
              <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.11.0">
                <name>Validate referring doctor</name>
                <sequenceNumber>0</sequenceNumber>
                <enabled>true</enabled>
                <script>var firstName = msg[&apos;PV1&apos;][&apos;PV1.8&apos;][&apos;PV1.8.3&apos;].toString();
var middleName = msg[&apos;PV1&apos;][&apos;PV1.8&apos;][&apos;PV1.8.4&apos;].toString();
var lastName = msg[&apos;PV1&apos;][&apos;PV1.8&apos;][&apos;PV1.8.2&apos;].toString();
var internalDoctorName = &quot;&quot;;
if(firstName.length&gt;0 &amp;&amp; lastName.length&gt;0){
	internalDoctorName = getProvider(firstName,middleName,lastName);
}else{
	return;
}
if (internalDoctorName.length &gt; 0) {
    channelMap.put(&apos;ReferringDoctor&apos;, internalDoctorName[0].FullName);
} else {

    var doctorName = firstName;
    if(middleName.length&gt;0){
    	doctorName += &quot; &quot; + middleName;
    }
    doctorName += &quot; &quot; + lastName;
    channelMap.put(&apos;ReferringDoctor&apos;, doctorName + &quot; *&quot;);
}</script>
              </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
            </elements>
            <inboundTemplate encoding="base64">TVNIfF5+XCZ8fENPQ1RXfHx8MjAxODA2MDQxNDA4fHxBRFReQTA0fFRXR1RBRE0uMS41Mjk2NzY4fFB8Mi4yDUVWTnxBMDR8MjAxODA2MDQxNDA4fHx8RUNDMDIxN15DUklQU15FTElaQUJFVEgNUElEfDF8fEcwMDAxNzY0ODd8Rzk3ODEwfFNUQUxOQUtFUl5DQUxFQl5UfHwyMDAwMTAxM3xNfHxXfDEyMjUgU0hJUExFWSBEUl5eTklDRVZJTExFXkZMXjMyNTc4XlVTQV5eXk9LQUxPT1NBfHwoODUwKTUxNy03ODc2fCg5OTkpOTk5LTk5OTl8RU5HfFN8Q09DVFd8RzAwMDk3ODQwNTc2fDk5OS05OS05OTk5DU5LMXwxfFJJTkdTVEFEXkJST058RkF8MTIyNSBTSElQTEVZIERSXl5OSUNFVklMTEVeRkxeMzI1NzheVVNBXl5eT0tBTE9PU0F8KDg1MCk1MTctNzg3Ng1QVjF8MXxPfEcuUFR8RUx8fEcuUFR8TUVFRVZeTWVla3NeRXZhbnxNRUVFVl5NZWVrc15FdmFuXlJeXl5NRHxNRUVFVl5NZWVrc15FdmFuXlJeXl5NRHxQVHx8fHxDUnx8Tnx8UkNSfHwwN3x8fHx8fHx8fHx8fHx8fHx8fHxDT0NUV3xHUk9JTiBJU1NVRVN8UkVHfHx8MjAxODA2MDQxNDA3fHx8fHx8fHxNRUVFVl5NZWVrc15FdmFuXlJeXl5NRH5+fg1HVDF8MXx8UklOR1NUQUReQlJPTnx8MTIyNSBTSElQTEVZIERSXl5OSUNFVklMTEVeRkxeMzI1NzheVVNBXl5eT0tBTE9PU0F8KDg1MCk1MTctNzg3Nnx8MTk4NDA1Mjl8TXx8RkF8NTE2LTA0LTg0MDd8fHxFR0xJTiBGRURFUkFMIENSRURJVCBVTklPTnw4MzggRUdMSU4gUEtXWV5eRlQgV0FMVE9OIEJFQUNIXkZMXjMyNTQ3fCg5OTkpOTk5LTk5OTl8fHxGDUdUMXwyDUlOMXwxfFVIQ0hNT3x8VU5JVEVEIEhFQUxUSENBUkUgSE1PfFBPIEJPWCA3NDA4MDBeXkFUTEFOVEFeR0FeMzAzNzReVVNBfHwoODc3KTg0Mi0zMjEwfDkxMDUwMHxFR0xJTiBGRURFUkFMIENSRURJVCBVTklPTnx8fDIwMTgwMTAxfHxOUi9PXjIwMTgwNTMxfHxSSU5HU1RBRF5CUk9OXkx8MzN8MTk4NDA1Mjl8fHx8fHx8fHx8fHx8fHx8fHw5MzI2ODM3NTB8fHx8fHx8TQ0=</inboundTemplate>
            <outboundTemplate encoding="base64"></outboundTemplate>
            <inboundDataType>HL7V2</inboundDataType>
            <outboundDataType>HL7V2</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.11.0">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.11.0">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.11.0">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.11.0">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.11.0">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.11.0">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.11.0">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.11.0">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.11.0">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.11.0">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.11.0">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.11.0">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.11.0">
            <elements/>
            <inboundDataType>HL7V2</inboundDataType>
            <outboundDataType>HL7V2</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.11.0">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.11.0">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.11.0">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.11.0">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.11.0">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.11.0">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.11.0">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.11.0">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.11.0">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.11.0">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.11.0">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.11.0">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.11.0">
            <elements>
              <com.mirth.connect.plugins.javascriptrule.JavaScriptRule version="3.11.0">
                <sequenceNumber>0</sequenceNumber>
                <enabled>true</enabled>
                <script>var des=responseMap.get(&apos;Set Patient Validation&apos;).getStatus();

if (des == &apos;SENT&apos;) {
    return true;
}
return false;</script>
              </com.mirth.connect.plugins.javascriptrule.JavaScriptRule>
              <com.mirth.connect.plugins.rulebuilder.RuleBuilderRule version="3.11.0">
                <name>Accept message if &quot;msg[&apos;PV1&apos;][&apos;PV1.8&apos;][&apos;PV1.8.2&apos;].toString()&quot; exists</name>
                <sequenceNumber>1</sequenceNumber>
                <enabled>true</enabled>
                <operator>AND</operator>
                <field>msg[&apos;PV1&apos;][&apos;PV1.8&apos;][&apos;PV1.8.2&apos;].toString()</field>
                <condition>EXISTS</condition>
                <values/>
              </com.mirth.connect.plugins.rulebuilder.RuleBuilderRule>
              <com.mirth.connect.plugins.rulebuilder.RuleBuilderRule version="3.11.0">
                <name>Accept message if &quot;msg[&apos;PV1&apos;][&apos;PV1.8&apos;][&apos;PV1.8.3&apos;].toString()&quot; exists</name>
                <sequenceNumber>2</sequenceNumber>
                <enabled>true</enabled>
                <operator>AND</operator>
                <field>msg[&apos;PV1&apos;][&apos;PV1.8&apos;][&apos;PV1.8.3&apos;].toString()</field>
                <condition>EXISTS</condition>
                <values/>
              </com.mirth.connect.plugins.rulebuilder.RuleBuilderRule>
            </elements>
          </filter>
          <transportName>Channel Writer</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
        <connector version="3.11.0">
          <metaDataId>8</metaDataId>
          <name>Set Consulting Doctor</name>
          <properties class="com.mirth.connect.connectors.vm.VmDispatcherProperties" version="3.11.0">
            <pluginProperties/>
            <destinationConnectorProperties version="3.11.0">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
              <reattachAttachments>true</reattachAttachments>
            </destinationConnectorProperties>
            <channelId>none</channelId>
            <channelTemplate>${message.transformedData}</channelTemplate>
            <mapVariables/>
          </properties>
          <transformer version="3.11.0">
            <elements>
              <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.11.0">
                <name>Validate consulting doctor</name>
                <sequenceNumber>0</sequenceNumber>
                <enabled>true</enabled>
                <script>var firstName = msg[&apos;PV1&apos;][&apos;PV1.9&apos;][&apos;PV1.9.3&apos;].toString();
var middleName = msg[&apos;PV1&apos;][&apos;PV1.9&apos;][&apos;PV1.9.4&apos;].toString();
var lastName = msg[&apos;PV1&apos;][&apos;PV1.9&apos;][&apos;PV1.9.2&apos;].toString();
var internalDoctorName = &quot;&quot;;
if(firstName.length&gt;0 &amp;&amp; lastName.length&gt;0){
	internalDoctorName = getProvider(firstName,middleName,lastName);
}else{
	return;
}

if (internalDoctorName.length &gt; 0) {
    channelMap.put(&apos;ConsultingDoctor&apos;, internalDoctorName[0].FullName);
} else {

    var doctorName = firstName;
    if(middleName.length&gt;0){
    	doctorName += &quot; &quot; + middleName;
    }
    doctorName += &quot; &quot; + lastName;
    channelMap.put(&apos;ConsultingDoctor&apos;, doctorName + &quot; *&quot;);
}</script>
              </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
            </elements>
            <inboundTemplate encoding="base64">TVNIfF5+XCZ8fENPQ1RXfHx8MjAxODA2MDQxNDA4fHxBRFReQTA0fFRXR1RBRE0uMS41Mjk2NzY4fFB8Mi4yDUVWTnxBMDR8MjAxODA2MDQxNDA4fHx8RUNDMDIxN15DUklQU15FTElaQUJFVEgNUElEfDF8fEcwMDAxNzY0ODd8Rzk3ODEwfFNUQUxOQUtFUl5DQUxFQl5UfHwyMDAwMTAxM3xNfHxXfDEyMjUgU0hJUExFWSBEUl5eTklDRVZJTExFXkZMXjMyNTc4XlVTQV5eXk9LQUxPT1NBfHwoODUwKTUxNy03ODc2fCg5OTkpOTk5LTk5OTl8RU5HfFN8Q09DVFd8RzAwMDk3ODQwNTc2fDk5OS05OS05OTk5DU5LMXwxfFJJTkdTVEFEXkJST058RkF8MTIyNSBTSElQTEVZIERSXl5OSUNFVklMTEVeRkxeMzI1NzheVVNBXl5eT0tBTE9PU0F8KDg1MCk1MTctNzg3Ng1QVjF8MXxPfEcuUFR8RUx8fEcuUFR8TUVFRVZeTWVla3NeRXZhbnxNRUVFVl5NZWVrc15FdmFuXlJeXl5NRHxNRUVFVl5NZWVrc15FdmFuXlJeXl5NRHxQVHx8fHxDUnx8Tnx8UkNSfHwwN3x8fHx8fHx8fHx8fHx8fHx8fHxDT0NUV3xHUk9JTiBJU1NVRVN8UkVHfHx8MjAxODA2MDQxNDA3fHx8fHx8fHxNRUVFVl5NZWVrc15FdmFuXlJeXl5NRH5+fg1HVDF8MXx8UklOR1NUQUReQlJPTnx8MTIyNSBTSElQTEVZIERSXl5OSUNFVklMTEVeRkxeMzI1NzheVVNBXl5eT0tBTE9PU0F8KDg1MCk1MTctNzg3Nnx8MTk4NDA1Mjl8TXx8RkF8NTE2LTA0LTg0MDd8fHxFR0xJTiBGRURFUkFMIENSRURJVCBVTklPTnw4MzggRUdMSU4gUEtXWV5eRlQgV0FMVE9OIEJFQUNIXkZMXjMyNTQ3fCg5OTkpOTk5LTk5OTl8fHxGDUdUMXwyDUlOMXwxfFVIQ0hNT3x8VU5JVEVEIEhFQUxUSENBUkUgSE1PfFBPIEJPWCA3NDA4MDBeXkFUTEFOVEFeR0FeMzAzNzReVVNBfHwoODc3KTg0Mi0zMjEwfDkxMDUwMHxFR0xJTiBGRURFUkFMIENSRURJVCBVTklPTnx8fDIwMTgwMTAxfHxOUi9PXjIwMTgwNTMxfHxSSU5HU1RBRF5CUk9OXkx8MzN8MTk4NDA1Mjl8fHx8fHx8fHx8fHx8fHx8fHw5MzI2ODM3NTB8fHx8fHx8TQ0=</inboundTemplate>
            <outboundTemplate encoding="base64"></outboundTemplate>
            <inboundDataType>HL7V2</inboundDataType>
            <outboundDataType>HL7V2</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.11.0">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.11.0">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.11.0">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.11.0">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.11.0">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.11.0">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.11.0">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.11.0">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.11.0">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.11.0">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.11.0">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.11.0">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.11.0">
            <elements/>
            <inboundDataType>HL7V2</inboundDataType>
            <outboundDataType>HL7V2</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.11.0">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.11.0">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.11.0">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.11.0">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.11.0">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.11.0">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.11.0">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.11.0">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.11.0">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.11.0">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.11.0">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.11.0">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.11.0">
            <elements>
              <com.mirth.connect.plugins.javascriptrule.JavaScriptRule version="3.11.0">
                <sequenceNumber>0</sequenceNumber>
                <enabled>true</enabled>
                <script>var des=responseMap.get(&apos;Set Patient Validation&apos;).getStatus();

if (des == &apos;SENT&apos;) {
    return true;
}
return false;</script>
              </com.mirth.connect.plugins.javascriptrule.JavaScriptRule>
              <com.mirth.connect.plugins.rulebuilder.RuleBuilderRule version="3.11.0">
                <name>Accept message if &quot;msg[&apos;PV1&apos;][&apos;PV1.9&apos;][&apos;PV1.9.2&apos;].toString()&quot; exists</name>
                <sequenceNumber>1</sequenceNumber>
                <enabled>true</enabled>
                <operator>AND</operator>
                <field>msg[&apos;PV1&apos;][&apos;PV1.9&apos;][&apos;PV1.9.2&apos;].toString()</field>
                <condition>EXISTS</condition>
                <values/>
              </com.mirth.connect.plugins.rulebuilder.RuleBuilderRule>
              <com.mirth.connect.plugins.rulebuilder.RuleBuilderRule version="3.11.0">
                <name>Accept message if &quot;msg[&apos;PV1&apos;][&apos;PV1.9&apos;][&apos;PV1.9.3&apos;].toString()&quot; exists</name>
                <sequenceNumber>2</sequenceNumber>
                <enabled>true</enabled>
                <operator>AND</operator>
                <field>msg[&apos;PV1&apos;][&apos;PV1.9&apos;][&apos;PV1.9.3&apos;].toString()</field>
                <condition>EXISTS</condition>
                <values/>
              </com.mirth.connect.plugins.rulebuilder.RuleBuilderRule>
            </elements>
          </filter>
          <transportName>Channel Writer</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
        <connector version="3.11.0">
          <metaDataId>12</metaDataId>
          <name>Set Admitting Doctor</name>
          <properties class="com.mirth.connect.connectors.vm.VmDispatcherProperties" version="3.11.0">
            <pluginProperties/>
            <destinationConnectorProperties version="3.11.0">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
              <reattachAttachments>true</reattachAttachments>
            </destinationConnectorProperties>
            <channelId>none</channelId>
            <channelTemplate>${message.transformedData}</channelTemplate>
            <mapVariables/>
          </properties>
          <transformer version="3.11.0">
            <elements>
              <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.11.0">
                <name>Validate admitting doctor</name>
                <sequenceNumber>0</sequenceNumber>
                <enabled>true</enabled>
                <script>var firstName = msg[&apos;PV1&apos;][&apos;PV1.17&apos;][&apos;PV1.17.3&apos;].toString();
var middleName = msg[&apos;PV1&apos;][&apos;PV1.17&apos;][&apos;PV1.17.4&apos;].toString();
var lastName = msg[&apos;PV1&apos;][&apos;PV1.17&apos;][&apos;PV1.17.2&apos;].toString();
var internalDoctorName = &quot;&quot;;
if(firstName.length&gt;0 &amp;&amp; lastName.length&gt;0){
	internalDoctorName = getProvider(firstName,middleName,lastName);
}else{
	return;
}

if (internalDoctorName.length &gt; 0) {
    channelMap.put(&apos;AdmittingDoctor&apos;, internalDoctorName[0].FullName);
} else {

    var doctorName = firstName;
    if(middleName.length&gt;0){
    	doctorName += &quot; &quot; + middleName;
    }
    doctorName += &quot; &quot; + lastName;
    channelMap.put(&apos;AdmittingDoctor&apos;, doctorName + &quot; *&quot;);
}</script>
              </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
            </elements>
            <inboundTemplate encoding="base64">TVNIfF5+XCZ8fENPQ1RXfHx8MjAxODA2MDQxNDA4fHxBRFReQTA0fFRXR1RBRE0uMS41Mjk2NzY4fFB8Mi4yDUVWTnxBMDR8MjAxODA2MDQxNDA4fHx8RUNDMDIxN15DUklQU15FTElaQUJFVEgNUElEfDF8fEcwMDAxNzY0ODd8Rzk3ODEwfFNUQUxOQUtFUl5DQUxFQl5UfHwyMDAwMTAxM3xNfHxXfDEyMjUgU0hJUExFWSBEUl5eTklDRVZJTExFXkZMXjMyNTc4XlVTQV5eXk9LQUxPT1NBfHwoODUwKTUxNy03ODc2fCg5OTkpOTk5LTk5OTl8RU5HfFN8Q09DVFd8RzAwMDk3ODQwNTc2fDk5OS05OS05OTk5DU5LMXwxfFJJTkdTVEFEXkJST058RkF8MTIyNSBTSElQTEVZIERSXl5OSUNFVklMTEVeRkxeMzI1NzheVVNBXl5eT0tBTE9PU0F8KDg1MCk1MTctNzg3Ng1QVjF8MXxPfEcuUFR8RUx8fEcuUFR8TUVFRVZeTWVla3NeRXZhbnxNRUVFVl5NZWVrc15FdmFuXlJeXl5NRHxNRUVFVl5NZWVrc15FdmFuXlJeXl5NRHxQVHx8fHxDUnx8Tnx8UkNSfHwwN3x8fHx8fHx8fHx8fHx8fHx8fHxDT0NUV3xHUk9JTiBJU1NVRVN8UkVHfHx8MjAxODA2MDQxNDA3fHx8fHx8fHxNRUVFVl5NZWVrc15FdmFuXlJeXl5NRH5+fg1HVDF8MXx8UklOR1NUQUReQlJPTnx8MTIyNSBTSElQTEVZIERSXl5OSUNFVklMTEVeRkxeMzI1NzheVVNBXl5eT0tBTE9PU0F8KDg1MCk1MTctNzg3Nnx8MTk4NDA1Mjl8TXx8RkF8NTE2LTA0LTg0MDd8fHxFR0xJTiBGRURFUkFMIENSRURJVCBVTklPTnw4MzggRUdMSU4gUEtXWV5eRlQgV0FMVE9OIEJFQUNIXkZMXjMyNTQ3fCg5OTkpOTk5LTk5OTl8fHxGDUdUMXwyDUlOMXwxfFVIQ0hNT3x8VU5JVEVEIEhFQUxUSENBUkUgSE1PfFBPIEJPWCA3NDA4MDBeXkFUTEFOVEFeR0FeMzAzNzReVVNBfHwoODc3KTg0Mi0zMjEwfDkxMDUwMHxFR0xJTiBGRURFUkFMIENSRURJVCBVTklPTnx8fDIwMTgwMTAxfHxOUi9PXjIwMTgwNTMxfHxSSU5HU1RBRF5CUk9OXkx8MzN8MTk4NDA1Mjl8fHx8fHx8fHx8fHx8fHx8fHw5MzI2ODM3NTB8fHx8fHx8TQ0=</inboundTemplate>
            <outboundTemplate encoding="base64"></outboundTemplate>
            <inboundDataType>HL7V2</inboundDataType>
            <outboundDataType>HL7V2</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.11.0">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.11.0">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.11.0">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.11.0">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.11.0">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.11.0">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.11.0">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.11.0">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.11.0">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.11.0">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.11.0">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.11.0">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.11.0">
            <elements/>
            <inboundDataType>HL7V2</inboundDataType>
            <outboundDataType>HL7V2</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.11.0">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.11.0">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.11.0">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.11.0">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.11.0">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.11.0">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.11.0">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.11.0">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.11.0">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.11.0">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.11.0">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.11.0">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.11.0">
            <elements>
              <com.mirth.connect.plugins.javascriptrule.JavaScriptRule version="3.11.0">
                <sequenceNumber>0</sequenceNumber>
                <enabled>true</enabled>
                <script>var des=responseMap.get(&apos;Set Patient Validation&apos;).getStatus();

if (des == &apos;SENT&apos;) {
    return true;
}
return false;</script>
              </com.mirth.connect.plugins.javascriptrule.JavaScriptRule>
              <com.mirth.connect.plugins.rulebuilder.RuleBuilderRule version="3.11.0">
                <name>Accept message if &quot;msg[&apos;PV1&apos;][&apos;PV1.9&apos;][&apos;PV1.9.2&apos;].toString()&quot; exists</name>
                <sequenceNumber>1</sequenceNumber>
                <enabled>true</enabled>
                <operator>AND</operator>
                <field>msg[&apos;PV1&apos;][&apos;PV1.9&apos;][&apos;PV1.9.2&apos;].toString()</field>
                <condition>EXISTS</condition>
                <values/>
              </com.mirth.connect.plugins.rulebuilder.RuleBuilderRule>
              <com.mirth.connect.plugins.rulebuilder.RuleBuilderRule version="3.11.0">
                <name>Accept message if &quot;msg[&apos;PV1&apos;][&apos;PV1.9&apos;][&apos;PV1.9.3&apos;].toString()&quot; exists</name>
                <sequenceNumber>2</sequenceNumber>
                <enabled>true</enabled>
                <operator>AND</operator>
                <field>msg[&apos;PV1&apos;][&apos;PV1.9&apos;][&apos;PV1.9.3&apos;].toString()</field>
                <condition>EXISTS</condition>
                <values/>
              </com.mirth.connect.plugins.rulebuilder.RuleBuilderRule>
            </elements>
          </filter>
          <transportName>Channel Writer</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
        <connector version="3.11.0">
          <metaDataId>15</metaDataId>
          <name>Set Primary Doctor</name>
          <properties class="com.mirth.connect.connectors.vm.VmDispatcherProperties" version="3.11.0">
            <pluginProperties/>
            <destinationConnectorProperties version="3.11.0">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
              <reattachAttachments>true</reattachAttachments>
            </destinationConnectorProperties>
            <channelId>none</channelId>
            <channelTemplate>${message.transformedData}</channelTemplate>
            <mapVariables/>
          </properties>
          <transformer version="3.11.0">
            <elements>
              <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.11.0">
                <name>Validate admitting doctor</name>
                <sequenceNumber>0</sequenceNumber>
                <enabled>true</enabled>
                <script>var PrimaryDoctor = getPatientPrimaryDoctor($(&apos;PatientId&apos;));

if(PrimaryDoctor.length &gt; 0){
	channelMap.put(&apos;PrimaryDoctor&apos;, PrimaryDoctor[0].FullName)
	channelMap.put(&apos;PrimaryDoctorId&apos;, PrimaryDoctor[0].ProviderId)
}</script>
              </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
            </elements>
            <inboundTemplate encoding="base64">TVNIfF5+XCZ8fENPQ1RXfHx8MjAxODA2MDQxNDA4fHxBRFReQTA0fFRXR1RBRE0uMS41Mjk2NzY4fFB8Mi4yDUVWTnxBMDR8MjAxODA2MDQxNDA4fHx8RUNDMDIxN15DUklQU15FTElaQUJFVEgNUElEfDF8fEcwMDAxNzY0ODd8Rzk3ODEwfFNUQUxOQUtFUl5DQUxFQl5UfHwyMDAwMTAxM3xNfHxXfDEyMjUgU0hJUExFWSBEUl5eTklDRVZJTExFXkZMXjMyNTc4XlVTQV5eXk9LQUxPT1NBfHwoODUwKTUxNy03ODc2fCg5OTkpOTk5LTk5OTl8RU5HfFN8Q09DVFd8RzAwMDk3ODQwNTc2fDk5OS05OS05OTk5DU5LMXwxfFJJTkdTVEFEXkJST058RkF8MTIyNSBTSElQTEVZIERSXl5OSUNFVklMTEVeRkxeMzI1NzheVVNBXl5eT0tBTE9PU0F8KDg1MCk1MTctNzg3Ng1QVjF8MXxPfEcuUFR8RUx8fEcuUFR8TUVFRVZeTWVla3NeRXZhbnxNRUVFVl5NZWVrc15FdmFuXlJeXl5NRHxNRUVFVl5NZWVrc15FdmFuXlJeXl5NRHxQVHx8fHxDUnx8Tnx8UkNSfHwwN3x8fHx8fHx8fHx8fHx8fHx8fHxDT0NUV3xHUk9JTiBJU1NVRVN8UkVHfHx8MjAxODA2MDQxNDA3fHx8fHx8fHxNRUVFVl5NZWVrc15FdmFuXlJeXl5NRH5+fg1HVDF8MXx8UklOR1NUQUReQlJPTnx8MTIyNSBTSElQTEVZIERSXl5OSUNFVklMTEVeRkxeMzI1NzheVVNBXl5eT0tBTE9PU0F8KDg1MCk1MTctNzg3Nnx8MTk4NDA1Mjl8TXx8RkF8NTE2LTA0LTg0MDd8fHxFR0xJTiBGRURFUkFMIENSRURJVCBVTklPTnw4MzggRUdMSU4gUEtXWV5eRlQgV0FMVE9OIEJFQUNIXkZMXjMyNTQ3fCg5OTkpOTk5LTk5OTl8fHxGDUdUMXwyDUlOMXwxfFVIQ0hNT3x8VU5JVEVEIEhFQUxUSENBUkUgSE1PfFBPIEJPWCA3NDA4MDBeXkFUTEFOVEFeR0FeMzAzNzReVVNBfHwoODc3KTg0Mi0zMjEwfDkxMDUwMHxFR0xJTiBGRURFUkFMIENSRURJVCBVTklPTnx8fDIwMTgwMTAxfHxOUi9PXjIwMTgwNTMxfHxSSU5HU1RBRF5CUk9OXkx8MzN8MTk4NDA1Mjl8fHx8fHx8fHx8fHx8fHx8fHw5MzI2ODM3NTB8fHx8fHx8TQ0=</inboundTemplate>
            <outboundTemplate encoding="base64"></outboundTemplate>
            <inboundDataType>HL7V2</inboundDataType>
            <outboundDataType>HL7V2</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.11.0">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.11.0">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.11.0">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.11.0">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.11.0">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.11.0">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.11.0">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.11.0">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.11.0">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.11.0">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.11.0">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.11.0">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.11.0">
            <elements/>
            <inboundDataType>HL7V2</inboundDataType>
            <outboundDataType>HL7V2</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.11.0">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.11.0">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.11.0">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.11.0">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.11.0">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.11.0">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.11.0">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.11.0">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.11.0">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.11.0">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.11.0">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.11.0">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.11.0">
            <elements>
              <com.mirth.connect.plugins.javascriptrule.JavaScriptRule version="3.11.0">
                <sequenceNumber>0</sequenceNumber>
                <enabled>true</enabled>
                <script>var des=responseMap.get(&apos;Set Patient Validation&apos;).getStatus();

if (des == &apos;SENT&apos;) {
    return true;
}
return false;</script>
              </com.mirth.connect.plugins.javascriptrule.JavaScriptRule>
              <com.mirth.connect.plugins.rulebuilder.RuleBuilderRule version="3.11.0">
                <name>Accept message if &quot;msg[&apos;PV1&apos;][&apos;PV1.9&apos;][&apos;PV1.9.2&apos;].toString()&quot; exists</name>
                <sequenceNumber>1</sequenceNumber>
                <enabled>true</enabled>
                <operator>AND</operator>
                <field>msg[&apos;PV1&apos;][&apos;PV1.9&apos;][&apos;PV1.9.2&apos;].toString()</field>
                <condition>EXISTS</condition>
                <values/>
              </com.mirth.connect.plugins.rulebuilder.RuleBuilderRule>
              <com.mirth.connect.plugins.rulebuilder.RuleBuilderRule version="3.11.0">
                <name>Accept message if &quot;msg[&apos;PV1&apos;][&apos;PV1.9&apos;][&apos;PV1.9.3&apos;].toString()&quot; exists</name>
                <sequenceNumber>2</sequenceNumber>
                <enabled>true</enabled>
                <operator>AND</operator>
                <field>msg[&apos;PV1&apos;][&apos;PV1.9&apos;][&apos;PV1.9.3&apos;].toString()</field>
                <condition>EXISTS</condition>
                <values/>
              </com.mirth.connect.plugins.rulebuilder.RuleBuilderRule>
            </elements>
          </filter>
          <transportName>Channel Writer</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
        <connector version="3.11.0">
          <metaDataId>9</metaDataId>
          <name>Set EventType Description</name>
          <properties class="com.mirth.connect.connectors.vm.VmDispatcherProperties" version="3.11.0">
            <pluginProperties/>
            <destinationConnectorProperties version="3.11.0">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
              <reattachAttachments>true</reattachAttachments>
            </destinationConnectorProperties>
            <channelId>none</channelId>
            <channelTemplate>${message.transformedData}</channelTemplate>
            <mapVariables/>
          </properties>
          <transformer version="3.11.0">
            <elements>
              <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.11.0">
                <name>get event type desccription</name>
                <sequenceNumber>0</sequenceNumber>
                <enabled>true</enabled>
                <script>var eventcode = getEventTypeDescription(msg[&apos;EVN&apos;][&apos;EVN.1&apos;][&apos;EVN.1.1&apos;].toString());
	if(eventcode.length &gt; 0){		
		channelMap.put(&apos;EvtentTypeDescription&apos;, eventcode[0].Name);
	}

	return &quot;EvtentTypeDescription was not validated&quot;</script>
              </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
            </elements>
            <inboundTemplate encoding="base64">TVNIfF5+XCZ8fENPQ1RXfHx8MjAxODA2MDQxNDA4fHxBRFReQTA0fFRXR1RBRE0uMS41Mjk2NzY4fFB8Mi4yDUVWTnxBMDR8MjAxODA2MDQxNDA4fHx8RUNDMDIxN15DUklQU15FTElaQUJFVEgNUElEfDF8fEcwMDAxNzY0ODd8Rzk3ODEwfFNUQUxOQUtFUl5DQUxFQl5UfHwyMDAwMTAxM3xNfHxXfDEyMjUgU0hJUExFWSBEUl5eTklDRVZJTExFXkZMXjMyNTc4XlVTQV5eXk9LQUxPT1NBfHwoODUwKTUxNy03ODc2fCg5OTkpOTk5LTk5OTl8RU5HfFN8Q09DVFd8RzAwMDk3ODQwNTc2fDk5OS05OS05OTk5DU5LMXwxfFJJTkdTVEFEXkJST058RkF8MTIyNSBTSElQTEVZIERSXl5OSUNFVklMTEVeRkxeMzI1NzheVVNBXl5eT0tBTE9PU0F8KDg1MCk1MTctNzg3Ng1QVjF8MXxPfEcuUFR8RUx8fEcuUFR8TUVFRVZeTWVla3NeRXZhbnxNRUVFVl5NZWVrc15FdmFuXlJeXl5NRHxNRUVFVl5NZWVrc15FdmFuXlJeXl5NRHxQVHx8fHxDUnx8Tnx8UkNSfHwwN3x8fHx8fHx8fHx8fHx8fHx8fHxDT0NUV3xHUk9JTiBJU1NVRVN8UkVHfHx8MjAxODA2MDQxNDA3fHx8fHx8fHxNRUVFVl5NZWVrc15FdmFuXlJeXl5NRH5+fg1HVDF8MXx8UklOR1NUQUReQlJPTnx8MTIyNSBTSElQTEVZIERSXl5OSUNFVklMTEVeRkxeMzI1NzheVVNBXl5eT0tBTE9PU0F8KDg1MCk1MTctNzg3Nnx8MTk4NDA1Mjl8TXx8RkF8NTE2LTA0LTg0MDd8fHxFR0xJTiBGRURFUkFMIENSRURJVCBVTklPTnw4MzggRUdMSU4gUEtXWV5eRlQgV0FMVE9OIEJFQUNIXkZMXjMyNTQ3fCg5OTkpOTk5LTk5OTl8fHxGDUdUMXwyDUlOMXwxfFVIQ0hNT3x8VU5JVEVEIEhFQUxUSENBUkUgSE1PfFBPIEJPWCA3NDA4MDBeXkFUTEFOVEFeR0FeMzAzNzReVVNBfHwoODc3KTg0Mi0zMjEwfDkxMDUwMHxFR0xJTiBGRURFUkFMIENSRURJVCBVTklPTnx8fDIwMTgwMTAxfHxOUi9PXjIwMTgwNTMxfHxSSU5HU1RBRF5CUk9OXkx8MzN8MTk4NDA1Mjl8fHx8fHx8fHx8fHx8fHx8fHw5MzI2ODM3NTB8fHx8fHx8TQ0=</inboundTemplate>
            <outboundTemplate encoding="base64"></outboundTemplate>
            <inboundDataType>HL7V2</inboundDataType>
            <outboundDataType>JSON</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.11.0">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.11.0">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.11.0">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.11.0">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.11.0">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.11.0">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.11.0">
              <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.11.0">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.11.0">
            <elements/>
            <inboundDataType>JSON</inboundDataType>
            <outboundDataType>JSON</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.11.0">
              <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.11.0">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.11.0">
              <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.11.0">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.11.0">
            <elements>
              <com.mirth.connect.plugins.javascriptrule.JavaScriptRule version="3.11.0">
                <sequenceNumber>0</sequenceNumber>
                <enabled>true</enabled>
                <script>var des=responseMap.get(&apos;Set Patient Validation&apos;).getStatus();

if (des == &apos;SENT&apos;) {
    return true;
}
return false;</script>
              </com.mirth.connect.plugins.javascriptrule.JavaScriptRule>
              <com.mirth.connect.plugins.rulebuilder.RuleBuilderRule version="3.11.0">
                <name>Accept message if &quot;msg[&apos;EVN&apos;][&apos;EVN.1&apos;][&apos;EVN.1.1&apos;].toString()&quot; exists</name>
                <sequenceNumber>1</sequenceNumber>
                <enabled>true</enabled>
                <operator>AND</operator>
                <field>msg[&apos;EVN&apos;][&apos;EVN.1&apos;][&apos;EVN.1.1&apos;].toString()</field>
                <condition>EXISTS</condition>
                <values/>
              </com.mirth.connect.plugins.rulebuilder.RuleBuilderRule>
            </elements>
          </filter>
          <transportName>Channel Writer</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
        <connector version="3.11.0">
          <metaDataId>13</metaDataId>
          <name>Set Insurance</name>
          <properties class="com.mirth.connect.connectors.vm.VmDispatcherProperties" version="3.11.0">
            <pluginProperties/>
            <destinationConnectorProperties version="3.11.0">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
              <reattachAttachments>true</reattachAttachments>
            </destinationConnectorProperties>
            <channelId>none</channelId>
            <channelTemplate>${message.transformedData}</channelTemplate>
            <mapVariables/>
          </properties>
          <transformer version="3.11.0">
            <elements>
              <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.11.0">
                <name>get event type desccription</name>
                <sequenceNumber>0</sequenceNumber>
                <enabled>true</enabled>
                <script>$(&apos;InsuranceName&apos;)
var InsuranceName = &quot;&quot;;
var InsuranceType = &quot;&quot;;
var InsurancePolicyNumber = &quot;&quot;;
var count = getArrayOrXmlLength(msg[&apos;IN1&apos;].toString());

for (var i = 0; i &lt; count; i++) {
	if(!!msg[&apos;IN1&apos;][i]){
		InsuranceName = msg[&apos;IN1&apos;][i][&apos;IN1.4&apos;][&apos;IN1.4.1&apos;].toString();
		InsuranceType = msg[&apos;IN1&apos;][i][&apos;IN1.15&apos;][&apos;IN1.15.1&apos;].toString();
		InsurancePolicyNumber = msg[&apos;IN1&apos;][i][&apos;IN1.36&apos;][&apos;IN1.36.1&apos;].toString();		
	}
}

channelMap.put(&apos;InsuranceName&apos;, InsuranceName);
channelMap.put(&apos;InsuranceType&apos;, InsuranceType);
channelMap.put(&apos;InsurancePolicyNumber&apos;, InsurancePolicyNumber);</script>
              </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
            </elements>
            <inboundTemplate encoding="base64">TVNIfF5+XCZ8fENPQ1RXfHx8MjAxODA2MDQxNDA4fHxBRFReQTA0fFRXR1RBRE0uMS41Mjk2NzY4fFB8Mi4yDUVWTnxBMDR8MjAxODA2MDQxNDA4fHx8RUNDMDIxN15DUklQU15FTElaQUJFVEgNUElEfDF8fEcwMDAxNzY0ODd8Rzk3ODEwfFNUQUxOQUtFUl5DQUxFQl5UfHwyMDAwMTAxM3xNfHxXfDEyMjUgU0hJUExFWSBEUl5eTklDRVZJTExFXkZMXjMyNTc4XlVTQV5eXk9LQUxPT1NBfHwoODUwKTUxNy03ODc2fCg5OTkpOTk5LTk5OTl8RU5HfFN8Q09DVFd8RzAwMDk3ODQwNTc2fDk5OS05OS05OTk5DU5LMXwxfFJJTkdTVEFEXkJST058RkF8MTIyNSBTSElQTEVZIERSXl5OSUNFVklMTEVeRkxeMzI1NzheVVNBXl5eT0tBTE9PU0F8KDg1MCk1MTctNzg3Ng1QVjF8MXxPfEcuUFR8RUx8fEcuUFR8TUVFRVZeTWVla3NeRXZhbnxNRUVFVl5NZWVrc15FdmFuXlJeXl5NRHxNRUVFVl5NZWVrc15FdmFuXlJeXl5NRHxQVHx8fHxDUnx8Tnx8UkNSfHwwN3x8fHx8fHx8fHx8fHx8fHx8fHxDT0NUV3xHUk9JTiBJU1NVRVN8UkVHfHx8MjAxODA2MDQxNDA3fHx8fHx8fHxNRUVFVl5NZWVrc15FdmFuXlJeXl5NRH5+fg1HVDF8MXx8UklOR1NUQUReQlJPTnx8MTIyNSBTSElQTEVZIERSXl5OSUNFVklMTEVeRkxeMzI1NzheVVNBXl5eT0tBTE9PU0F8KDg1MCk1MTctNzg3Nnx8MTk4NDA1Mjl8TXx8RkF8NTE2LTA0LTg0MDd8fHxFR0xJTiBGRURFUkFMIENSRURJVCBVTklPTnw4MzggRUdMSU4gUEtXWV5eRlQgV0FMVE9OIEJFQUNIXkZMXjMyNTQ3fCg5OTkpOTk5LTk5OTl8fHxGDUdUMXwyDUlOMXwxfFVIQ0hNT3x8VU5JVEVEIEhFQUxUSENBUkUgSE1PfFBPIEJPWCA3NDA4MDBeXkFUTEFOVEFeR0FeMzAzNzReVVNBfHwoODc3KTg0Mi0zMjEwfDkxMDUwMHxFR0xJTiBGRURFUkFMIENSRURJVCBVTklPTnx8fDIwMTgwMTAxfHxOUi9PXjIwMTgwNTMxfHxSSU5HU1RBRF5CUk9OXkx8MzN8MTk4NDA1Mjl8fHx8fHx8fHx8fHx8fHx8fHw5MzI2ODM3NTB8fHx8fHx8TQ0=</inboundTemplate>
            <outboundTemplate encoding="base64"></outboundTemplate>
            <inboundDataType>HL7V2</inboundDataType>
            <outboundDataType>JSON</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.11.0">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.11.0">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.11.0">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.11.0">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.11.0">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.11.0">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.11.0">
              <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.11.0">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.11.0">
            <elements/>
            <inboundDataType>JSON</inboundDataType>
            <outboundDataType>JSON</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.11.0">
              <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.11.0">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.11.0">
              <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.11.0">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.11.0">
            <elements>
              <com.mirth.connect.plugins.javascriptrule.JavaScriptRule version="3.11.0">
                <sequenceNumber>0</sequenceNumber>
                <enabled>true</enabled>
                <script>var des=responseMap.get(&apos;Set Patient Validation&apos;).getStatus();

if (des == &apos;SENT&apos;) {
    return true;
}
return false;</script>
              </com.mirth.connect.plugins.javascriptrule.JavaScriptRule>
              <com.mirth.connect.plugins.rulebuilder.RuleBuilderRule version="3.11.0">
                <name>Accept message if &quot;msg[&apos;IN1&apos;].toString()&quot; exists</name>
                <sequenceNumber>1</sequenceNumber>
                <enabled>true</enabled>
                <operator>AND</operator>
                <field>msg[&apos;IN1&apos;].toString()</field>
                <condition>EXISTS</condition>
                <values/>
              </com.mirth.connect.plugins.rulebuilder.RuleBuilderRule>
            </elements>
          </filter>
          <transportName>Channel Writer</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
        <connector version="3.11.0">
          <metaDataId>10</metaDataId>
          <name>Set Diagnosis</name>
          <properties class="com.mirth.connect.connectors.vm.VmDispatcherProperties" version="3.11.0">
            <pluginProperties/>
            <destinationConnectorProperties version="3.11.0">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
              <reattachAttachments>true</reattachAttachments>
            </destinationConnectorProperties>
            <channelId>none</channelId>
            <channelTemplate>${message.transformedData}</channelTemplate>
            <mapVariables/>
          </properties>
          <transformer version="3.11.0">
            <elements>
              <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.11.0">
                <name>get diagnosis</name>
                <sequenceNumber>0</sequenceNumber>
                <enabled>true</enabled>
                <script>var diag = [];
var counter = getArrayOrXmlLength(msg[&apos;DG1&apos;].toString());
var i=0;
while(i &lt; counter){
	if(!!msg[&apos;DG1&apos;][i]){
		var diagnosis = new Diagnosis();
		diagnosis.id = msg[&apos;DG1&apos;][i][&apos;DG1.1&apos;][&apos;DG1.1.1&apos;].toString();
		diagnosis.code = msg[&apos;DG1&apos;][i][&apos;DG1.3&apos;][&apos;DG1.3.1&apos;].toString();
		diagnosis.description = msg[&apos;DG1&apos;][i][&apos;DG1.4&apos;][&apos;DG1.4.1&apos;].toString().replace(&quot;&apos;&quot;,&quot;&apos;&apos;&quot;);
		diagnosis.drgType = msg[&apos;DG1&apos;][i][&apos;DG1.6&apos;][&apos;DG1.6.1&apos;].toString();
		diagnosis.dateTime = msg[&apos;DG1&apos;][i][&apos;DG1.5&apos;][&apos;DG1.5.1&apos;].toString()
		diag.push(diagnosis);
	}
	i++
}
//for (var i = 0; i &lt; getArrayOrXmlLength(msg[&apos;DG1&apos;].toString()); i++) {
//	if(!!msg[&apos;DG1&apos;][i]){
//		var diagnosis = new Diagnosis();
//		diagnosis.id = msg[&apos;DG1&apos;][i][&apos;DG1.1&apos;][&apos;DG1.1.1&apos;].toString();
//		diagnosis.code = msg[&apos;DG1&apos;][i][&apos;DG1.3&apos;][&apos;DG1.3.1&apos;].toString();
//		diagnosis.description = msg[&apos;DG1&apos;][i][&apos;DG1.4&apos;][&apos;DG1.4.1&apos;].toString().replace(&quot;&apos;&quot;,&quot;&apos;&apos;&quot;);
//		diagnosis.drgType = msg[&apos;DG1&apos;][i][&apos;DG1.6&apos;][&apos;DG1.6.1&apos;].toString();
//		diagnosis.dateTime = msg[&apos;DG1&apos;][i][&apos;DG1.5&apos;][&apos;DG1.5.1&apos;].toString()
//		diag.push(diagnosis);
//	}	
//}

channelMap.put(&apos;Diagnosis&apos;, diag);</script>
              </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
            </elements>
            <inboundTemplate encoding="base64">TVNIfF5+XCZ8fENPQ1dSfHx8MjAxODA2MDQxNDEwfHxBRFReQTA4fFdSR1RBRE0uMS4yMzgzMzQxNXxQfDIuMgpFVk58QTA4fDIwMTgwNjA0MTQxMHx8fDFGU0xBUTcyOTheQkFSUkVSQV5KT05BTFlOClBJRHwxfHxIMDAwNzIxOTYyfEg2MDI2MzJ8Sk9ITlNPTl5ET1JFRU5eTFlOTnx8MTk1OTA1MjF8RnxKT0hOU09OXkRPUkVFTnxXfDY5MDIgRkVSTkFORElOQSBSRF5eTkFWQVJSRV5GTF4zMjU2Nl5VU0FeXl5TQU5UQVJPU0F8fCg4NTApOTM2LTYyMjN8KDk5OSk5OTktOTk5OXxFTkd8TXxDT0NXUnxIMDAxMjk4NjA0NDh8MzAxLTY2LTg3NzYKTksxfDF8Sk9ITlNPTl5BTEFOfFNQfDY5MDIgRkVSTkFORElOQSBSRF5eTkFWQVJSRV5GTF4zMjU2Nl5VU0FeXl5TQU5UQVJPU0F8KDg1MCkzODQtNDYzOCBDRUxMfCg4NTApNDUyLTQ5NTMgV0sKUFYxfDF8SXxILjVOXkguNTE0XkF8RUx8fHxTRUxSSV5TZWxsZXJzXlJpY2hhcmReR15eXk1EfFNFTFJJXlNlbGxlcnNeUmljaGFyZF5HXl5eTUR8Q0FWQ0heQ2F2ZV5DaHJpc3RvcGhlcnxTVVJHfHx8fENSfHxOfFNFTFJJXlNlbGxlcnNeUmljaGFyZF5HXl5eTUR8SU58fDA2fHx8fHx8fHx8fHx8fHx8fC5IfHx8Q09DV1J8T1NURU9BUlRIUklUSVN8RElTfHx8MjAxODA1MzEwNTE5fDIwMTgwNjAxMTY0MHx8fHx8fHxTQUdUQV5TYWdoaXJeVGFoZXJeTV5eXk1EXl5eXl5eWFh+fn4KREcxfDF8STEwfE0xNy4xMXxVTklMQVRFUkFMIFBSSU1BUlkgT1NURU9BUlRIUklUSVMsIFJJR0hUIEtORUV8fEF8fDQ3MHx8fDk4NjAuNjR8fHx8fHx8TgpERzF8MnxJMTB8TTE3LjExfFVOSUxBVEVSQUwgUFJJTUFSWSBPU1RFT0FSVEhSSVRJUywgUklHSFQgS05FRXx8V3x8NDcwfHx8OTg2MC42NHx8fHx8fHxOCkRHMXwzfEkxMHxNMjEuMDYxfFZBTEdVUyBERUZPUk1JVFksIE5PVCBFTFNFV0hFUkUgQ0xBU1NJRklFRCwgUklHSFQgfHxXfHw0NzB8fHw5ODYwLjY0fHx8fHx8fE4KREcxfDR8STEwfEU1NS45fFZJVEFNSU4gRCBERUZJQ0lFTkNZLCBVTlNQRUNJRklFRHx8V3x8NDcwfHx8OTg2MC42NHx8fHx8fHxOCkRHMXw1fEkxMHxGMTcuMjAwfE5JQ09USU5FIERFUEVOREVOQ0UsIFVOU1BFQ0lGSUVELCBVTkNPTVBMSUNBVEVEfHxXfHw0NzB8fHw5ODYwLjY0fHx8fHx8fE4KREcxfDZ8STEwfEYzMi45fE1BSk9SIERFUFJFU1NJVkUgRElTT1JERVIsIFNJTkdMRSBFUElTT0RFLCBVTlNQRUNJfHxXfHw0NzB8fHw5ODYwLjY0fHx8fHx8fE4KREcxfDd8STEwfEsyMS45fEdBU1RSTy1FU09QSEFHRUFMIFJFRkxVWCBESVNFQVNFIFdJVEhPVVQgRVNPUEhBR0lUfHxXfHw0NzB8fHw5ODYwLjY0fHx8fHx8fE4KREcxfDh8STEwfEszMS44NHxHQVNUUk9QQVJFU0lTfHxXfHw0NzB8fHw5ODYwLjY0fHx8fHx8fE4KR1QxfDF8fEpPSE5TT05eRE9SRUVOXkxZTk58fDY5MDIgRkVSTkFORElOQSBSRF5eTkFWQVJSRV5GTF4zMjU2Nl5VU0FeXl5TQU5UQVJPU0F8KDg1MCk5MzYtNjIyM3x8MTk1OTA1MjF8Rnx8U0F8MzAxLTY2LTg3NzZ8fHxSRVRJUkVEfC5eXi5eWFheMDAwMDB8KDk5OSk5OTktOTk5OQpHVDF8Mnx8Sk9ITlNPTl5BTEFOXkZ8fC5eXi5eWFheOTk5OTk5XlVTQV5eXkVTQ0FNQklBfCg4NTApOTM2LTYyMjN8fDE5MDEwMTAxfE18fFNQCklOMXwxfFRSSVNURHx8VFJJQ0FSRSBFQVNUfFBPIEJPWCA3OTgxXl5NQURJU09OXldJXjUzNzA3LTc5ODFeVVNBfHwoODAwKTQ0NC01NDQ1fENBUC1PNnxVTklURUQgU1RBVEVTIE5BVll8fHwyMDE4MDEwMXx8MTgxMDEwMjQ0OTMvSV4yMDE4MDUzMXx8Sk9ITlNPTl5BTEFOXkZ8MDJ8MTkwMTAxMDF8fHx8fHx8fHx8fHx8fHx8fHwwMDMwMDE2NTQwNHx8fHx8fHxNClBSMXwxfDM1fDBTUkMwSjleXkkxMHxSRVBMQUNFIE9GIFIgS05FRSBKVCBXSVRIIFNZTlRIIFNVQiwgQ0VNRU5ULCBPUEVOIHwyMDE4MDUzMXx8fHx8fFNFTFJJCg==</inboundTemplate>
            <outboundTemplate encoding="base64"></outboundTemplate>
            <inboundDataType>HL7V2</inboundDataType>
            <outboundDataType>JSON</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.11.0">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.11.0">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.11.0">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.11.0">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.11.0">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.11.0">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.11.0">
              <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.11.0">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.11.0">
            <elements/>
            <inboundDataType>JSON</inboundDataType>
            <outboundDataType>JSON</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.11.0">
              <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.11.0">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.11.0">
              <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.11.0">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.11.0">
            <elements>
              <com.mirth.connect.plugins.javascriptrule.JavaScriptRule version="3.11.0">
                <sequenceNumber>0</sequenceNumber>
                <enabled>true</enabled>
                <script>var des=responseMap.get(&apos;Set Patient Validation&apos;).getStatus();

if (des == &apos;SENT&apos;) {
    return true;
}
return false;</script>
              </com.mirth.connect.plugins.javascriptrule.JavaScriptRule>
              <com.mirth.connect.plugins.javascriptrule.JavaScriptRule version="3.11.0">
                <name></name>
                <sequenceNumber>1</sequenceNumber>
                <enabled>true</enabled>
                <operator>AND</operator>
                <script>if (!!msg[&apos;DG1&apos;][0]) {
    return true;
}
return false;</script>
              </com.mirth.connect.plugins.javascriptrule.JavaScriptRule>
            </elements>
          </filter>
          <transportName>Channel Writer</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
        <connector version="3.11.0">
          <metaDataId>11</metaDataId>
          <name>Set Procedures</name>
          <properties class="com.mirth.connect.connectors.vm.VmDispatcherProperties" version="3.11.0">
            <pluginProperties/>
            <destinationConnectorProperties version="3.11.0">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
              <reattachAttachments>true</reattachAttachments>
            </destinationConnectorProperties>
            <channelId>none</channelId>
            <channelTemplate>${message.transformedData}</channelTemplate>
            <mapVariables/>
          </properties>
          <transformer version="3.11.0">
            <elements>
              <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.11.0">
                <name>get diagnosis</name>
                <sequenceNumber>0</sequenceNumber>
                <enabled>true</enabled>
                <script>var proc = [];
var counter = getArrayOrXmlLength(msg[&apos;PR1&apos;].toString());
var i=0;
while(i &lt; counter){
		if(!!msg[&apos;PR1&apos;][i]){
		var procedure = new Procedure();
		procedure.id = msg[&apos;PR1&apos;][i][&apos;PR1.1&apos;][&apos;PR1.1.1&apos;].toString();
		procedure.code =msg[&apos;PR1&apos;][i][&apos;PR1.3&apos;][&apos;PR1.3.1&apos;].toString();
		procedure.description =msg[&apos;PR1&apos;][i][&apos;PR1.4&apos;][&apos;PR1.4.1&apos;].toString();
		procedure.dateTime =msg[&apos;PR1&apos;][i][&apos;PR1.5&apos;][&apos;PR1.5.1&apos;].toString();
		procedure.surgeon =msg[&apos;PR1&apos;][i][&apos;PR1.11&apos;][&apos;PR1.11.1&apos;].toString();
		proc.push(procedure);
	}
	i++
}
//for (var i = 0; i &lt; getArrayOrXmlLength(msg[&apos;PR1&apos;].toString()); i++) {
//	if(!!msg[&apos;PR1&apos;][i]){
//		var procedure = new Procedure();
//		procedure.id = msg[&apos;PR1&apos;][i][&apos;PR1.1&apos;][&apos;PR1.1.1&apos;].toString();
//		procedure.code =msg[&apos;PR1&apos;][i][&apos;PR1.3&apos;][&apos;PR1.3.1&apos;].toString();
//		procedure.description =msg[&apos;PR1&apos;][i][&apos;PR1.4&apos;][&apos;PR1.4.1&apos;].toString();
//		procedure.dateTime =msg[&apos;PR1&apos;][i][&apos;PR1.5&apos;][&apos;PR1.5.1&apos;].toString();
//		procedure.surgeon =msg[&apos;PR1&apos;][i][&apos;PR1.11&apos;][&apos;PR1.11.1&apos;].toString();
//
//		
//		proc.push(procedure);
//	}	
//}

channelMap.put(&apos;Procedure&apos;, proc);</script>
              </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
            </elements>
            <inboundTemplate encoding="base64">TVNIfF5+XCZ8fENPQ1dSfHx8MjAxODA2MDQxNDEwfHxBRFReQTA4fFdSR1RBRE0uMS4yMzgzMzQxNXxQfDIuMgpFVk58QTA4fDIwMTgwNjA0MTQxMHx8fDFGU0xBUTcyOTheQkFSUkVSQV5KT05BTFlOClBJRHwxfHxIMDAwNzIxOTYyfEg2MDI2MzJ8Sk9ITlNPTl5ET1JFRU5eTFlOTnx8MTk1OTA1MjF8RnxKT0hOU09OXkRPUkVFTnxXfDY5MDIgRkVSTkFORElOQSBSRF5eTkFWQVJSRV5GTF4zMjU2Nl5VU0FeXl5TQU5UQVJPU0F8fCg4NTApOTM2LTYyMjN8KDk5OSk5OTktOTk5OXxFTkd8TXxDT0NXUnxIMDAxMjk4NjA0NDh8MzAxLTY2LTg3NzYKTksxfDF8Sk9ITlNPTl5BTEFOfFNQfDY5MDIgRkVSTkFORElOQSBSRF5eTkFWQVJSRV5GTF4zMjU2Nl5VU0FeXl5TQU5UQVJPU0F8KDg1MCkzODQtNDYzOCBDRUxMfCg4NTApNDUyLTQ5NTMgV0sKUFYxfDF8SXxILjVOXkguNTE0XkF8RUx8fHxTRUxSSV5TZWxsZXJzXlJpY2hhcmReR15eXk1EfFNFTFJJXlNlbGxlcnNeUmljaGFyZF5HXl5eTUR8Q0FWQ0heQ2F2ZV5DaHJpc3RvcGhlcnxTVVJHfHx8fENSfHxOfFNFTFJJXlNlbGxlcnNeUmljaGFyZF5HXl5eTUR8SU58fDA2fHx8fHx8fHx8fHx8fHx8fC5IfHx8Q09DV1J8T1NURU9BUlRIUklUSVN8RElTfHx8MjAxODA1MzEwNTE5fDIwMTgwNjAxMTY0MHx8fHx8fHxTQUdUQV5TYWdoaXJeVGFoZXJeTV5eXk1EXl5eXl5eWFh+fn4KREcxfDF8STEwfE0xNy4xMXxVTklMQVRFUkFMIFBSSU1BUlkgT1NURU9BUlRIUklUSVMsIFJJR0hUIEtORUV8fEF8fDQ3MHx8fDk4NjAuNjR8fHx8fHx8TgpERzF8MnxJMTB8TTE3LjExfFVOSUxBVEVSQUwgUFJJTUFSWSBPU1RFT0FSVEhSSVRJUywgUklHSFQgS05FRXx8V3x8NDcwfHx8OTg2MC42NHx8fHx8fHxOCkRHMXwzfEkxMHxNMjEuMDYxfFZBTEdVUyBERUZPUk1JVFksIE5PVCBFTFNFV0hFUkUgQ0xBU1NJRklFRCwgUklHSFQgfHxXfHw0NzB8fHw5ODYwLjY0fHx8fHx8fE4KREcxfDR8STEwfEU1NS45fFZJVEFNSU4gRCBERUZJQ0lFTkNZLCBVTlNQRUNJRklFRHx8V3x8NDcwfHx8OTg2MC42NHx8fHx8fHxOCkRHMXw1fEkxMHxGMTcuMjAwfE5JQ09USU5FIERFUEVOREVOQ0UsIFVOU1BFQ0lGSUVELCBVTkNPTVBMSUNBVEVEfHxXfHw0NzB8fHw5ODYwLjY0fHx8fHx8fE4KREcxfDZ8STEwfEYzMi45fE1BSk9SIERFUFJFU1NJVkUgRElTT1JERVIsIFNJTkdMRSBFUElTT0RFLCBVTlNQRUNJfHxXfHw0NzB8fHw5ODYwLjY0fHx8fHx8fE4KREcxfDd8STEwfEsyMS45fEdBU1RSTy1FU09QSEFHRUFMIFJFRkxVWCBESVNFQVNFIFdJVEhPVVQgRVNPUEhBR0lUfHxXfHw0NzB8fHw5ODYwLjY0fHx8fHx8fE4KREcxfDh8STEwfEszMS44NHxHQVNUUk9QQVJFU0lTfHxXfHw0NzB8fHw5ODYwLjY0fHx8fHx8fE4KR1QxfDF8fEpPSE5TT05eRE9SRUVOXkxZTk58fDY5MDIgRkVSTkFORElOQSBSRF5eTkFWQVJSRV5GTF4zMjU2Nl5VU0FeXl5TQU5UQVJPU0F8KDg1MCk5MzYtNjIyM3x8MTk1OTA1MjF8Rnx8U0F8MzAxLTY2LTg3NzZ8fHxSRVRJUkVEfC5eXi5eWFheMDAwMDB8KDk5OSk5OTktOTk5OQpHVDF8Mnx8Sk9ITlNPTl5BTEFOXkZ8fC5eXi5eWFheOTk5OTk5XlVTQV5eXkVTQ0FNQklBfCg4NTApOTM2LTYyMjN8fDE5MDEwMTAxfE18fFNQCklOMXwxfFRSSVNURHx8VFJJQ0FSRSBFQVNUfFBPIEJPWCA3OTgxXl5NQURJU09OXldJXjUzNzA3LTc5ODFeVVNBfHwoODAwKTQ0NC01NDQ1fENBUC1PNnxVTklURUQgU1RBVEVTIE5BVll8fHwyMDE4MDEwMXx8MTgxMDEwMjQ0OTMvSV4yMDE4MDUzMXx8Sk9ITlNPTl5BTEFOXkZ8MDJ8MTkwMTAxMDF8fHx8fHx8fHx8fHx8fHx8fHwwMDMwMDE2NTQwNHx8fHx8fHxNClBSMXwxfDM1fDBTUkMwSjleXkkxMHxSRVBMQUNFIE9GIFIgS05FRSBKVCBXSVRIIFNZTlRIIFNVQiwgQ0VNRU5ULCBPUEVOIHwyMDE4MDUzMXx8fHx8fFNFTFJJCg==</inboundTemplate>
            <outboundTemplate encoding="base64"></outboundTemplate>
            <inboundDataType>HL7V2</inboundDataType>
            <outboundDataType>JSON</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.11.0">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.11.0">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.11.0">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.11.0">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.11.0">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.11.0">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.11.0">
              <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.11.0">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.11.0">
            <elements/>
            <inboundDataType>JSON</inboundDataType>
            <outboundDataType>JSON</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.11.0">
              <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.11.0">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.11.0">
              <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.11.0">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.11.0">
            <elements>
              <com.mirth.connect.plugins.javascriptrule.JavaScriptRule version="3.11.0">
                <sequenceNumber>0</sequenceNumber>
                <enabled>true</enabled>
                <script>var des=responseMap.get(&apos;Set Patient Validation&apos;).getStatus();
if (des == &apos;SENT&apos;) {
    return true;
}
return false;</script>
              </com.mirth.connect.plugins.javascriptrule.JavaScriptRule>
              <com.mirth.connect.plugins.rulebuilder.RuleBuilderRule version="3.11.0">
                <name>Accept message if &quot;msg[&apos;PR1&apos;].toString()&quot; exists</name>
                <sequenceNumber>1</sequenceNumber>
                <enabled>true</enabled>
                <operator>AND</operator>
                <field>msg[&apos;PR1&apos;].toString()</field>
                <condition>EXISTS</condition>
                <values/>
              </com.mirth.connect.plugins.rulebuilder.RuleBuilderRule>
            </elements>
          </filter>
          <transportName>Channel Writer</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
        <connector version="3.11.0">
          <metaDataId>3</metaDataId>
          <name>Aggregate Data</name>
          <properties class="com.mirth.connect.connectors.js.JavaScriptDispatcherProperties" version="3.11.0">
            <pluginProperties/>
            <destinationConnectorProperties version="3.11.0">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
              <reattachAttachments>true</reattachAttachments>
            </destinationConnectorProperties>
            <script>return JSON.stringify($(&apos;Encounter&apos;));</script>
          </properties>
          <transformer version="3.11.0">
            <elements>
              <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.11.0">
                <name>encounter mapping</name>
                <sequenceNumber>0</sequenceNumber>
                <enabled>true</enabled>
                <script>var enc = new encounter();
enc.PatientId = $(&apos;PatientId&apos;);
enc.ExternalPatientId = msg[&apos;PID&apos;][&apos;PID.3&apos;][&apos;PID.3.1&apos;].toString();
enc.LastName = msg[&apos;PID&apos;][&apos;PID.5&apos;][&apos;PID.5.1&apos;].toString().replace(&quot;&apos;&quot;,&quot;&apos;&apos;&quot;);
enc.FirstName = msg[&apos;PID&apos;][&apos;PID.5&apos;][&apos;PID.5.2&apos;].toString().replace(&quot;&apos;&quot;,&quot;&apos;&apos;&quot;);
enc.EventDescription = $(&apos;EvtentTypeDescription&apos;);
enc.DOB = msg[&apos;PID&apos;][&apos;PID.7&apos;][&apos;PID.7.1&apos;].toString();
enc.PhoneNumber = msg[&apos;PID&apos;][&apos;PID.13&apos;][&apos;PID.13.1&apos;].toString();
var patientClass = msg[&apos;PV1&apos;][&apos;PV1.2&apos;][&apos;PV1.2.1&apos;].toString();

switch(patientClass) {
  case &quot;O&quot;:
    enc.PatientClass = &quot;Outpatient&quot;;
    break;
  case &quot;I&quot;:
    enc.PatientClass = &quot;Inpatient&quot;;
        break;
  case &quot;E&quot;:
    enc.PatientClass = &quot;Emergency&quot;;
        break;
  case &quot;P&quot;:
    enc.PatientClass = &quot;Preadmit&quot;;
    break;
  default:
    enc.PatientClass = &quot;Outpatient&quot;;
}
enc.SSN = msg[&apos;PID&apos;][&apos;PID.19&apos;][&apos;PID.19.1&apos;].toString();
enc.InsuranceName = $(&apos;InsuranceName&apos;);
enc.InsuranceType = $(&apos;InsuranceType&apos;);
enc.InsurancePolicyNumber = $(&apos;InsurancePolicyNumber&apos;);
enc.EventType = msg[&apos;EVN&apos;][&apos;EVN.1&apos;][&apos;EVN.1.1&apos;].toString();
enc.EventDate = msg[&apos;EVN&apos;][&apos;EVN.2&apos;][&apos;EVN.2.1&apos;].toString();
enc.AdmissionDate = msg[&apos;PV1&apos;][&apos;PV1.44&apos;][&apos;PV1.44.1&apos;].toString()
enc.AdmissionType = msg[&apos;PV1&apos;][&apos;PV1.4&apos;][&apos;PV1.4.1&apos;].toString()
enc.AttendingDoctor = $(&apos;AttendingDoctor&apos;);
enc.ReferringDoctor = $(&apos;ReferringDoctor&apos;);
enc.ConsultingDoctor = $(&apos;ConsultingDoctor&apos;);
enc.AdmittingDoctor = $(&apos;AdmittingDoctor&apos;);
enc.PrimaryDoctor = $(&apos;PrimaryDoctor&apos;);
enc.PrimaryDoctorId = $(&apos;PrimaryDoctorId&apos;);
enc.DischargeDisposition = msg[&apos;PV1&apos;][&apos;PV1.36&apos;][&apos;PV1.36.1&apos;].toString();
enc.DischargeDate = msg[&apos;PV1&apos;][&apos;PV1.45&apos;][&apos;PV1.45.1&apos;].toString();
enc.SendingFacility = msg[&apos;MSH&apos;][&apos;MSH.4&apos;][&apos;MSH.4.1&apos;].toString();
enc.ServicingFacility = msg[&apos;PV1&apos;][&apos;PV1.39&apos;][&apos;PV1.39.1&apos;].toString();
enc.EncounterID = msg[&apos;MSH&apos;][&apos;MSH.10&apos;][&apos;MSH.10.1&apos;].toString();
enc.DateProcessed = msg[&apos;MSH&apos;][&apos;MSH.7&apos;][&apos;MSH.7.1&apos;].toString();
enc.Diagnosis = &quot;&quot;;
enc.Procedures = &quot;&quot;;
if($(&apos;Diagnosis&apos;).length&gt;1){
	enc.Diagnosis = JSON.stringify($(&apos;Diagnosis&apos;));
}
if($(&apos;Procedure&apos;).length&gt;1){	
	enc.Procedures = JSON.stringify($(&apos;Procedure&apos;));&#xd;
}

channelMap.put(&apos;Encounter&apos;, validate(enc, &apos;&apos;, new Array()));
return enc;</script>
              </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
            </elements>
            <inboundTemplate encoding="base64">TVNIfF5+XCZ8fENPQ1RXfHx8MjAxODA2MDQxNDA4fHxBRFReQTA0fFRXR1RBRE0uMS41Mjk2NzY4fFB8Mi4yDUVWTnxBMDR8MjAxODA2MDQxNDA4fHx8RUNDMDIxN15DUklQU15FTElaQUJFVEgNUElEfDF8fEcwMDAxNzY0ODd8Rzk3ODEwfFNUQUxOQUtFUl5DQUxFQl5UfHwyMDAwMTAxM3xNfHxXfDEyMjUgU0hJUExFWSBEUl5eTklDRVZJTExFXkZMXjMyNTc4XlVTQV5eXk9LQUxPT1NBfHwoODUwKTUxNy03ODc2fCg5OTkpOTk5LTk5OTl8RU5HfFN8Q09DVFd8RzAwMDk3ODQwNTc2fDk5OS05OS05OTk5DU5LMXwxfFJJTkdTVEFEXkJST058RkF8MTIyNSBTSElQTEVZIERSXl5OSUNFVklMTEVeRkxeMzI1NzheVVNBXl5eT0tBTE9PU0F8KDg1MCk1MTctNzg3Ng1QVjF8MXxPfEcuUFR8RUx8fEcuUFR8TUVFRVZeTWVla3NeRXZhbnxNRUVFVl5NZWVrc15FdmFuXlJeXl5NRHxNRUVFVl5NZWVrc15FdmFuXlJeXl5NRHxQVHx8fHxDUnx8Tnx8UkNSfHwwN3x8fHx8fHx8fHx8fHx8fHx8fHxDT0NUV3xHUk9JTiBJU1NVRVN8UkVHfHx8MjAxODA2MDQxNDA3fHx8fHx8fHxNRUVFVl5NZWVrc15FdmFuXlJeXl5NRH5+fg1HVDF8MXx8UklOR1NUQUReQlJPTnx8MTIyNSBTSElQTEVZIERSXl5OSUNFVklMTEVeRkxeMzI1NzheVVNBXl5eT0tBTE9PU0F8KDg1MCk1MTctNzg3Nnx8MTk4NDA1Mjl8TXx8RkF8NTE2LTA0LTg0MDd8fHxFR0xJTiBGRURFUkFMIENSRURJVCBVTklPTnw4MzggRUdMSU4gUEtXWV5eRlQgV0FMVE9OIEJFQUNIXkZMXjMyNTQ3fCg5OTkpOTk5LTk5OTl8fHxGDUdUMXwyDUlOMXwxfFVIQ0hNT3x8VU5JVEVEIEhFQUxUSENBUkUgSE1PfFBPIEJPWCA3NDA4MDBeXkFUTEFOVEFeR0FeMzAzNzReVVNBfHwoODc3KTg0Mi0zMjEwfDkxMDUwMHxFR0xJTiBGRURFUkFMIENSRURJVCBVTklPTnx8fDIwMTgwMTAxfHxOUi9PXjIwMTgwNTMxfHxSSU5HU1RBRF5CUk9OXkx8MzN8MTk4NDA1Mjl8fHx8fHx8fHx8fHx8fHx8fHw5MzI2ODM3NTB8fHx8fHx8TQ0=</inboundTemplate>
            <outboundTemplate encoding="base64"></outboundTemplate>
            <inboundDataType>HL7V2</inboundDataType>
            <outboundDataType>HL7V2</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.11.0">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.11.0">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.11.0">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.11.0">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.11.0">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.11.0">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.11.0">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.11.0">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.11.0">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.11.0">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.11.0">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.11.0">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.11.0">
            <elements/>
            <inboundTemplate encoding="base64"></inboundTemplate>
            <outboundTemplate encoding="base64"></outboundTemplate>
            <inboundDataType>HL7V2</inboundDataType>
            <outboundDataType>HL7V2</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.11.0">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.11.0">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.11.0">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.11.0">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.11.0">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.11.0">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.11.0">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.11.0">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.11.0">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.11.0">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.11.0">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.11.0">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.11.0">
            <elements>
              <com.mirth.connect.plugins.javascriptrule.JavaScriptRule version="3.11.0">
                <sequenceNumber>0</sequenceNumber>
                <enabled>true</enabled>
                <script>var des=responseMap.get(&apos;Set Patient Validation&apos;).getStatus();
if (des == &apos;SENT&apos;) {
    return true;
}
return false;</script>
              </com.mirth.connect.plugins.javascriptrule.JavaScriptRule>
            </elements>
          </filter>
          <transportName>JavaScript Writer</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
        <connector version="3.11.0">
          <metaDataId>4</metaDataId>
          <name>Save Encounter</name>
          <properties class="com.mirth.connect.connectors.js.JavaScriptDispatcherProperties" version="3.11.0">
            <pluginProperties/>
            <destinationConnectorProperties version="3.11.0">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
              <reattachAttachments>true</reattachAttachments>
            </destinationConnectorProperties>
            <script>var enc =$(&apos;Encounter&apos;);
insertQueryBuilder(enc,&quot;Encounters&quot;);



</script>
          </properties>
          <transformer version="3.11.0">
            <elements/>
            <inboundTemplate encoding="base64"></inboundTemplate>
            <outboundTemplate encoding="base64"></outboundTemplate>
            <inboundDataType>HL7V2</inboundDataType>
            <outboundDataType>HL7V2</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.11.0">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.11.0">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.11.0">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.11.0">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.11.0">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.11.0">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.11.0">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.11.0">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.11.0">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.11.0">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.11.0">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.11.0">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.11.0">
            <elements/>
            <inboundDataType>HL7V2</inboundDataType>
            <outboundDataType>HL7V2</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.11.0">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.11.0">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.11.0">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.11.0">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.11.0">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.11.0">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.11.0">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.11.0">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.11.0">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.11.0">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.11.0">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.11.0">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.11.0">
            <elements>
              <com.mirth.connect.plugins.javascriptrule.JavaScriptRule version="3.11.0">
                <name></name>
                <sequenceNumber>0</sequenceNumber>
                <enabled>true</enabled>
                <script>var des=responseMap.get(&apos;Set Patient Validation&apos;).getStatus();
if (des == &apos;SENT&apos;) {
    return true;
}
return false;</script>
              </com.mirth.connect.plugins.javascriptrule.JavaScriptRule>
            </elements>
          </filter>
          <transportName>JavaScript Writer</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
      </destinationConnectors>
      <preprocessingScript>// Modify the message variable below to pre process data
return message;</preprocessingScript>
      <postprocessingScript>// This script executes once after a message has been processed
// Responses returned from here will be stored as &quot;Postprocessor&quot; in the response map
return;</postprocessingScript>
      <deployScript>// This script executes once when the channel is deployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</deployScript>
      <undeployScript>// This script executes once when the channel is undeployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</undeployScript>
      <properties version="3.11.0">
        <clearGlobalChannelMap>true</clearGlobalChannelMap>
        <messageStorageMode>DEVELOPMENT</messageStorageMode>
        <encryptData>false</encryptData>
        <removeContentOnCompletion>false</removeContentOnCompletion>
        <removeOnlyFilteredOnCompletion>false</removeOnlyFilteredOnCompletion>
        <removeAttachmentsOnCompletion>false</removeAttachmentsOnCompletion>
        <initialState>STARTED</initialState>
        <storeAttachments>true</storeAttachments>
        <metaDataColumns>
          <metaDataColumn>
            <name>SOURCE</name>
            <type>STRING</type>
            <mappingName>mirth_source</mappingName>
          </metaDataColumn>
          <metaDataColumn>
            <name>TYPE</name>
            <type>STRING</type>
            <mappingName>mirth_type</mappingName>
          </metaDataColumn>
        </metaDataColumns>
        <attachmentProperties version="3.11.0">
          <type>None</type>
          <properties/>
        </attachmentProperties>
        <resourceIds class="linked-hash-map">
          <entry>
            <string>Default Resource</string>
            <string>[Default Resource]</string>
          </entry>
        </resourceIds>
      </properties>
      <exportData>
        <metadata>
          <enabled>true</enabled>
          <lastModified>
            <time>1632188277264</time>
            <timezone>America/Bogota</timezone>
          </lastModified>
          <pruningSettings>
            <archiveEnabled>true</archiveEnabled>
          </pruningSettings>
        </metadata>
      </exportData>
    </channel>
    <channel version="3.11.0">
      <id>2319efdc-0b72-4a30-803f-9b109c43abda</id>
      <nextMetaDataId>17</nextMetaDataId>
      <name>Observations Feed</name>
      <description></description>
      <revision>12</revision>
      <sourceConnector version="3.11.0">
        <metaDataId>0</metaDataId>
        <name>sourceConnector</name>
        <properties class="com.mirth.connect.connectors.file.FileReceiverProperties" version="3.11.0">
          <pluginProperties/>
          <pollConnectorProperties version="3.11.0">
            <pollingType>INTERVAL</pollingType>
            <pollOnStart>false</pollOnStart>
            <pollingFrequency>5000</pollingFrequency>
            <pollingHour>0</pollingHour>
            <pollingMinute>0</pollingMinute>
            <cronJobs/>
            <pollConnectorPropertiesAdvanced>
              <weekly>true</weekly>
              <inactiveDays>
                <boolean>false</boolean>
                <boolean>false</boolean>
                <boolean>false</boolean>
                <boolean>false</boolean>
                <boolean>false</boolean>
                <boolean>false</boolean>
                <boolean>false</boolean>
                <boolean>false</boolean>
              </inactiveDays>
              <dayOfMonth>1</dayOfMonth>
              <allDay>true</allDay>
              <startingHour>8</startingHour>
              <startingMinute>0</startingMinute>
              <endingHour>17</endingHour>
              <endingMinute>0</endingMinute>
            </pollConnectorPropertiesAdvanced>
          </pollConnectorProperties>
          <sourceConnectorProperties version="3.11.0">
            <responseVariable>None</responseVariable>
            <respondAfterProcessing>true</respondAfterProcessing>
            <processBatch>false</processBatch>
            <firstResponse>false</firstResponse>
            <processingThreads>1</processingThreads>
            <resourceIds class="linked-hash-map">
              <entry>
                <string>Default Resource</string>
                <string>[Default Resource]</string>
              </entry>
            </resourceIds>
            <queueBufferSize>1000</queueBufferSize>
          </sourceConnectorProperties>
          <scheme>FILE</scheme>
          <host>root@b74b17d7221f:/tmp/</host>
          <fileFilter>*</fileFilter>
          <regex>false</regex>
          <directoryRecursion>false</directoryRecursion>
          <ignoreDot>true</ignoreDot>
          <anonymous>true</anonymous>
          <username>anonymous</username>
          <password>anonymous</password>
          <timeout>10000</timeout>
          <secure>true</secure>
          <passive>true</passive>
          <validateConnection>true</validateConnection>
          <afterProcessingAction>NONE</afterProcessingAction>
          <moveToDirectory></moveToDirectory>
          <moveToFileName></moveToFileName>
          <errorReadingAction>NONE</errorReadingAction>
          <errorResponseAction>AFTER_PROCESSING</errorResponseAction>
          <errorMoveToDirectory></errorMoveToDirectory>
          <errorMoveToFileName></errorMoveToFileName>
          <checkFileAge>true</checkFileAge>
          <fileAge>1000</fileAge>
          <fileSizeMinimum>0</fileSizeMinimum>
          <fileSizeMaximum></fileSizeMaximum>
          <ignoreFileSizeMaximum>true</ignoreFileSizeMaximum>
          <sortBy>date</sortBy>
          <binary>false</binary>
          <charsetEncoding>DEFAULT_ENCODING</charsetEncoding>
        </properties>
        <transformer version="3.11.0">
          <elements>
            <com.mirth.connect.plugins.mapper.MapperStep version="3.11.0">
              <name>PatientId</name>
              <sequenceNumber>0</sequenceNumber>
              <enabled>true</enabled>
              <variable>PatientId</variable>
              <mapping></mapping>
              <defaultValue>&apos;&apos;</defaultValue>
              <replacements/>
              <scope>CHANNEL</scope>
            </com.mirth.connect.plugins.mapper.MapperStep>
            <com.mirth.connect.plugins.mapper.MapperStep version="3.11.0">
              <name>PrimaryDoctor</name>
              <sequenceNumber>1</sequenceNumber>
              <enabled>true</enabled>
              <variable>PrimaryDoctor</variable>
              <mapping></mapping>
              <defaultValue>&apos;&apos;</defaultValue>
              <replacements/>
              <scope>GLOBAL</scope>
            </com.mirth.connect.plugins.mapper.MapperStep>
            <com.mirth.connect.plugins.mapper.MapperStep version="3.11.0">
              <name>PrimaryDoctorId</name>
              <sequenceNumber>2</sequenceNumber>
              <enabled>true</enabled>
              <variable>PrimaryDoctorId</variable>
              <mapping></mapping>
              <defaultValue>&apos;&apos;</defaultValue>
              <replacements/>
              <scope>CHANNEL</scope>
            </com.mirth.connect.plugins.mapper.MapperStep>
            <com.mirth.connect.plugins.mapper.MapperStep version="3.11.0">
              <name>InsuranceName</name>
              <sequenceNumber>3</sequenceNumber>
              <enabled>true</enabled>
              <variable>InsuranceName</variable>
              <mapping></mapping>
              <defaultValue>&apos;&apos;</defaultValue>
              <replacements/>
              <scope>CHANNEL</scope>
            </com.mirth.connect.plugins.mapper.MapperStep>
            <com.mirth.connect.plugins.mapper.MapperStep version="3.11.0">
              <name>InsuranceType</name>
              <sequenceNumber>4</sequenceNumber>
              <enabled>true</enabled>
              <variable>InsuranceType</variable>
              <mapping></mapping>
              <defaultValue>&apos;&apos;</defaultValue>
              <replacements/>
              <scope>CHANNEL</scope>
            </com.mirth.connect.plugins.mapper.MapperStep>
            <com.mirth.connect.plugins.mapper.MapperStep version="3.11.0">
              <name>InsurancePolicyNumber</name>
              <sequenceNumber>5</sequenceNumber>
              <enabled>true</enabled>
              <variable>InsurancePolicyNumber</variable>
              <mapping></mapping>
              <defaultValue>&apos;&apos;</defaultValue>
              <replacements/>
              <scope>CHANNEL</scope>
            </com.mirth.connect.plugins.mapper.MapperStep>
            <com.mirth.connect.plugins.mapper.MapperStep version="3.11.0">
              <name>Observations</name>
              <sequenceNumber>6</sequenceNumber>
              <enabled>true</enabled>
              <variable>Observations</variable>
              <mapping></mapping>
              <defaultValue>[]</defaultValue>
              <replacements/>
              <scope>CHANNEL</scope>
            </com.mirth.connect.plugins.mapper.MapperStep>
          </elements>
          <inboundTemplate encoding="base64"></inboundTemplate>
          <outboundTemplate encoding="base64"></outboundTemplate>
          <inboundDataType>HL7V2</inboundDataType>
          <outboundDataType>HL7V2</outboundDataType>
          <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.11.0">
            <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.11.0">
              <handleRepetitions>true</handleRepetitions>
              <handleSubcomponents>true</handleSubcomponents>
              <useStrictParser>false</useStrictParser>
              <useStrictValidation>false</useStrictValidation>
              <stripNamespaces>true</stripNamespaces>
              <segmentDelimiter>\r</segmentDelimiter>
              <convertLineBreaks>true</convertLineBreaks>
            </serializationProperties>
            <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.11.0">
              <useStrictParser>false</useStrictParser>
              <useStrictValidation>false</useStrictValidation>
              <segmentDelimiter>\r</segmentDelimiter>
            </deserializationProperties>
            <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.11.0">
              <splitType>MSH_Segment</splitType>
              <batchScript></batchScript>
            </batchProperties>
            <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.11.0">
              <segmentDelimiter>\r</segmentDelimiter>
              <successfulACKCode>AA</successfulACKCode>
              <successfulACKMessage></successfulACKMessage>
              <errorACKCode>AE</errorACKCode>
              <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
              <rejectedACKCode>AR</rejectedACKCode>
              <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
              <msh15ACKAccept>false</msh15ACKAccept>
              <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
            </responseGenerationProperties>
            <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.11.0">
              <successfulACKCode>AA,CA</successfulACKCode>
              <errorACKCode>AE,CE</errorACKCode>
              <rejectedACKCode>AR,CR</rejectedACKCode>
              <validateMessageControlId>true</validateMessageControlId>
              <originalMessageControlId>Destination_Encoded</originalMessageControlId>
              <originalIdMapVariable></originalIdMapVariable>
            </responseValidationProperties>
          </inboundProperties>
          <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.11.0">
            <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.11.0">
              <handleRepetitions>true</handleRepetitions>
              <handleSubcomponents>true</handleSubcomponents>
              <useStrictParser>false</useStrictParser>
              <useStrictValidation>false</useStrictValidation>
              <stripNamespaces>true</stripNamespaces>
              <segmentDelimiter>\r</segmentDelimiter>
              <convertLineBreaks>true</convertLineBreaks>
            </serializationProperties>
            <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.11.0">
              <useStrictParser>false</useStrictParser>
              <useStrictValidation>false</useStrictValidation>
              <segmentDelimiter>\r</segmentDelimiter>
            </deserializationProperties>
            <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.11.0">
              <splitType>MSH_Segment</splitType>
              <batchScript></batchScript>
            </batchProperties>
            <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.11.0">
              <segmentDelimiter>\r</segmentDelimiter>
              <successfulACKCode>AA</successfulACKCode>
              <successfulACKMessage></successfulACKMessage>
              <errorACKCode>AE</errorACKCode>
              <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
              <rejectedACKCode>AR</rejectedACKCode>
              <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
              <msh15ACKAccept>false</msh15ACKAccept>
              <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
            </responseGenerationProperties>
            <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.11.0">
              <successfulACKCode>AA,CA</successfulACKCode>
              <errorACKCode>AE,CE</errorACKCode>
              <rejectedACKCode>AR,CR</rejectedACKCode>
              <validateMessageControlId>true</validateMessageControlId>
              <originalMessageControlId>Destination_Encoded</originalMessageControlId>
              <originalIdMapVariable></originalIdMapVariable>
            </responseValidationProperties>
          </outboundProperties>
        </transformer>
        <filter version="3.11.0">
          <elements/>
        </filter>
        <transportName>File Reader</transportName>
        <mode>SOURCE</mode>
        <enabled>true</enabled>
        <waitForPrevious>true</waitForPrevious>
      </sourceConnector>
      <destinationConnectors>
        <connector version="3.11.0">
          <metaDataId>6</metaDataId>
          <name>Validate Patient</name>
          <properties class="com.mirth.connect.connectors.js.JavaScriptDispatcherProperties" version="3.11.0">
            <pluginProperties/>
            <destinationConnectorProperties version="3.11.0">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
              <reattachAttachments>true</reattachAttachments>
            </destinationConnectorProperties>
            <script>return connectorMessage.getTransformedData();</script>
          </properties>
          <transformer version="3.11.0">
            <elements>
              <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.11.0">
                <name>Validate Patient</name>
                <sequenceNumber>0</sequenceNumber>
                <enabled>true</enabled>
                <script>var person = getPatientId(msg[&apos;PID&apos;][&apos;PID.5&apos;][&apos;PID.5.2&apos;].toString(), msg[&apos;PID&apos;][&apos;PID.5&apos;][&apos;PID.5.1&apos;].toString(), msg[&apos;PID&apos;][&apos;PID.7&apos;][&apos;PID.7.1&apos;].toString(), &apos;&apos;);
if (person.length &gt; 0) {
	var patientId = person[0].PersonID
     if (!!patientId) {
         channelMap.put(&apos;PatientId&apos;, patientId);
     }
}

return person;


channelMap.put(&apos;PatientId&apos;, &apos;&apos;);
channelMap.put(&apos;PrimaryDoctor&apos;, &apos;&apos;);
channelMap.put(&apos;PrimaryDoctorId&apos;, &apos;&apos;);
channelMap.put(&apos;InsuranceName&apos;, &apos;&apos;);
channelMap.put(&apos;InsuranceType&apos;, &apos;&apos;);
channelMap.put(&apos;InsurancePolicyNumber&apos;, &apos;&apos;);
var Person = getPatientId(&apos;&apos;, &apos;&apos;, &apos;&apos;, msg[&apos;PID&apos;][&apos;PID.19&apos;][&apos;PID.19.1&apos;].toString());
var patientfound = false;

if (Person.length &gt; 0) {
    channelMap.put(&apos;PatientId&apos;, Person[0].PersonID);
    patientfound = true;
}else{
    var person = getPatientId(msg[&apos;PID&apos;][&apos;PID.5&apos;][&apos;PID.5.2&apos;].toString(), msg[&apos;PID&apos;][&apos;PID.5&apos;][&apos;PID.5.1&apos;].toString(), msg[&apos;PID&apos;][&apos;PID.7&apos;][&apos;PID.7.1&apos;].toString(), &apos;&apos;);
    if (person.length &gt; 0) {
        var patientId = person[0].PersonID
        if (!!patientId) {
            channelMap.put(&apos;PatientId&apos;, patientId);
        }
    }

}</script>
              </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
            </elements>
            <inboundTemplate encoding="base64">TVNIfF5+XCZ8fENPQ1RXfHx8MjAxODA2MDQxNDA4fHxBRFReQTA0fFRXR1RBRE0uMS41Mjk2NzY4fFB8Mi4yDUVWTnxBMDR8MjAxODA2MDQxNDA4fHx8RUNDMDIxN15DUklQU15FTElaQUJFVEgNUElEfDF8fEcwMDAxNzY0ODd8Rzk3ODEwfFNUQUxOQUtFUl5DQUxFQl5UfHwyMDAwMTAxM3xNfHxXfDEyMjUgU0hJUExFWSBEUl5eTklDRVZJTExFXkZMXjMyNTc4XlVTQV5eXk9LQUxPT1NBfHwoODUwKTUxNy03ODc2fCg5OTkpOTk5LTk5OTl8RU5HfFN8Q09DVFd8RzAwMDk3ODQwNTc2fDk5OS05OS05OTk5DU5LMXwxfFJJTkdTVEFEXkJST058RkF8MTIyNSBTSElQTEVZIERSXl5OSUNFVklMTEVeRkxeMzI1NzheVVNBXl5eT0tBTE9PU0F8KDg1MCk1MTctNzg3Ng1QVjF8MXxPfEcuUFR8RUx8fEcuUFR8TUVFRVZeTWVla3NeRXZhbnxNRUVFVl5NZWVrc15FdmFuXlJeXl5NRHxNRUVFVl5NZWVrc15FdmFuXlJeXl5NRHxQVHx8fHxDUnx8Tnx8UkNSfHwwN3x8fHx8fHx8fHx8fHx8fHx8fHxDT0NUV3xHUk9JTiBJU1NVRVN8UkVHfHx8MjAxODA2MDQxNDA3fHx8fHx8fHxNRUVFVl5NZWVrc15FdmFuXlJeXl5NRH5+fg1HVDF8MXx8UklOR1NUQUReQlJPTnx8MTIyNSBTSElQTEVZIERSXl5OSUNFVklMTEVeRkxeMzI1NzheVVNBXl5eT0tBTE9PU0F8KDg1MCk1MTctNzg3Nnx8MTk4NDA1Mjl8TXx8RkF8NTE2LTA0LTg0MDd8fHxFR0xJTiBGRURFUkFMIENSRURJVCBVTklPTnw4MzggRUdMSU4gUEtXWV5eRlQgV0FMVE9OIEJFQUNIXkZMXjMyNTQ3fCg5OTkpOTk5LTk5OTl8fHxGDUdUMXwyDUlOMXwxfFVIQ0hNT3x8VU5JVEVEIEhFQUxUSENBUkUgSE1PfFBPIEJPWCA3NDA4MDBeXkFUTEFOVEFeR0FeMzAzNzReVVNBfHwoODc3KTg0Mi0zMjEwfDkxMDUwMHxFR0xJTiBGRURFUkFMIENSRURJVCBVTklPTnx8fDIwMTgwMTAxfHxOUi9PXjIwMTgwNTMxfHxSSU5HU1RBRF5CUk9OXkx8MzN8MTk4NDA1Mjl8fHx8fHx8fHx8fHx8fHx8fHw5MzI2ODM3NTB8fHx8fHx8TQ0=</inboundTemplate>
            <outboundTemplate encoding="base64"></outboundTemplate>
            <inboundDataType>HL7V2</inboundDataType>
            <outboundDataType>JSON</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.11.0">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.11.0">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.11.0">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.11.0">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.11.0">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.11.0">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.11.0">
              <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.11.0">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.11.0">
            <elements/>
            <inboundTemplate encoding="base64"></inboundTemplate>
            <outboundTemplate encoding="base64"></outboundTemplate>
            <inboundDataType>JSON</inboundDataType>
            <outboundDataType>JSON</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.11.0">
              <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.11.0">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.11.0">
              <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.11.0">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.11.0">
            <elements>
              <com.mirth.connect.plugins.rulebuilder.RuleBuilderRule version="3.11.0">
                <name>Accept message if &quot;msg[&apos;PID&apos;][&apos;PID.19&apos;][&apos;PID.19.1&apos;].toString()&quot; exists</name>
                <sequenceNumber>0</sequenceNumber>
                <enabled>true</enabled>
                <field>msg[&apos;PID&apos;][&apos;PID.19&apos;][&apos;PID.19.1&apos;].toString()</field>
                <condition>EXISTS</condition>
                <values/>
              </com.mirth.connect.plugins.rulebuilder.RuleBuilderRule>
            </elements>
          </filter>
          <transportName>JavaScript Writer</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
        <connector version="3.11.0">
          <metaDataId>14</metaDataId>
          <name>Check Duplication</name>
          <properties class="com.mirth.connect.connectors.vm.VmDispatcherProperties" version="3.11.0">
            <pluginProperties/>
            <destinationConnectorProperties version="3.11.0">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
              <reattachAttachments>true</reattachAttachments>
            </destinationConnectorProperties>
            <channelId>none</channelId>
            <channelTemplate>${message.transformedData}</channelTemplate>
            <mapVariables/>
          </properties>
          <transformer version="3.11.0">
            <elements/>
            <inboundTemplate encoding="base64">TVNIfF5+XCZ8fENPQ1RXfHx8MjAxODA2MDQxNDA4fHxBRFReQTA0fFRXR1RBRE0uMS41Mjk2NzY4fFB8Mi4yDUVWTnxBMDR8MjAxODA2MDQxNDA4fHx8RUNDMDIxN15DUklQU15FTElaQUJFVEgNUElEfDF8fEcwMDAxNzY0ODd8Rzk3ODEwfFNUQUxOQUtFUl5DQUxFQl5UfHwyMDAwMTAxM3xNfHxXfDEyMjUgU0hJUExFWSBEUl5eTklDRVZJTExFXkZMXjMyNTc4XlVTQV5eXk9LQUxPT1NBfHwoODUwKTUxNy03ODc2fCg5OTkpOTk5LTk5OTl8RU5HfFN8Q09DVFd8RzAwMDk3ODQwNTc2fDk5OS05OS05OTk5DU5LMXwxfFJJTkdTVEFEXkJST058RkF8MTIyNSBTSElQTEVZIERSXl5OSUNFVklMTEVeRkxeMzI1NzheVVNBXl5eT0tBTE9PU0F8KDg1MCk1MTctNzg3Ng1QVjF8MXxPfEcuUFR8RUx8fEcuUFR8TUVFRVZeTWVla3NeRXZhbnxNRUVFVl5NZWVrc15FdmFuXlJeXl5NRHxNRUVFVl5NZWVrc15FdmFuXlJeXl5NRHxQVHx8fHxDUnx8Tnx8UkNSfHwwN3x8fHx8fHx8fHx8fHx8fHx8fHxDT0NUV3xHUk9JTiBJU1NVRVN8UkVHfHx8MjAxODA2MDQxNDA3fHx8fHx8fHxNRUVFVl5NZWVrc15FdmFuXlJeXl5NRH5+fg1HVDF8MXx8UklOR1NUQUReQlJPTnx8MTIyNSBTSElQTEVZIERSXl5OSUNFVklMTEVeRkxeMzI1NzheVVNBXl5eT0tBTE9PU0F8KDg1MCk1MTctNzg3Nnx8MTk4NDA1Mjl8TXx8RkF8NTE2LTA0LTg0MDd8fHxFR0xJTiBGRURFUkFMIENSRURJVCBVTklPTnw4MzggRUdMSU4gUEtXWV5eRlQgV0FMVE9OIEJFQUNIXkZMXjMyNTQ3fCg5OTkpOTk5LTk5OTl8fHxGDUdUMXwyDUlOMXwxfFVIQ0hNT3x8VU5JVEVEIEhFQUxUSENBUkUgSE1PfFBPIEJPWCA3NDA4MDBeXkFUTEFOVEFeR0FeMzAzNzReVVNBfHwoODc3KTg0Mi0zMjEwfDkxMDUwMHxFR0xJTiBGRURFUkFMIENSRURJVCBVTklPTnx8fDIwMTgwMTAxfHxOUi9PXjIwMTgwNTMxfHxSSU5HU1RBRF5CUk9OXkx8MzN8MTk4NDA1Mjl8fHx8fHx8fHx8fHx8fHx8fHw5MzI2ODM3NTB8fHx8fHx8TQ0=</inboundTemplate>
            <outboundTemplate encoding="base64"></outboundTemplate>
            <inboundDataType>HL7V2</inboundDataType>
            <outboundDataType>JSON</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.11.0">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.11.0">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.11.0">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.11.0">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.11.0">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.11.0">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.11.0">
              <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.11.0">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.11.0">
            <elements/>
            <inboundDataType>JSON</inboundDataType>
            <outboundDataType>JSON</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.11.0">
              <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.11.0">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.11.0">
              <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.11.0">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.11.0">
            <elements>
              <com.mirth.connect.plugins.javascriptrule.JavaScriptRule version="3.11.0">
                <name>Filter Patient Id/Duplicate Encounters</name>
                <sequenceNumber>0</sequenceNumber>
                <enabled>true</enabled>
                <script>if ($(&apos;PatientId&apos;).length() &gt; 0) {
	return checkDuplicateObs(msg[&apos;MSH&apos;][&apos;MSH.10&apos;][&apos;MSH.10.1&apos;].toString());
}else{
	return false;
}</script>
              </com.mirth.connect.plugins.javascriptrule.JavaScriptRule>
              <com.mirth.connect.plugins.rulebuilder.RuleBuilderRule version="3.11.0">
                <name>Accept message if &quot;msg[&apos;PV1&apos;][&apos;PV1.45&apos;][&apos;PV1.45.1&apos;].toString()&quot; exists</name>
                <sequenceNumber>1</sequenceNumber>
                <enabled>false</enabled>
                <operator>AND</operator>
                <field>msg[&apos;PV1&apos;][&apos;PV1.45&apos;][&apos;PV1.45.1&apos;].toString()</field>
                <condition>EXISTS</condition>
                <values/>
              </com.mirth.connect.plugins.rulebuilder.RuleBuilderRule>
            </elements>
          </filter>
          <transportName>Channel Writer</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
        <connector version="3.11.0">
          <metaDataId>1</metaDataId>
          <name>Set Patient Validation</name>
          <properties class="com.mirth.connect.connectors.vm.VmDispatcherProperties" version="3.11.0">
            <pluginProperties/>
            <destinationConnectorProperties version="3.11.0">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
              <reattachAttachments>true</reattachAttachments>
            </destinationConnectorProperties>
            <channelId>none</channelId>
            <channelTemplate>${message.transformedData}</channelTemplate>
            <mapVariables/>
          </properties>
          <transformer version="3.11.0">
            <elements/>
            <inboundTemplate encoding="base64">TVNIfF5+XCZ8fENPQ1RXfHx8MjAxODA2MDQxNDA4fHxBRFReQTA0fFRXR1RBRE0uMS41Mjk2NzY4fFB8Mi4yDUVWTnxBMDR8MjAxODA2MDQxNDA4fHx8RUNDMDIxN15DUklQU15FTElaQUJFVEgNUElEfDF8fEcwMDAxNzY0ODd8Rzk3ODEwfFNUQUxOQUtFUl5DQUxFQl5UfHwyMDAwMTAxM3xNfHxXfDEyMjUgU0hJUExFWSBEUl5eTklDRVZJTExFXkZMXjMyNTc4XlVTQV5eXk9LQUxPT1NBfHwoODUwKTUxNy03ODc2fCg5OTkpOTk5LTk5OTl8RU5HfFN8Q09DVFd8RzAwMDk3ODQwNTc2fDk5OS05OS05OTk5DU5LMXwxfFJJTkdTVEFEXkJST058RkF8MTIyNSBTSElQTEVZIERSXl5OSUNFVklMTEVeRkxeMzI1NzheVVNBXl5eT0tBTE9PU0F8KDg1MCk1MTctNzg3Ng1QVjF8MXxPfEcuUFR8RUx8fEcuUFR8TUVFRVZeTWVla3NeRXZhbnxNRUVFVl5NZWVrc15FdmFuXlJeXl5NRHxNRUVFVl5NZWVrc15FdmFuXlJeXl5NRHxQVHx8fHxDUnx8Tnx8UkNSfHwwN3x8fHx8fHx8fHx8fHx8fHx8fHxDT0NUV3xHUk9JTiBJU1NVRVN8UkVHfHx8MjAxODA2MDQxNDA3fHx8fHx8fHxNRUVFVl5NZWVrc15FdmFuXlJeXl5NRH5+fg1HVDF8MXx8UklOR1NUQUReQlJPTnx8MTIyNSBTSElQTEVZIERSXl5OSUNFVklMTEVeRkxeMzI1NzheVVNBXl5eT0tBTE9PU0F8KDg1MCk1MTctNzg3Nnx8MTk4NDA1Mjl8TXx8RkF8NTE2LTA0LTg0MDd8fHxFR0xJTiBGRURFUkFMIENSRURJVCBVTklPTnw4MzggRUdMSU4gUEtXWV5eRlQgV0FMVE9OIEJFQUNIXkZMXjMyNTQ3fCg5OTkpOTk5LTk5OTl8fHxGDUdUMXwyDUlOMXwxfFVIQ0hNT3x8VU5JVEVEIEhFQUxUSENBUkUgSE1PfFBPIEJPWCA3NDA4MDBeXkFUTEFOVEFeR0FeMzAzNzReVVNBfHwoODc3KTg0Mi0zMjEwfDkxMDUwMHxFR0xJTiBGRURFUkFMIENSRURJVCBVTklPTnx8fDIwMTgwMTAxfHxOUi9PXjIwMTgwNTMxfHxSSU5HU1RBRF5CUk9OXkx8MzN8MTk4NDA1Mjl8fHx8fHx8fHx8fHx8fHx8fHw5MzI2ODM3NTB8fHx8fHx8TQ0=</inboundTemplate>
            <outboundTemplate encoding="base64"></outboundTemplate>
            <inboundDataType>HL7V2</inboundDataType>
            <outboundDataType>JSON</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.11.0">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.11.0">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.11.0">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.11.0">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.11.0">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.11.0">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.11.0">
              <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.11.0">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.11.0">
            <elements/>
            <inboundDataType>JSON</inboundDataType>
            <outboundDataType>JSON</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.11.0">
              <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.11.0">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.11.0">
              <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.11.0">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.11.0">
            <elements>
              <com.mirth.connect.plugins.javascriptrule.JavaScriptRule version="3.11.0">
                <sequenceNumber>0</sequenceNumber>
                <enabled>true</enabled>
                <script>var result = true;
if ($(&apos;PatientId&apos;).length() &gt; 0) {
    result = true;
}else{
	result = false;
}
var des=responseMap.get(&apos;Check Duplication&apos;).getStatus();

if (des == &apos;SENT&apos;) {
    result = true;
}else{
	result = false
}


return result;</script>
              </com.mirth.connect.plugins.javascriptrule.JavaScriptRule>
            </elements>
          </filter>
          <transportName>Channel Writer</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
        <connector version="3.11.0">
          <metaDataId>16</metaDataId>
          <name>Set Ordering Doctor</name>
          <properties class="com.mirth.connect.connectors.vm.VmDispatcherProperties" version="3.11.0">
            <pluginProperties/>
            <destinationConnectorProperties version="3.11.0">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
              <reattachAttachments>true</reattachAttachments>
            </destinationConnectorProperties>
            <channelId>none</channelId>
            <channelTemplate>${message.transformedData}</channelTemplate>
            <mapVariables/>
          </properties>
          <transformer version="3.11.0">
            <elements>
              <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.11.0">
                <name>Validate OrderingDoctor</name>
                <sequenceNumber>0</sequenceNumber>
                <enabled>true</enabled>
                <script>var firstName = msg[&apos;ORC&apos;][&apos;ORC.12&apos;][&apos;ORC.12.3&apos;].toString()?&apos;&apos;:msg[&apos;OBR&apos;][&apos;OBR.16&apos;][&apos;OBR.16.3&apos;].toString();
var middleName = msg[&apos;ORC&apos;][&apos;ORC.12&apos;][&apos;ORC.12.4&apos;].toString()?&apos;&apos;:msg[&apos;OBR&apos;][&apos;OBR.16&apos;][&apos;OBR.16.4&apos;].toString();
var lastName = msg[&apos;ORC&apos;][&apos;ORC.12&apos;][&apos;ORC.12.2&apos;].toString()?&apos;&apos;:msg[&apos;OBR&apos;][&apos;OBR.16&apos;][&apos;OBR.16.2&apos;].toString();

var internalDoctorName = &quot;&quot;;
if(firstName.length&gt;0 &amp;&amp; lastName.length&gt;0){
	internalDoctorName = getProvider(firstName,middleName,lastName);
}else{
	return;
}

if (internalDoctorName.length &gt; 0) {
    channelMap.put(&apos;OrderingDoctor&apos;, internalDoctorName[0].FullName);
} else {

    var doctorName = firstName;
    if(middleName.length&gt;0){
    	doctorName += &quot; &quot; + middleName;
    }
    doctorName += &quot; &quot; + lastName;
    channelMap.put(&apos;OrderingDoctor&apos;, doctorName + &quot; *&quot;);
}</script>
              </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
            </elements>
            <inboundTemplate encoding="base64"></inboundTemplate>
            <outboundTemplate encoding="base64"></outboundTemplate>
            <inboundDataType>HL7V2</inboundDataType>
            <outboundDataType>HL7V2</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.11.0">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.11.0">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.11.0">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.11.0">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.11.0">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.11.0">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.11.0">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.11.0">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.11.0">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.11.0">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.11.0">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.11.0">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.11.0">
            <elements/>
            <inboundDataType>HL7V2</inboundDataType>
            <outboundDataType>HL7V2</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.11.0">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.11.0">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.11.0">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.11.0">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.11.0">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.11.0">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.11.0">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.11.0">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.11.0">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.11.0">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.11.0">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.11.0">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.11.0">
            <elements>
              <com.mirth.connect.plugins.javascriptrule.JavaScriptRule version="3.11.0">
                <sequenceNumber>0</sequenceNumber>
                <enabled>true</enabled>
                <script>var des=responseMap.get(&apos;Set Patient Validation&apos;).getStatus();

if (des == &apos;SENT&apos;) {
    return true;
}
return false;</script>
              </com.mirth.connect.plugins.javascriptrule.JavaScriptRule>
              <com.mirth.connect.plugins.rulebuilder.RuleBuilderRule version="3.11.0">
                <name>Accept message if &quot;msg[&apos;PV1&apos;][&apos;PV1.9&apos;][&apos;PV1.9.2&apos;].toString()&quot; exists</name>
                <sequenceNumber>1</sequenceNumber>
                <enabled>true</enabled>
                <operator>AND</operator>
                <field>msg[&apos;PV1&apos;][&apos;PV1.9&apos;][&apos;PV1.9.2&apos;].toString()</field>
                <condition>EXISTS</condition>
                <values/>
              </com.mirth.connect.plugins.rulebuilder.RuleBuilderRule>
              <com.mirth.connect.plugins.rulebuilder.RuleBuilderRule version="3.11.0">
                <name>Accept message if &quot;msg[&apos;PV1&apos;][&apos;PV1.9&apos;][&apos;PV1.9.3&apos;].toString()&quot; exists</name>
                <sequenceNumber>2</sequenceNumber>
                <enabled>true</enabled>
                <operator>AND</operator>
                <field>msg[&apos;PV1&apos;][&apos;PV1.9&apos;][&apos;PV1.9.3&apos;].toString()</field>
                <condition>EXISTS</condition>
                <values/>
              </com.mirth.connect.plugins.rulebuilder.RuleBuilderRule>
            </elements>
          </filter>
          <transportName>Channel Writer</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
        <connector version="3.11.0">
          <metaDataId>2</metaDataId>
          <name>Set Attending Doctor</name>
          <properties class="com.mirth.connect.connectors.vm.VmDispatcherProperties" version="3.11.0">
            <pluginProperties/>
            <destinationConnectorProperties version="3.11.0">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
              <reattachAttachments>true</reattachAttachments>
            </destinationConnectorProperties>
            <channelId>none</channelId>
            <channelTemplate>${message.transformedData}</channelTemplate>
            <mapVariables/>
          </properties>
          <transformer version="3.11.0">
            <elements>
              <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.11.0">
                <name>Validate attending doctor</name>
                <sequenceNumber>0</sequenceNumber>
                <enabled>true</enabled>
                <script>var firstName = msg[&apos;PV1&apos;][&apos;PV1.7&apos;][&apos;PV1.7.3&apos;].toString();
var middleName = msg[&apos;PV1&apos;][&apos;PV1.7&apos;][&apos;PV1.7.4&apos;].toString();
var lastName = msg[&apos;PV1&apos;][&apos;PV1.7&apos;][&apos;PV1.7.2&apos;].toString();
var internalDoctorName = &quot;&quot;;
if(firstName.length&gt;0 &amp;&amp; lastName.length&gt;0){
	internalDoctorName = getProvider(firstName,middleName,lastName);
}else{
	return;
}


if (internalDoctorName.length &gt; 0) {
    channelMap.put(&apos;AttendingDoctor&apos;, internalDoctorName[0].FullName);
} else {

    var doctorName = firstName;
    if(middleName.length&gt;0){
    	doctorName += &quot; &quot; + middleName;
    }
    doctorName += &quot; &quot; + lastName;
    if(doctorName.length&gt;0){
    	channelMap.put(&apos;AttendingDoctor&apos;, doctorName + &quot; *&quot;);
    }
    
}</script>
              </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
            </elements>
            <inboundTemplate encoding="base64">TVNIfF5+XCZ8fENPQ1RXfHx8MjAxODA2MDQxNDA4fHxBRFReQTA0fFRXR1RBRE0uMS41Mjk2NzY4fFB8Mi4yDUVWTnxBMDR8MjAxODA2MDQxNDA4fHx8RUNDMDIxN15DUklQU15FTElaQUJFVEgNUElEfDF8fEcwMDAxNzY0ODd8Rzk3ODEwfFNUQUxOQUtFUl5DQUxFQl5UfHwyMDAwMTAxM3xNfHxXfDEyMjUgU0hJUExFWSBEUl5eTklDRVZJTExFXkZMXjMyNTc4XlVTQV5eXk9LQUxPT1NBfHwoODUwKTUxNy03ODc2fCg5OTkpOTk5LTk5OTl8RU5HfFN8Q09DVFd8RzAwMDk3ODQwNTc2fDk5OS05OS05OTk5DU5LMXwxfFJJTkdTVEFEXkJST058RkF8MTIyNSBTSElQTEVZIERSXl5OSUNFVklMTEVeRkxeMzI1NzheVVNBXl5eT0tBTE9PU0F8KDg1MCk1MTctNzg3Ng1QVjF8MXxPfEcuUFR8RUx8fEcuUFR8TUVFRVZeTWVla3NeRXZhbnxNRUVFVl5NZWVrc15FdmFuXlJeXl5NRHxNRUVFVl5NZWVrc15FdmFuXlJeXl5NRHxQVHx8fHxDUnx8Tnx8UkNSfHwwN3x8fHx8fHx8fHx8fHx8fHx8fHxDT0NUV3xHUk9JTiBJU1NVRVN8UkVHfHx8MjAxODA2MDQxNDA3fHx8fHx8fHxNRUVFVl5NZWVrc15FdmFuXlJeXl5NRH5+fg1HVDF8MXx8UklOR1NUQUReQlJPTnx8MTIyNSBTSElQTEVZIERSXl5OSUNFVklMTEVeRkxeMzI1NzheVVNBXl5eT0tBTE9PU0F8KDg1MCk1MTctNzg3Nnx8MTk4NDA1Mjl8TXx8RkF8NTE2LTA0LTg0MDd8fHxFR0xJTiBGRURFUkFMIENSRURJVCBVTklPTnw4MzggRUdMSU4gUEtXWV5eRlQgV0FMVE9OIEJFQUNIXkZMXjMyNTQ3fCg5OTkpOTk5LTk5OTl8fHxGDUdUMXwyDUlOMXwxfFVIQ0hNT3x8VU5JVEVEIEhFQUxUSENBUkUgSE1PfFBPIEJPWCA3NDA4MDBeXkFUTEFOVEFeR0FeMzAzNzReVVNBfHwoODc3KTg0Mi0zMjEwfDkxMDUwMHxFR0xJTiBGRURFUkFMIENSRURJVCBVTklPTnx8fDIwMTgwMTAxfHxOUi9PXjIwMTgwNTMxfHxSSU5HU1RBRF5CUk9OXkx8MzN8MTk4NDA1Mjl8fHx8fHx8fHx8fHx8fHx8fHw5MzI2ODM3NTB8fHx8fHx8TQ0=</inboundTemplate>
            <outboundTemplate encoding="base64"></outboundTemplate>
            <inboundDataType>HL7V2</inboundDataType>
            <outboundDataType>HL7V2</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.11.0">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.11.0">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.11.0">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.11.0">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.11.0">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.11.0">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.11.0">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.11.0">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.11.0">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.11.0">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.11.0">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.11.0">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.11.0">
            <elements/>
            <inboundDataType>HL7V2</inboundDataType>
            <outboundDataType>HL7V2</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.11.0">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.11.0">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.11.0">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.11.0">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.11.0">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.11.0">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.11.0">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.11.0">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.11.0">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.11.0">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.11.0">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.11.0">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.11.0">
            <elements>
              <com.mirth.connect.plugins.javascriptrule.JavaScriptRule version="3.11.0">
                <sequenceNumber>0</sequenceNumber>
                <enabled>true</enabled>
                <script>var des=responseMap.get(&apos;Set Patient Validation&apos;).getStatus();

if (des == &apos;SENT&apos;) {
    return true;
}
return false;</script>
              </com.mirth.connect.plugins.javascriptrule.JavaScriptRule>
              <com.mirth.connect.plugins.rulebuilder.RuleBuilderRule version="3.11.0">
                <name>Accept message if &quot;msg[&apos;PV1&apos;][&apos;PV1.7&apos;][&apos;PV1.7.2&apos;].toString()&quot; exists</name>
                <sequenceNumber>1</sequenceNumber>
                <enabled>true</enabled>
                <operator>AND</operator>
                <field>msg[&apos;PV1&apos;][&apos;PV1.7&apos;][&apos;PV1.7.2&apos;].toString()</field>
                <condition>EXISTS</condition>
                <values/>
              </com.mirth.connect.plugins.rulebuilder.RuleBuilderRule>
              <com.mirth.connect.plugins.rulebuilder.RuleBuilderRule version="3.11.0">
                <name>Accept message if &quot;msg[&apos;PV1&apos;][&apos;PV1.7&apos;][&apos;PV1.7.3&apos;].toString()&quot; exists</name>
                <sequenceNumber>2</sequenceNumber>
                <enabled>true</enabled>
                <operator>AND</operator>
                <field>msg[&apos;PV1&apos;][&apos;PV1.7&apos;][&apos;PV1.7.3&apos;].toString()</field>
                <condition>EXISTS</condition>
                <values/>
              </com.mirth.connect.plugins.rulebuilder.RuleBuilderRule>
            </elements>
          </filter>
          <transportName>Channel Writer</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
        <connector version="3.11.0">
          <metaDataId>7</metaDataId>
          <name>Set Referring Doctor</name>
          <properties class="com.mirth.connect.connectors.vm.VmDispatcherProperties" version="3.11.0">
            <pluginProperties/>
            <destinationConnectorProperties version="3.11.0">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
              <reattachAttachments>true</reattachAttachments>
            </destinationConnectorProperties>
            <channelId>none</channelId>
            <channelTemplate>${message.transformedData}</channelTemplate>
            <mapVariables/>
          </properties>
          <transformer version="3.11.0">
            <elements>
              <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.11.0">
                <name>Validate referring doctor</name>
                <sequenceNumber>0</sequenceNumber>
                <enabled>true</enabled>
                <script>var firstName = msg[&apos;PV1&apos;][&apos;PV1.8&apos;][&apos;PV1.8.3&apos;].toString();
var middleName = msg[&apos;PV1&apos;][&apos;PV1.8&apos;][&apos;PV1.8.4&apos;].toString();
var lastName = msg[&apos;PV1&apos;][&apos;PV1.8&apos;][&apos;PV1.8.2&apos;].toString();
var internalDoctorName = &quot;&quot;;
if(firstName.length&gt;0 &amp;&amp; lastName.length&gt;0){
	internalDoctorName = getProvider(firstName,middleName,lastName);
}else{
	return;
}
if (internalDoctorName.length &gt; 0) {
    channelMap.put(&apos;ReferringDoctor&apos;, internalDoctorName[0].FullName);
} else {

    var doctorName = firstName;
    if(middleName.length&gt;0){
    	doctorName += &quot; &quot; + middleName;
    }
    doctorName += &quot; &quot; + lastName;
    channelMap.put(&apos;ReferringDoctor&apos;, doctorName + &quot; *&quot;);
}</script>
              </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
            </elements>
            <inboundTemplate encoding="base64">TVNIfF5+XCZ8fENPQ1RXfHx8MjAxODA2MDQxNDA4fHxBRFReQTA0fFRXR1RBRE0uMS41Mjk2NzY4fFB8Mi4yDUVWTnxBMDR8MjAxODA2MDQxNDA4fHx8RUNDMDIxN15DUklQU15FTElaQUJFVEgNUElEfDF8fEcwMDAxNzY0ODd8Rzk3ODEwfFNUQUxOQUtFUl5DQUxFQl5UfHwyMDAwMTAxM3xNfHxXfDEyMjUgU0hJUExFWSBEUl5eTklDRVZJTExFXkZMXjMyNTc4XlVTQV5eXk9LQUxPT1NBfHwoODUwKTUxNy03ODc2fCg5OTkpOTk5LTk5OTl8RU5HfFN8Q09DVFd8RzAwMDk3ODQwNTc2fDk5OS05OS05OTk5DU5LMXwxfFJJTkdTVEFEXkJST058RkF8MTIyNSBTSElQTEVZIERSXl5OSUNFVklMTEVeRkxeMzI1NzheVVNBXl5eT0tBTE9PU0F8KDg1MCk1MTctNzg3Ng1QVjF8MXxPfEcuUFR8RUx8fEcuUFR8TUVFRVZeTWVla3NeRXZhbnxNRUVFVl5NZWVrc15FdmFuXlJeXl5NRHxNRUVFVl5NZWVrc15FdmFuXlJeXl5NRHxQVHx8fHxDUnx8Tnx8UkNSfHwwN3x8fHx8fHx8fHx8fHx8fHx8fHxDT0NUV3xHUk9JTiBJU1NVRVN8UkVHfHx8MjAxODA2MDQxNDA3fHx8fHx8fHxNRUVFVl5NZWVrc15FdmFuXlJeXl5NRH5+fg1HVDF8MXx8UklOR1NUQUReQlJPTnx8MTIyNSBTSElQTEVZIERSXl5OSUNFVklMTEVeRkxeMzI1NzheVVNBXl5eT0tBTE9PU0F8KDg1MCk1MTctNzg3Nnx8MTk4NDA1Mjl8TXx8RkF8NTE2LTA0LTg0MDd8fHxFR0xJTiBGRURFUkFMIENSRURJVCBVTklPTnw4MzggRUdMSU4gUEtXWV5eRlQgV0FMVE9OIEJFQUNIXkZMXjMyNTQ3fCg5OTkpOTk5LTk5OTl8fHxGDUdUMXwyDUlOMXwxfFVIQ0hNT3x8VU5JVEVEIEhFQUxUSENBUkUgSE1PfFBPIEJPWCA3NDA4MDBeXkFUTEFOVEFeR0FeMzAzNzReVVNBfHwoODc3KTg0Mi0zMjEwfDkxMDUwMHxFR0xJTiBGRURFUkFMIENSRURJVCBVTklPTnx8fDIwMTgwMTAxfHxOUi9PXjIwMTgwNTMxfHxSSU5HU1RBRF5CUk9OXkx8MzN8MTk4NDA1Mjl8fHx8fHx8fHx8fHx8fHx8fHw5MzI2ODM3NTB8fHx8fHx8TQ0=</inboundTemplate>
            <outboundTemplate encoding="base64"></outboundTemplate>
            <inboundDataType>HL7V2</inboundDataType>
            <outboundDataType>HL7V2</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.11.0">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.11.0">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.11.0">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.11.0">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.11.0">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.11.0">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.11.0">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.11.0">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.11.0">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.11.0">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.11.0">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.11.0">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.11.0">
            <elements/>
            <inboundDataType>HL7V2</inboundDataType>
            <outboundDataType>HL7V2</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.11.0">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.11.0">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.11.0">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.11.0">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.11.0">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.11.0">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.11.0">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.11.0">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.11.0">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.11.0">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.11.0">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.11.0">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.11.0">
            <elements>
              <com.mirth.connect.plugins.javascriptrule.JavaScriptRule version="3.11.0">
                <sequenceNumber>0</sequenceNumber>
                <enabled>true</enabled>
                <script>var des=responseMap.get(&apos;Set Patient Validation&apos;).getStatus();

if (des == &apos;SENT&apos;) {
    return true;
}
return false;</script>
              </com.mirth.connect.plugins.javascriptrule.JavaScriptRule>
              <com.mirth.connect.plugins.rulebuilder.RuleBuilderRule version="3.11.0">
                <name>Accept message if &quot;msg[&apos;PV1&apos;][&apos;PV1.8&apos;][&apos;PV1.8.2&apos;].toString()&quot; exists</name>
                <sequenceNumber>1</sequenceNumber>
                <enabled>true</enabled>
                <operator>AND</operator>
                <field>msg[&apos;PV1&apos;][&apos;PV1.8&apos;][&apos;PV1.8.2&apos;].toString()</field>
                <condition>EXISTS</condition>
                <values/>
              </com.mirth.connect.plugins.rulebuilder.RuleBuilderRule>
              <com.mirth.connect.plugins.rulebuilder.RuleBuilderRule version="3.11.0">
                <name>Accept message if &quot;msg[&apos;PV1&apos;][&apos;PV1.8&apos;][&apos;PV1.8.3&apos;].toString()&quot; exists</name>
                <sequenceNumber>2</sequenceNumber>
                <enabled>true</enabled>
                <operator>AND</operator>
                <field>msg[&apos;PV1&apos;][&apos;PV1.8&apos;][&apos;PV1.8.3&apos;].toString()</field>
                <condition>EXISTS</condition>
                <values/>
              </com.mirth.connect.plugins.rulebuilder.RuleBuilderRule>
            </elements>
          </filter>
          <transportName>Channel Writer</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
        <connector version="3.11.0">
          <metaDataId>8</metaDataId>
          <name>Set Consulting Doctor</name>
          <properties class="com.mirth.connect.connectors.vm.VmDispatcherProperties" version="3.11.0">
            <pluginProperties/>
            <destinationConnectorProperties version="3.11.0">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
              <reattachAttachments>true</reattachAttachments>
            </destinationConnectorProperties>
            <channelId>none</channelId>
            <channelTemplate>${message.transformedData}</channelTemplate>
            <mapVariables/>
          </properties>
          <transformer version="3.11.0">
            <elements>
              <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.11.0">
                <name>Validate consulting doctor</name>
                <sequenceNumber>0</sequenceNumber>
                <enabled>true</enabled>
                <script>var firstName = msg[&apos;PV1&apos;][&apos;PV1.9&apos;][&apos;PV1.9.3&apos;].toString();
var middleName = msg[&apos;PV1&apos;][&apos;PV1.9&apos;][&apos;PV1.9.4&apos;].toString();
var lastName = msg[&apos;PV1&apos;][&apos;PV1.9&apos;][&apos;PV1.9.2&apos;].toString();
var internalDoctorName = &quot;&quot;;
if(firstName.length&gt;0 &amp;&amp; lastName.length&gt;0){
	internalDoctorName = getProvider(firstName,middleName,lastName);
}else{
	return;
}

if (internalDoctorName.length &gt; 0) {
    channelMap.put(&apos;ConsultingDoctor&apos;, internalDoctorName[0].FullName);
} else {

    var doctorName = firstName;
    if(middleName.length&gt;0){
    	doctorName += &quot; &quot; + middleName;
    }
    doctorName += &quot; &quot; + lastName;
    channelMap.put(&apos;ConsultingDoctor&apos;, doctorName + &quot; *&quot;);
}</script>
              </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
            </elements>
            <inboundTemplate encoding="base64">TVNIfF5+XCZ8fENPQ1RXfHx8MjAxODA2MDQxNDA4fHxBRFReQTA0fFRXR1RBRE0uMS41Mjk2NzY4fFB8Mi4yDUVWTnxBMDR8MjAxODA2MDQxNDA4fHx8RUNDMDIxN15DUklQU15FTElaQUJFVEgNUElEfDF8fEcwMDAxNzY0ODd8Rzk3ODEwfFNUQUxOQUtFUl5DQUxFQl5UfHwyMDAwMTAxM3xNfHxXfDEyMjUgU0hJUExFWSBEUl5eTklDRVZJTExFXkZMXjMyNTc4XlVTQV5eXk9LQUxPT1NBfHwoODUwKTUxNy03ODc2fCg5OTkpOTk5LTk5OTl8RU5HfFN8Q09DVFd8RzAwMDk3ODQwNTc2fDk5OS05OS05OTk5DU5LMXwxfFJJTkdTVEFEXkJST058RkF8MTIyNSBTSElQTEVZIERSXl5OSUNFVklMTEVeRkxeMzI1NzheVVNBXl5eT0tBTE9PU0F8KDg1MCk1MTctNzg3Ng1QVjF8MXxPfEcuUFR8RUx8fEcuUFR8TUVFRVZeTWVla3NeRXZhbnxNRUVFVl5NZWVrc15FdmFuXlJeXl5NRHxNRUVFVl5NZWVrc15FdmFuXlJeXl5NRHxQVHx8fHxDUnx8Tnx8UkNSfHwwN3x8fHx8fHx8fHx8fHx8fHx8fHxDT0NUV3xHUk9JTiBJU1NVRVN8UkVHfHx8MjAxODA2MDQxNDA3fHx8fHx8fHxNRUVFVl5NZWVrc15FdmFuXlJeXl5NRH5+fg1HVDF8MXx8UklOR1NUQUReQlJPTnx8MTIyNSBTSElQTEVZIERSXl5OSUNFVklMTEVeRkxeMzI1NzheVVNBXl5eT0tBTE9PU0F8KDg1MCk1MTctNzg3Nnx8MTk4NDA1Mjl8TXx8RkF8NTE2LTA0LTg0MDd8fHxFR0xJTiBGRURFUkFMIENSRURJVCBVTklPTnw4MzggRUdMSU4gUEtXWV5eRlQgV0FMVE9OIEJFQUNIXkZMXjMyNTQ3fCg5OTkpOTk5LTk5OTl8fHxGDUdUMXwyDUlOMXwxfFVIQ0hNT3x8VU5JVEVEIEhFQUxUSENBUkUgSE1PfFBPIEJPWCA3NDA4MDBeXkFUTEFOVEFeR0FeMzAzNzReVVNBfHwoODc3KTg0Mi0zMjEwfDkxMDUwMHxFR0xJTiBGRURFUkFMIENSRURJVCBVTklPTnx8fDIwMTgwMTAxfHxOUi9PXjIwMTgwNTMxfHxSSU5HU1RBRF5CUk9OXkx8MzN8MTk4NDA1Mjl8fHx8fHx8fHx8fHx8fHx8fHw5MzI2ODM3NTB8fHx8fHx8TQ0=</inboundTemplate>
            <outboundTemplate encoding="base64"></outboundTemplate>
            <inboundDataType>HL7V2</inboundDataType>
            <outboundDataType>HL7V2</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.11.0">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.11.0">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.11.0">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.11.0">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.11.0">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.11.0">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.11.0">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.11.0">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.11.0">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.11.0">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.11.0">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.11.0">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.11.0">
            <elements/>
            <inboundDataType>HL7V2</inboundDataType>
            <outboundDataType>HL7V2</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.11.0">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.11.0">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.11.0">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.11.0">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.11.0">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.11.0">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.11.0">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.11.0">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.11.0">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.11.0">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.11.0">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.11.0">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.11.0">
            <elements>
              <com.mirth.connect.plugins.javascriptrule.JavaScriptRule version="3.11.0">
                <sequenceNumber>0</sequenceNumber>
                <enabled>true</enabled>
                <script>var des=responseMap.get(&apos;Set Patient Validation&apos;).getStatus();

if (des == &apos;SENT&apos;) {
    return true;
}
return false;</script>
              </com.mirth.connect.plugins.javascriptrule.JavaScriptRule>
              <com.mirth.connect.plugins.rulebuilder.RuleBuilderRule version="3.11.0">
                <name>Accept message if &quot;msg[&apos;PV1&apos;][&apos;PV1.9&apos;][&apos;PV1.9.2&apos;].toString()&quot; exists</name>
                <sequenceNumber>1</sequenceNumber>
                <enabled>true</enabled>
                <operator>AND</operator>
                <field>msg[&apos;PV1&apos;][&apos;PV1.9&apos;][&apos;PV1.9.2&apos;].toString()</field>
                <condition>EXISTS</condition>
                <values/>
              </com.mirth.connect.plugins.rulebuilder.RuleBuilderRule>
              <com.mirth.connect.plugins.rulebuilder.RuleBuilderRule version="3.11.0">
                <name>Accept message if &quot;msg[&apos;PV1&apos;][&apos;PV1.9&apos;][&apos;PV1.9.3&apos;].toString()&quot; exists</name>
                <sequenceNumber>2</sequenceNumber>
                <enabled>true</enabled>
                <operator>AND</operator>
                <field>msg[&apos;PV1&apos;][&apos;PV1.9&apos;][&apos;PV1.9.3&apos;].toString()</field>
                <condition>EXISTS</condition>
                <values/>
              </com.mirth.connect.plugins.rulebuilder.RuleBuilderRule>
            </elements>
          </filter>
          <transportName>Channel Writer</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
        <connector version="3.11.0">
          <metaDataId>12</metaDataId>
          <name>Set Admitting Doctor</name>
          <properties class="com.mirth.connect.connectors.vm.VmDispatcherProperties" version="3.11.0">
            <pluginProperties/>
            <destinationConnectorProperties version="3.11.0">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
              <reattachAttachments>true</reattachAttachments>
            </destinationConnectorProperties>
            <channelId>none</channelId>
            <channelTemplate>${message.transformedData}</channelTemplate>
            <mapVariables/>
          </properties>
          <transformer version="3.11.0">
            <elements>
              <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.11.0">
                <name>Validate admitting doctor</name>
                <sequenceNumber>0</sequenceNumber>
                <enabled>true</enabled>
                <script>var firstName = msg[&apos;PV1&apos;][&apos;PV1.17&apos;][&apos;PV1.17.3&apos;].toString();
var middleName = msg[&apos;PV1&apos;][&apos;PV1.17&apos;][&apos;PV1.17.4&apos;].toString();
var lastName = msg[&apos;PV1&apos;][&apos;PV1.17&apos;][&apos;PV1.17.2&apos;].toString();
var internalDoctorName = &quot;&quot;;
if(firstName.length&gt;0 &amp;&amp; lastName.length&gt;0){
	internalDoctorName = getProvider(firstName,middleName,lastName);
}else{
	return;
}

if (internalDoctorName.length &gt; 0) {
    channelMap.put(&apos;AdmittingDoctor&apos;, internalDoctorName[0].FullName);
} else {

    var doctorName = firstName;
    if(middleName.length&gt;0){
    	doctorName += &quot; &quot; + middleName;
    }
    doctorName += &quot; &quot; + lastName;
    channelMap.put(&apos;AdmittingDoctor&apos;, doctorName + &quot; *&quot;);
}</script>
              </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
            </elements>
            <inboundTemplate encoding="base64">TVNIfF5+XCZ8fENPQ1RXfHx8MjAxODA2MDQxNDA4fHxBRFReQTA0fFRXR1RBRE0uMS41Mjk2NzY4fFB8Mi4yDUVWTnxBMDR8MjAxODA2MDQxNDA4fHx8RUNDMDIxN15DUklQU15FTElaQUJFVEgNUElEfDF8fEcwMDAxNzY0ODd8Rzk3ODEwfFNUQUxOQUtFUl5DQUxFQl5UfHwyMDAwMTAxM3xNfHxXfDEyMjUgU0hJUExFWSBEUl5eTklDRVZJTExFXkZMXjMyNTc4XlVTQV5eXk9LQUxPT1NBfHwoODUwKTUxNy03ODc2fCg5OTkpOTk5LTk5OTl8RU5HfFN8Q09DVFd8RzAwMDk3ODQwNTc2fDk5OS05OS05OTk5DU5LMXwxfFJJTkdTVEFEXkJST058RkF8MTIyNSBTSElQTEVZIERSXl5OSUNFVklMTEVeRkxeMzI1NzheVVNBXl5eT0tBTE9PU0F8KDg1MCk1MTctNzg3Ng1QVjF8MXxPfEcuUFR8RUx8fEcuUFR8TUVFRVZeTWVla3NeRXZhbnxNRUVFVl5NZWVrc15FdmFuXlJeXl5NRHxNRUVFVl5NZWVrc15FdmFuXlJeXl5NRHxQVHx8fHxDUnx8Tnx8UkNSfHwwN3x8fHx8fHx8fHx8fHx8fHx8fHxDT0NUV3xHUk9JTiBJU1NVRVN8UkVHfHx8MjAxODA2MDQxNDA3fHx8fHx8fHxNRUVFVl5NZWVrc15FdmFuXlJeXl5NRH5+fg1HVDF8MXx8UklOR1NUQUReQlJPTnx8MTIyNSBTSElQTEVZIERSXl5OSUNFVklMTEVeRkxeMzI1NzheVVNBXl5eT0tBTE9PU0F8KDg1MCk1MTctNzg3Nnx8MTk4NDA1Mjl8TXx8RkF8NTE2LTA0LTg0MDd8fHxFR0xJTiBGRURFUkFMIENSRURJVCBVTklPTnw4MzggRUdMSU4gUEtXWV5eRlQgV0FMVE9OIEJFQUNIXkZMXjMyNTQ3fCg5OTkpOTk5LTk5OTl8fHxGDUdUMXwyDUlOMXwxfFVIQ0hNT3x8VU5JVEVEIEhFQUxUSENBUkUgSE1PfFBPIEJPWCA3NDA4MDBeXkFUTEFOVEFeR0FeMzAzNzReVVNBfHwoODc3KTg0Mi0zMjEwfDkxMDUwMHxFR0xJTiBGRURFUkFMIENSRURJVCBVTklPTnx8fDIwMTgwMTAxfHxOUi9PXjIwMTgwNTMxfHxSSU5HU1RBRF5CUk9OXkx8MzN8MTk4NDA1Mjl8fHx8fHx8fHx8fHx8fHx8fHw5MzI2ODM3NTB8fHx8fHx8TQ0=</inboundTemplate>
            <outboundTemplate encoding="base64"></outboundTemplate>
            <inboundDataType>HL7V2</inboundDataType>
            <outboundDataType>HL7V2</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.11.0">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.11.0">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.11.0">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.11.0">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.11.0">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.11.0">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.11.0">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.11.0">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.11.0">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.11.0">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.11.0">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.11.0">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.11.0">
            <elements/>
            <inboundDataType>HL7V2</inboundDataType>
            <outboundDataType>HL7V2</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.11.0">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.11.0">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.11.0">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.11.0">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.11.0">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.11.0">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.11.0">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.11.0">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.11.0">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.11.0">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.11.0">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.11.0">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.11.0">
            <elements>
              <com.mirth.connect.plugins.javascriptrule.JavaScriptRule version="3.11.0">
                <sequenceNumber>0</sequenceNumber>
                <enabled>true</enabled>
                <script>var des=responseMap.get(&apos;Set Patient Validation&apos;).getStatus();

if (des == &apos;SENT&apos;) {
    return true;
}
return false;</script>
              </com.mirth.connect.plugins.javascriptrule.JavaScriptRule>
              <com.mirth.connect.plugins.rulebuilder.RuleBuilderRule version="3.11.0">
                <name>Accept message if &quot;msg[&apos;PV1&apos;][&apos;PV1.9&apos;][&apos;PV1.9.2&apos;].toString()&quot; exists</name>
                <sequenceNumber>1</sequenceNumber>
                <enabled>true</enabled>
                <operator>AND</operator>
                <field>msg[&apos;PV1&apos;][&apos;PV1.9&apos;][&apos;PV1.9.2&apos;].toString()</field>
                <condition>EXISTS</condition>
                <values/>
              </com.mirth.connect.plugins.rulebuilder.RuleBuilderRule>
              <com.mirth.connect.plugins.rulebuilder.RuleBuilderRule version="3.11.0">
                <name>Accept message if &quot;msg[&apos;PV1&apos;][&apos;PV1.9&apos;][&apos;PV1.9.3&apos;].toString()&quot; exists</name>
                <sequenceNumber>2</sequenceNumber>
                <enabled>true</enabled>
                <operator>AND</operator>
                <field>msg[&apos;PV1&apos;][&apos;PV1.9&apos;][&apos;PV1.9.3&apos;].toString()</field>
                <condition>EXISTS</condition>
                <values/>
              </com.mirth.connect.plugins.rulebuilder.RuleBuilderRule>
            </elements>
          </filter>
          <transportName>Channel Writer</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
        <connector version="3.11.0">
          <metaDataId>15</metaDataId>
          <name>Set Primary Doctor</name>
          <properties class="com.mirth.connect.connectors.vm.VmDispatcherProperties" version="3.11.0">
            <pluginProperties/>
            <destinationConnectorProperties version="3.11.0">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
              <reattachAttachments>true</reattachAttachments>
            </destinationConnectorProperties>
            <channelId>none</channelId>
            <channelTemplate>${message.transformedData}</channelTemplate>
            <mapVariables/>
          </properties>
          <transformer version="3.11.0">
            <elements>
              <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.11.0">
                <name>Validate admitting doctor</name>
                <sequenceNumber>0</sequenceNumber>
                <enabled>true</enabled>
                <script>var PrimaryDoctor = getPatientPrimaryDoctor($(&apos;PatientId&apos;));

if(PrimaryDoctor.length &gt; 0){
	channelMap.put(&apos;PrimaryDoctor&apos;, PrimaryDoctor[0].FullName)
	channelMap.put(&apos;PrimaryDoctorId&apos;, PrimaryDoctor[0].ProviderId)
}</script>
              </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
            </elements>
            <inboundTemplate encoding="base64">TVNIfF5+XCZ8fENPQ1RXfHx8MjAxODA2MDQxNDA4fHxBRFReQTA0fFRXR1RBRE0uMS41Mjk2NzY4fFB8Mi4yDUVWTnxBMDR8MjAxODA2MDQxNDA4fHx8RUNDMDIxN15DUklQU15FTElaQUJFVEgNUElEfDF8fEcwMDAxNzY0ODd8Rzk3ODEwfFNUQUxOQUtFUl5DQUxFQl5UfHwyMDAwMTAxM3xNfHxXfDEyMjUgU0hJUExFWSBEUl5eTklDRVZJTExFXkZMXjMyNTc4XlVTQV5eXk9LQUxPT1NBfHwoODUwKTUxNy03ODc2fCg5OTkpOTk5LTk5OTl8RU5HfFN8Q09DVFd8RzAwMDk3ODQwNTc2fDk5OS05OS05OTk5DU5LMXwxfFJJTkdTVEFEXkJST058RkF8MTIyNSBTSElQTEVZIERSXl5OSUNFVklMTEVeRkxeMzI1NzheVVNBXl5eT0tBTE9PU0F8KDg1MCk1MTctNzg3Ng1QVjF8MXxPfEcuUFR8RUx8fEcuUFR8TUVFRVZeTWVla3NeRXZhbnxNRUVFVl5NZWVrc15FdmFuXlJeXl5NRHxNRUVFVl5NZWVrc15FdmFuXlJeXl5NRHxQVHx8fHxDUnx8Tnx8UkNSfHwwN3x8fHx8fHx8fHx8fHx8fHx8fHxDT0NUV3xHUk9JTiBJU1NVRVN8UkVHfHx8MjAxODA2MDQxNDA3fHx8fHx8fHxNRUVFVl5NZWVrc15FdmFuXlJeXl5NRH5+fg1HVDF8MXx8UklOR1NUQUReQlJPTnx8MTIyNSBTSElQTEVZIERSXl5OSUNFVklMTEVeRkxeMzI1NzheVVNBXl5eT0tBTE9PU0F8KDg1MCk1MTctNzg3Nnx8MTk4NDA1Mjl8TXx8RkF8NTE2LTA0LTg0MDd8fHxFR0xJTiBGRURFUkFMIENSRURJVCBVTklPTnw4MzggRUdMSU4gUEtXWV5eRlQgV0FMVE9OIEJFQUNIXkZMXjMyNTQ3fCg5OTkpOTk5LTk5OTl8fHxGDUdUMXwyDUlOMXwxfFVIQ0hNT3x8VU5JVEVEIEhFQUxUSENBUkUgSE1PfFBPIEJPWCA3NDA4MDBeXkFUTEFOVEFeR0FeMzAzNzReVVNBfHwoODc3KTg0Mi0zMjEwfDkxMDUwMHxFR0xJTiBGRURFUkFMIENSRURJVCBVTklPTnx8fDIwMTgwMTAxfHxOUi9PXjIwMTgwNTMxfHxSSU5HU1RBRF5CUk9OXkx8MzN8MTk4NDA1Mjl8fHx8fHx8fHx8fHx8fHx8fHw5MzI2ODM3NTB8fHx8fHx8TQ0=</inboundTemplate>
            <outboundTemplate encoding="base64"></outboundTemplate>
            <inboundDataType>HL7V2</inboundDataType>
            <outboundDataType>HL7V2</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.11.0">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.11.0">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.11.0">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.11.0">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.11.0">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.11.0">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.11.0">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.11.0">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.11.0">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.11.0">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.11.0">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.11.0">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.11.0">
            <elements/>
            <inboundDataType>HL7V2</inboundDataType>
            <outboundDataType>HL7V2</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.11.0">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.11.0">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.11.0">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.11.0">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.11.0">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.11.0">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.11.0">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.11.0">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.11.0">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.11.0">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.11.0">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.11.0">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.11.0">
            <elements>
              <com.mirth.connect.plugins.javascriptrule.JavaScriptRule version="3.11.0">
                <sequenceNumber>0</sequenceNumber>
                <enabled>true</enabled>
                <script>var des=responseMap.get(&apos;Set Patient Validation&apos;).getStatus();

if (des == &apos;SENT&apos;) {
    return true;
}
return false;</script>
              </com.mirth.connect.plugins.javascriptrule.JavaScriptRule>
              <com.mirth.connect.plugins.rulebuilder.RuleBuilderRule version="3.11.0">
                <name>Accept message if &quot;msg[&apos;PV1&apos;][&apos;PV1.9&apos;][&apos;PV1.9.2&apos;].toString()&quot; exists</name>
                <sequenceNumber>1</sequenceNumber>
                <enabled>true</enabled>
                <operator>AND</operator>
                <field>msg[&apos;PV1&apos;][&apos;PV1.9&apos;][&apos;PV1.9.2&apos;].toString()</field>
                <condition>EXISTS</condition>
                <values/>
              </com.mirth.connect.plugins.rulebuilder.RuleBuilderRule>
              <com.mirth.connect.plugins.rulebuilder.RuleBuilderRule version="3.11.0">
                <name>Accept message if &quot;msg[&apos;PV1&apos;][&apos;PV1.9&apos;][&apos;PV1.9.3&apos;].toString()&quot; exists</name>
                <sequenceNumber>2</sequenceNumber>
                <enabled>true</enabled>
                <operator>AND</operator>
                <field>msg[&apos;PV1&apos;][&apos;PV1.9&apos;][&apos;PV1.9.3&apos;].toString()</field>
                <condition>EXISTS</condition>
                <values/>
              </com.mirth.connect.plugins.rulebuilder.RuleBuilderRule>
            </elements>
          </filter>
          <transportName>Channel Writer</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
        <connector version="3.11.0">
          <metaDataId>10</metaDataId>
          <name>Set Diagnosis</name>
          <properties class="com.mirth.connect.connectors.vm.VmDispatcherProperties" version="3.11.0">
            <pluginProperties/>
            <destinationConnectorProperties version="3.11.0">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
              <reattachAttachments>true</reattachAttachments>
            </destinationConnectorProperties>
            <channelId>none</channelId>
            <channelTemplate>${message.transformedData}</channelTemplate>
            <mapVariables/>
          </properties>
          <transformer version="3.11.0">
            <elements>
              <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.11.0">
                <name>get diagnosis</name>
                <sequenceNumber>0</sequenceNumber>
                <enabled>true</enabled>
                <script>var diag = [];
var counter = getArrayOrXmlLength(msg[&apos;OBX&apos;].toString());
var i=0;
var obx = [];
while(i &lt; counter){
	if(!!msg[&apos;OBX&apos;][i]){
	  var val = {};
       val.Value = msg[&apos;OBX&apos;][i][&apos;OBX.5&apos;][&apos;OBX.5.1&apos;].toString()&#xd;
       val.EncounterId = msg[&apos;MSH&apos;][&apos;MSH.10&apos;][&apos;MSH.10.1&apos;].toString()&#xd;
       val.ObservationDate = msg[&apos;MSH&apos;][&apos;MSH.7&apos;][&apos;MSH.7.1&apos;].toString()
	  obx.push(val);
	}
	i++
}



channelMap.put(&apos;ObservationDetails&apos;, obx);</script>
              </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
            </elements>
            <inboundTemplate encoding="base64"></inboundTemplate>
            <outboundTemplate encoding="base64"></outboundTemplate>
            <inboundDataType>HL7V2</inboundDataType>
            <outboundDataType>JSON</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.11.0">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.11.0">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.11.0">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.11.0">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.11.0">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.11.0">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.11.0">
              <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.11.0">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.11.0">
            <elements/>
            <inboundDataType>JSON</inboundDataType>
            <outboundDataType>JSON</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.11.0">
              <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.11.0">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.11.0">
              <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.11.0">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.11.0">
            <elements>
              <com.mirth.connect.plugins.javascriptrule.JavaScriptRule version="3.11.0">
                <sequenceNumber>0</sequenceNumber>
                <enabled>true</enabled>
                <script>var des=responseMap.get(&apos;Set Patient Validation&apos;).getStatus();

if (des == &apos;SENT&apos;) {
    return true;
}
return false;</script>
              </com.mirth.connect.plugins.javascriptrule.JavaScriptRule>
              <com.mirth.connect.plugins.javascriptrule.JavaScriptRule version="3.11.0">
                <name></name>
                <sequenceNumber>1</sequenceNumber>
                <enabled>true</enabled>
                <operator>AND</operator>
                <script>if (!!msg[&apos;DG1&apos;][0]) {
    return true;
}
return false;</script>
              </com.mirth.connect.plugins.javascriptrule.JavaScriptRule>
            </elements>
          </filter>
          <transportName>Channel Writer</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
        <connector version="3.11.0">
          <metaDataId>11</metaDataId>
          <name>Set Procedures</name>
          <properties class="com.mirth.connect.connectors.vm.VmDispatcherProperties" version="3.11.0">
            <pluginProperties/>
            <destinationConnectorProperties version="3.11.0">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
              <reattachAttachments>true</reattachAttachments>
            </destinationConnectorProperties>
            <channelId>none</channelId>
            <channelTemplate>${message.transformedData}</channelTemplate>
            <mapVariables/>
          </properties>
          <transformer version="3.11.0">
            <elements>
              <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.11.0">
                <name>get diagnosis</name>
                <sequenceNumber>0</sequenceNumber>
                <enabled>true</enabled>
                <script>var proc = [];
var counter = getArrayOrXmlLength(msg[&apos;PR1&apos;].toString());
var i=0;
while(i &lt; counter){
		if(!!msg[&apos;PR1&apos;][i]){
		var procedure = new Procedure();
		procedure.id = msg[&apos;PR1&apos;][i][&apos;PR1.1&apos;][&apos;PR1.1.1&apos;].toString();
		procedure.code =msg[&apos;PR1&apos;][i][&apos;PR1.3&apos;][&apos;PR1.3.1&apos;].toString();
		procedure.description =msg[&apos;PR1&apos;][i][&apos;PR1.4&apos;][&apos;PR1.4.1&apos;].toString();
		procedure.dateTime =msg[&apos;PR1&apos;][i][&apos;PR1.5&apos;][&apos;PR1.5.1&apos;].toString();
		procedure.surgeon =msg[&apos;PR1&apos;][i][&apos;PR1.11&apos;][&apos;PR1.11.1&apos;].toString();
		proc.push(procedure);
	}
	i++
}
//for (var i = 0; i &lt; getArrayOrXmlLength(msg[&apos;PR1&apos;].toString()); i++) {
//	if(!!msg[&apos;PR1&apos;][i]){
//		var procedure = new Procedure();
//		procedure.id = msg[&apos;PR1&apos;][i][&apos;PR1.1&apos;][&apos;PR1.1.1&apos;].toString();
//		procedure.code =msg[&apos;PR1&apos;][i][&apos;PR1.3&apos;][&apos;PR1.3.1&apos;].toString();
//		procedure.description =msg[&apos;PR1&apos;][i][&apos;PR1.4&apos;][&apos;PR1.4.1&apos;].toString();
//		procedure.dateTime =msg[&apos;PR1&apos;][i][&apos;PR1.5&apos;][&apos;PR1.5.1&apos;].toString();
//		procedure.surgeon =msg[&apos;PR1&apos;][i][&apos;PR1.11&apos;][&apos;PR1.11.1&apos;].toString();
//
//		
//		proc.push(procedure);
//	}	
//}

channelMap.put(&apos;Procedure&apos;, proc);</script>
              </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
            </elements>
            <inboundTemplate encoding="base64">TVNIfF5+XCZ8fENPQ1dSfHx8MjAxODA2MDQxNDEwfHxBRFReQTA4fFdSR1RBRE0uMS4yMzgzMzQxNXxQfDIuMgpFVk58QTA4fDIwMTgwNjA0MTQxMHx8fDFGU0xBUTcyOTheQkFSUkVSQV5KT05BTFlOClBJRHwxfHxIMDAwNzIxOTYyfEg2MDI2MzJ8Sk9ITlNPTl5ET1JFRU5eTFlOTnx8MTk1OTA1MjF8RnxKT0hOU09OXkRPUkVFTnxXfDY5MDIgRkVSTkFORElOQSBSRF5eTkFWQVJSRV5GTF4zMjU2Nl5VU0FeXl5TQU5UQVJPU0F8fCg4NTApOTM2LTYyMjN8KDk5OSk5OTktOTk5OXxFTkd8TXxDT0NXUnxIMDAxMjk4NjA0NDh8MzAxLTY2LTg3NzYKTksxfDF8Sk9ITlNPTl5BTEFOfFNQfDY5MDIgRkVSTkFORElOQSBSRF5eTkFWQVJSRV5GTF4zMjU2Nl5VU0FeXl5TQU5UQVJPU0F8KDg1MCkzODQtNDYzOCBDRUxMfCg4NTApNDUyLTQ5NTMgV0sKUFYxfDF8SXxILjVOXkguNTE0XkF8RUx8fHxTRUxSSV5TZWxsZXJzXlJpY2hhcmReR15eXk1EfFNFTFJJXlNlbGxlcnNeUmljaGFyZF5HXl5eTUR8Q0FWQ0heQ2F2ZV5DaHJpc3RvcGhlcnxTVVJHfHx8fENSfHxOfFNFTFJJXlNlbGxlcnNeUmljaGFyZF5HXl5eTUR8SU58fDA2fHx8fHx8fHx8fHx8fHx8fC5IfHx8Q09DV1J8T1NURU9BUlRIUklUSVN8RElTfHx8MjAxODA1MzEwNTE5fDIwMTgwNjAxMTY0MHx8fHx8fHxTQUdUQV5TYWdoaXJeVGFoZXJeTV5eXk1EXl5eXl5eWFh+fn4KREcxfDF8STEwfE0xNy4xMXxVTklMQVRFUkFMIFBSSU1BUlkgT1NURU9BUlRIUklUSVMsIFJJR0hUIEtORUV8fEF8fDQ3MHx8fDk4NjAuNjR8fHx8fHx8TgpERzF8MnxJMTB8TTE3LjExfFVOSUxBVEVSQUwgUFJJTUFSWSBPU1RFT0FSVEhSSVRJUywgUklHSFQgS05FRXx8V3x8NDcwfHx8OTg2MC42NHx8fHx8fHxOCkRHMXwzfEkxMHxNMjEuMDYxfFZBTEdVUyBERUZPUk1JVFksIE5PVCBFTFNFV0hFUkUgQ0xBU1NJRklFRCwgUklHSFQgfHxXfHw0NzB8fHw5ODYwLjY0fHx8fHx8fE4KREcxfDR8STEwfEU1NS45fFZJVEFNSU4gRCBERUZJQ0lFTkNZLCBVTlNQRUNJRklFRHx8V3x8NDcwfHx8OTg2MC42NHx8fHx8fHxOCkRHMXw1fEkxMHxGMTcuMjAwfE5JQ09USU5FIERFUEVOREVOQ0UsIFVOU1BFQ0lGSUVELCBVTkNPTVBMSUNBVEVEfHxXfHw0NzB8fHw5ODYwLjY0fHx8fHx8fE4KREcxfDZ8STEwfEYzMi45fE1BSk9SIERFUFJFU1NJVkUgRElTT1JERVIsIFNJTkdMRSBFUElTT0RFLCBVTlNQRUNJfHxXfHw0NzB8fHw5ODYwLjY0fHx8fHx8fE4KREcxfDd8STEwfEsyMS45fEdBU1RSTy1FU09QSEFHRUFMIFJFRkxVWCBESVNFQVNFIFdJVEhPVVQgRVNPUEhBR0lUfHxXfHw0NzB8fHw5ODYwLjY0fHx8fHx8fE4KREcxfDh8STEwfEszMS44NHxHQVNUUk9QQVJFU0lTfHxXfHw0NzB8fHw5ODYwLjY0fHx8fHx8fE4KR1QxfDF8fEpPSE5TT05eRE9SRUVOXkxZTk58fDY5MDIgRkVSTkFORElOQSBSRF5eTkFWQVJSRV5GTF4zMjU2Nl5VU0FeXl5TQU5UQVJPU0F8KDg1MCk5MzYtNjIyM3x8MTk1OTA1MjF8Rnx8U0F8MzAxLTY2LTg3NzZ8fHxSRVRJUkVEfC5eXi5eWFheMDAwMDB8KDk5OSk5OTktOTk5OQpHVDF8Mnx8Sk9ITlNPTl5BTEFOXkZ8fC5eXi5eWFheOTk5OTk5XlVTQV5eXkVTQ0FNQklBfCg4NTApOTM2LTYyMjN8fDE5MDEwMTAxfE18fFNQCklOMXwxfFRSSVNURHx8VFJJQ0FSRSBFQVNUfFBPIEJPWCA3OTgxXl5NQURJU09OXldJXjUzNzA3LTc5ODFeVVNBfHwoODAwKTQ0NC01NDQ1fENBUC1PNnxVTklURUQgU1RBVEVTIE5BVll8fHwyMDE4MDEwMXx8MTgxMDEwMjQ0OTMvSV4yMDE4MDUzMXx8Sk9ITlNPTl5BTEFOXkZ8MDJ8MTkwMTAxMDF8fHx8fHx8fHx8fHx8fHx8fHwwMDMwMDE2NTQwNHx8fHx8fHxNClBSMXwxfDM1fDBTUkMwSjleXkkxMHxSRVBMQUNFIE9GIFIgS05FRSBKVCBXSVRIIFNZTlRIIFNVQiwgQ0VNRU5ULCBPUEVOIHwyMDE4MDUzMXx8fHx8fFNFTFJJCg==</inboundTemplate>
            <outboundTemplate encoding="base64"></outboundTemplate>
            <inboundDataType>HL7V2</inboundDataType>
            <outboundDataType>JSON</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.11.0">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.11.0">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.11.0">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.11.0">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.11.0">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.11.0">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.11.0">
              <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.11.0">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.11.0">
            <elements/>
            <inboundDataType>JSON</inboundDataType>
            <outboundDataType>JSON</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.11.0">
              <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.11.0">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.11.0">
              <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.11.0">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.11.0">
            <elements>
              <com.mirth.connect.plugins.javascriptrule.JavaScriptRule version="3.11.0">
                <sequenceNumber>0</sequenceNumber>
                <enabled>true</enabled>
                <script>var des=responseMap.get(&apos;Set Patient Validation&apos;).getStatus();
if (des == &apos;SENT&apos;) {
    return true;
}
return false;</script>
              </com.mirth.connect.plugins.javascriptrule.JavaScriptRule>
              <com.mirth.connect.plugins.rulebuilder.RuleBuilderRule version="3.11.0">
                <name>Accept message if &quot;msg[&apos;PR1&apos;].toString()&quot; exists</name>
                <sequenceNumber>1</sequenceNumber>
                <enabled>true</enabled>
                <operator>AND</operator>
                <field>msg[&apos;PR1&apos;].toString()</field>
                <condition>EXISTS</condition>
                <values/>
              </com.mirth.connect.plugins.rulebuilder.RuleBuilderRule>
            </elements>
          </filter>
          <transportName>Channel Writer</transportName>
          <mode>DESTINATION</mode>
          <enabled>false</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
        <connector version="3.11.0">
          <metaDataId>3</metaDataId>
          <name>Save Observation</name>
          <properties class="com.mirth.connect.connectors.js.JavaScriptDispatcherProperties" version="3.11.0">
            <pluginProperties/>
            <destinationConnectorProperties version="3.11.0">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
              <reattachAttachments>true</reattachAttachments>
            </destinationConnectorProperties>
            <script>return JSON.stringify($(&apos;Observations&apos;));</script>
          </properties>
          <transformer version="3.11.0">
            <elements>
              <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.11.0">
                <name>Observation Mapping</name>
                <sequenceNumber>0</sequenceNumber>
                <enabled>true</enabled>
                <script>//for (var i = 0; i &lt; getArrayOrXmlLength(msg[&apos;OBR&apos;][&apos;OBR.3&apos;]); i++){
//	obs.OrderNumber += msg[&apos;OBR&apos;][i][&apos;OBR.3&apos;][&apos;OBR.3.1&apos;].toString() + &quot; &quot;
//}
for (var i = 0; i &lt; getArrayOrXmlLength(msg[&apos;OBR&apos;][&apos;OBR.4&apos;]); i++){
	var obs = new Observations();
	obs.PatientId = $(&apos;PatientId&apos;);
	obs.LastName = msg[&apos;PID&apos;][&apos;PID.5&apos;][&apos;PID.5.1&apos;].toString().replace(&quot;&apos;&quot;,&quot;&apos;&apos;&quot;);
	obs.FirstName = msg[&apos;PID&apos;][&apos;PID.5&apos;][&apos;PID.5.2&apos;].toString().replace(&quot;&apos;&quot;,&quot;&apos;&apos;&quot;);
	obs.SSN = msg[&apos;PID&apos;][&apos;PID.19&apos;][&apos;PID.19.1&apos;].toString();
	obs.DOB = msg[&apos;PID&apos;][&apos;PID.7&apos;][&apos;PID.7.1&apos;].toString();
	obs.PhoneNumber = msg[&apos;PID&apos;][&apos;PID.13&apos;][&apos;PID.13.1&apos;].toString();
	obs.PatientType = msg[&apos;PV1&apos;][&apos;PV1.18&apos;][&apos;PV1.18.1&apos;].toString();
	obs.AdmissionDate = msg[&apos;PV1&apos;][&apos;PV1.44&apos;][&apos;PV1.44.1&apos;].toString();
	
	obs.DocumentIdentifier = msg[&apos;OBR&apos;][i][&apos;OBR.4&apos;][&apos;OBR.4.1&apos;].toString()
	obs.DocumentName = msg[&apos;OBR&apos;][i][&apos;OBR.4&apos;][&apos;OBR.4.2&apos;].toString()
	obs.DocumentType = msg[&apos;OBR&apos;][i][&apos;OBR.4&apos;][&apos;OBR.4.3&apos;].toString()

	obs.OrderNumber += msg[&apos;OBR&apos;][i][&apos;OBR.3&apos;][&apos;OBR.3.1&apos;].toString()

	emrdoc = getEmrDocument(msg[&apos;OBR&apos;][i][&apos;OBR.4&apos;][&apos;OBR.4.2&apos;].toString())
	
	obs.MnemonicCode = emrdoc.MnemonicCode
	obs.EmrDocumentName = emrdoc.EmrDocumentName
	obs.EmrDocumentType = emrdoc.EmrDocumentType
	obs.EmrDocumentId = emrdoc.EmrDocumentId

	obs.PreferredProvider = $(&apos;PreferredProvider&apos;)
	obs.ObservationDate = msg[&apos;OBR&apos;][&apos;OBR.7&apos;][&apos;OBR.7.1&apos;].toString()
	obs.ObservationStatus = msg[&apos;OBX&apos;][0][&apos;OBX.11&apos;][&apos;OBX.11.1&apos;].toString()
	obs.InterestedDoctor = msg[&apos;OBX&apos;][0][&apos;OBX.5&apos;][&apos;OBX.5.1&apos;].toString().replace(&quot;Interested Provider: &quot;,&quot;&quot;)
		
	obs.OrderingDoctor = $(&apos;OrderingDoctor&apos;)
	obs.AttendingDoctor = $(&apos;AttendingDoctor&apos;);
	obs.ReferringDoctor = $(&apos;ReferringDoctor&apos;);
	obs.ConsultingDoctor = $(&apos;ConsultingDoctor&apos;);
	obs.AdmittingDoctor = $(&apos;AdmittingDoctor&apos;);

	obs.PrimaryDoctor = $(&apos;PrimaryDoctor&apos;);
	obs.PrimaryDoctorId = $(&apos;PrimaryDoctorId&apos;);
	obs.SignedBy = $(&apos;SignedBy&apos;)
	obs.SignatureDetails =  $(&apos;SignatureDetails&apos;)
	obs.SendingFacility =  msg[&apos;MSH&apos;][&apos;MSH.4&apos;][&apos;MSH.4.1&apos;].toString()
	obs.EncounterId =  msg[&apos;MSH&apos;][&apos;MSH.10&apos;][&apos;MSH.10.1&apos;].toString()
	obs.DateProcessed = msg[&apos;MSH&apos;][&apos;MSH.7&apos;][&apos;MSH.7.1&apos;].toString()

	insertQueryBuilder(obs,&quot;Observations&quot;);
	$(&apos;Observations&apos;,obs)

}

insertQueryBuilder(&quot;ObservationDetails&quot;,$(&apos;ObservationDetails&apos;))</script>
              </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
            </elements>
            <inboundTemplate encoding="base64">TVNIfF5+XCZ8SENBUlBUfEZvcnQgV2FsdG9uIEJlYWNoIE1lZGljYWwgQ2VudGVyfFBSSU1FU1VJVEV8MTE5N3wyMDIxMDIwOTE0MTh8fE9SVV5SMDF8RldEUFRPLjEuNjY1NDczN3xQfDIuM3x8fEFMDVBJRHwxfHxGMDAwMTcyODY5fHxTTUlUSF5TSEVSUklFXkRJQU5FfHwxOTU1MTAwN3xGfHx8fHx8fHx8fEYwMDczMTE4ODUzMXwyNDctMTMtNjQyNQ1QVjF8MXxJfEYuUFRDXkYuUzExN15CfHx8fF5XaWxsaWFtc15Ccml0dGFueV5eXl5ET3xeUkVGRVJSRUReU0VMRnxQVU1DSF5QdW1waHJleV5DaGVycmFeXl5eTUR+XkJyYWRzaGF3Xk1lbGlzc2FeXl5eRE9+XlJldF5LaW1iZXJseXx8fHx8fHx8Xk5FSUxeUkFORFleXl5eTUR8SU58fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fDIwMjAwOTA0MTM1NQ1PUkN8fHx8fHx8fHx8fHxeR3JhZHleSmVubmlmZXINT0JSfDF8Ri5QRE9DfEYuUERPQzIwMjEwMjA5LTA0MjF8UERQTlBTWUNIXlBzeWNoaWF0cmljIFByb2dyZXNzIE5vdGVeUkVQT1JUU3x8fDIwMjEwMjA5MTQxM3x8fHx8fHx8fF5HcmFkeV5KZW5uaWZlcnx8fHx8fHx8fEYNT0JYfDF8U1R8Tm92b0luc2VydGVkXk5vdGV8fEludGVyZXN0ZWQgUHJvdmlkZXI6IENoZXJyYSBGYXllIFB1bXBocmV5IE1EfHx8fHx8Rg1PQlh8MnxTVHxCbGFua3x8IA1PQlh8M3xTVHxCbGFua3x8Rk9SVCBXQUxUT04gQkVBQ0ggTUVESUNBTCBDRU5URVIgKENPQ0ZXKQ1PQlh8NHxTVHxCbGFua3x8UHN5Y2hpYXRyaWMgUHJvZ3Jlc3MgTm90ZQ1PQlh8NXxTVHxCbGFua3x8UkVQT1JUIzowMjA5LTA0MjEgIFJFUE9SVCBTVEFUVVM6IFNpZ25lZA1PQlh8NnxTVHxCbGFua3x8REFURTowMi8wOS8yMSBUSU1FOiAxNDEzDU9CWHw3fFNUfEJsYW5rfHwgIA1PQlh8OHxTVHxCbGFua3x8UEFUSUVOVDogU01JVEgsU0hFUlJJRSBESUFORSAgICAgICAgICAgIFVOSVQgIzogRjAwMDE3Mjg2OQ1PQlh8OXxTVHxCbGFua3x8QUNDT1VOVCM6IEYwMDczMTE4ODUzMSAgICAgICAgICAgICAgICAgUk9PTS9CRUQ6IEYuUzExNy1CDU9CWHwxMHxTVHxCbGFua3x8QUdFOiA2NSAgICAgIFNFWDogRiAgICAgICAgICAgICAgICAgICAgIEFUVEVORDogV2lsbGlhbXMsQnJpdHRhbnkgQyAgRE8NT0JYfDExfFNUfEJsYW5rfHxBRE0gRFQ6IDA5LzA0LzIwICAgICAgICAgICAgICAgICAgICAgICAgQVVUSE9SOiBHcmFkeSxKZW5uaWZlciBEICBBUFJODU9CWHwxMnxTVHxCbGFua3x8UkVQIFNSViBEVDowMi8wOS8yMSAgICAgICAgICAgICAgICAgUkVQIFNSViBUTTogMTQxMw1PQlh8MTN8U1R8Qmxhbmt8fCAgDU9CWHwxNHxTVHxCbGFua3x8KiBBTEwgZWRpdHMgb3IgYW1lbmRtZW50cyBtdXN0IGJlIG1hZGUgb24gdGhlIGVsZWN0cm9uaWMvY29tcHV0ZXIgZG9jdW1lbnQgKg1PQlh8MTV8U1R8Qmxhbmt8fCANT0JYfDE2fFNUfEJsYW5rfHwgDU9CWHwxN3xTVHxCbGFua3x8U3ViamVjdGl2ZQ1PQlh8MTh8U1R8Qmxhbmt8fENoaWVmIGNvbXBsYWludDoNT0JYfDE5fFNUfEJsYW5rfHxzdWljaWRhbCBpZGVhdGlvbnMNT0JYfDIwfFNUfEJsYW5rfHxJbnRlcnZhbCBoaXN0b3J5Og1PQlh8MjF8U1R8Qmxhbmt8fDAyLzA5OiBNZXQgd2l0aCBwYXRpZW50IHdoaWxlIHNoZSB3YXMgcmVzdGluZyBpbiBiZWQgaW4gaGVyIHJvb20uICBTaGUgc3RhdGVzIA1PQlh8MjJ8U1R8Qmxhbmt8fGhlciBrbmVlIGlzIGJvdGhlcmluZyBoZXIgc29tZSwgYnV0IHNoZSBpcyB0YWtpbmcgbWVkaWNhdGlvbiBmb3IgaXQuICBTaGUgaXMgDU9CWHwyM3xTVHxCbGFua3x8dXBkYXRlZCBvbiB0aGUgc3RhdHVzIG9mIGhlciBsb25nLXRlcm0gY2FyZSB3YWl2ZXIsIGFuZCBzYXlzIHNoZSBpcyBva2F5IA1PQlh8MjR8U1R8Qmxhbmt8fHdhaXRpbmcuICBQYXRpZW50IGhhcyBiZWVuIG1lZGljYXRpb24gY29tcGxpYW50IHBlciBkb2N1bWVudGF0aW9uIGFuZCBzbGVwdCBmb3IgDU9CWHwyNXxTVHxCbGFua3x8NyBob3VycyBsYXN0IG5pZ2h0Lg1PQlh8MjZ8U1R8Qmxhbmt8fCANT0JYfDI3fFNUfEJsYW5rfHwwMi8wODogUGF0aWVudCBoYXMgc29tZSBjb21wbGFpbnRzIHRvZGF5IG9mIGhlciByaWdodCBrbmVlIGJlaW5nIHBhaW5mdWwNT0JYfDI4fFNUfEJsYW5rfHxhbmQgc2xpZ2h0bHkgc3dvbGxlbi4gIFNoZSBzdGF0ZXMgc2hlIGRvZXMgbm90IHJlbWVtYmVyIGRvaW5nIGFueXRoaW5nIHRvDU9CWHwyOXxTVHxCbGFua3x8aXQuICBNZWRpY2FsIE5QIG5vdGlmaWVkLiAgUGVyIGRvY3VtZW50YXRpb24gcGF0aWVudCBoYXMgYmVlbiBtZWRpY2F0aW9uDU9CWHwzMHxTVHxCbGFua3x8Y29tcGxpYW50IGFuZCBzbGVwdCBmb3IgNyBob3Vycy4gIFNoZSBjb250aW51ZXMgdG8gd2FpdCBvbiBhcHByb3ZhbCBmb3IgaGVyDU9CWHwzMXxTVHxCbGFua3x8bG9uZy10ZXJtIGNhcmUgd2FpdmVyLg1PQlh8MzJ8U1R8Qmxhbmt8fCANT0JYfDMzfFNUfEJsYW5rfHwwMi8wNzogUGF0aWVudCBpcyBzdGFibGUgb24gdW5pdCwgbm8gY29uY2VybnMgb3IgY29tcGxhaW50cyBhdCB0aGlzIHRpbWUuDU9CWHwzNHxTVHxCbGFua3x8Q29udGludWVzIHRvIGJlIG1lZGljYXRpb24gY29tcGxpYW50IGFuZCBwZXIgZG9jdW1lbnRhdGlvbiBzbGVwdCA2IGhvdXJzLg1PQlh8MzV8U1R8Qmxhbmt8fFNoZSBjb250aW51ZXMgdG8gd2FpdCBmb3IgaGVyIGxvbmctdGVybSBjYXJlIGZvciBBTEYgcGxhY2VtZW50Lg1PQlh8MzZ8U1R8Qmxhbmt8fCANT0JYfDM3fFNUfEJsYW5rfHwwMi8wNjogUGF0aWVudCBpcyBwc3ljaGlhdHJpY2FsbHkgc3RhYmxlIG9uIHVuaXQsIG5vIGNvbmNlcm5zIG9yIGNvbXBsYWludHMNT0JYfDM4fFNUfEJsYW5rfHxhdCB0aGlzIHRpbWUuICBTaGUgaXMgY29tcGxpYW50IHdpdGggbWVkaWNhdGlvbnMgYW5kIHBlciBkb2N1bWVudGF0aW9uDU9CWHwzOXxTVHxCbGFua3x8c2xlcHQgZm9yIDcgaG91cnMgbGFzdCBuaWdodC4gIFNoZSBpcyBhd2FpdGluZyBBTEYgcGxhY2VtZW50IG9wdGlvbnMuDU9CWHw0MHxTVHxCbGFua3x8IA1PQlh8NDF8U1R8Qmxhbmt8fDAyLzA1OiBQYXRpZW50IGlzIHBzeWNoaWF0cmljYWxseSBzdGFibGUsIGhhcyBubyBjb25jZXJucyBvciBjb21wbGFpbnRzIGF0DU9CWHw0MnxTVHxCbGFua3x8dGhpcyB0aW1lLCBhbmQgbm8gYmVoYXZpb3JhbCBpc3N1ZXMgbm90ZWQuICBTaGUgY29udGludWVzIHRvIHdhaXQgZm9yIGhlcg1PQlh8NDN8U1R8Qmxhbmt8fGxvbmctdGVybSBjYXJlIHdhaXZlciBmb3IgQUxGIGFwcHJvdmFsLiAgUGF0aWVudCBoYXMgYmVlbiBtZWRpY2F0aW9uDU9CWHw0NHxTVHxCbGFua3x8Y29tcGxpYW50IDcgaG91cnMgcGVyIGRvY3VtZW50YXRpb24uDU9CWHw0NXxTVHxCbGFua3x8IA1PQlh8NDZ8U1R8Qmxhbmt8fDAyLzA0OiBQYXRpZW50IGhhcyBubyBjb25jZXJucyBvciBjb21wbGFpbnRzIHRvZGF5LiAgU2hlIGNvbnRpbnVlcyB0byBiZQ1PQlh8NDd8U1R8Qmxhbmt8fHdvcnJpZWQgYWJvdXQgaGVyIGJhbmsgYWNjb3VudCBhbmQgaGVyIGJhbGFuY2UsIHNoZSBzYXlzIHNvY2lhbCB3b3JrIGlzDU9CWHw0OHxTVHxCbGFua3x8aGVscGluZyBoZXIgd2l0aCB0aGlzLiAgUGF0aWVudCBpcyBwc3ljaGlhdHJpY2FsbHkgc3RhYmxlIGFuZCBjb250aW51ZXMgdG8NT0JYfDQ5fFNUfEJsYW5rfHx3YWl0IGZvciBoZXIgTWVkaWNhcmUgd2FpdmVyIHRvIGJlIGFwcHJvdmVkIHNvIHNoZSBjYW4gZmluZCBwbGFjZW1lbnQuICBQZXINT0JYfDUwfFNUfEJsYW5rfHxkb2N1bWVudGF0aW9uIHNoZSBpcyBtZWRpY2F0aW9uIGNvbXBsaWFudCBhbmQgc2xlcHQgZm9yIDcgaG91cnMuDU9CWHw1MXxTVHxCbGFua3x8IA1PQlh8NTJ8U1R8Qmxhbmt8fDAyLzAzOiBNZXQgd2l0aCBwdCB0aGlzIG1vcm5pbmcuIFNoZSBpcyBzdGFibGUgb24gdW5pdC4gQWRoZXJlbnQgd2l0aCBtZWRzLA1PQlh8NTN8U1R8Qmxhbmt8fGF0dGVuZGluZyBtZWFscywgYW5kIGFtYnVsYXRvcnkgb24gdW5pdCB3aXRoIHdhbGtlci4gU3RpbGwgYXdhaXRpbmcNT0JYfDU0fFNUfEJsYW5rfHxtZWRpY2FpZCB3YWl2ZXIuIFJldGlyZW1lbnQgQUxGIGlzIGludGVyZXN0ZWQgaW4gaGVyIHBhY2tldCBvbmNlIHdhaXZlcg1PQlh8NTV8U1R8Qmxhbmt8fGdvZXMgdGhyb3VnaC4gUHQgdXBkYXRlZCBvbiB0eCB0ZWFtIG1lZXRpbmcuDU9CWHw1NnxTVHxCbGFua3x8IA1PQlh8NTd8U1R8Qmxhbmt8fDAyLzAyOiBNZXQgd2l0aCBwdCB0aGlzIG1vcm5pbmcuIFNoZSBpcyBhZGhlcmVudCB3aXRoIG1lZGljYXRpb24gcmVnaW1lbi4NT0JYfDU4fFNUfEJsYW5rfHxQdCBpcyBzaXR0aW5nIGluIHdoZWVsY2hhaXIgYXQgbnVyc2luZyBtZWQgc3RhdGlvbi4gSGVyIGhpcCBwYWluIGZlZWxzIGENT0JYfDU5fFNUfEJsYW5rfHxsb3QgYmV0dGVyIHRvZGF5LCBidXQgc3RpbGwgc29yZS4gTW9vZCBpcyBzdGFibGUuIE1lZHMgYXJlIGhlbHBpbmcuIEhhcw1PQlh8NjB8U1R8Qmxhbmt8fG1pbGQgc3ViY29uanVuY3RpdmFsIGhlbW9ycmhhZ2Ugbm90ZWQgdG8gbGVmdCBleWUuIE5vIHBhaW4uIFNoZSB3YXMgZ2l2ZW4NT0JYfDYxfFNUfEJsYW5rfHx1cGRhdGUgZnJvbSB0eCB0ZWFtIGFib3V0IHJldGlyZW1lbnQgY29tbXVuaXR5IGFuZCB0aGF0IFNXIGlzIHdhaXRpbmcgb24NT0JYfDYyfFNUfEJsYW5rfHxoZWFyaW5nIGJhY2sgYWJvdXQgdGhlIG1lZGljYWlkIHdhaXZlci4gU3RhdGVkIHNoZSBkaWRuJ3Qgc2xlZXAgd2VsbCBsYXN0DU9CWHw2M3xTVHxCbGFua3x8bmlnaHQgZHVlIHRvIHNoZSBoYWQgYSBuaWdodG1hcmUuIEFwcGV0aXRlIGlzIHN0YWJsZSBhbmQgc2hlIGlzIGVhdGluZw1PQlh8NjR8U1R8Qmxhbmt8fHdlbGwuDU9CWHw2NXxTVHxCbGFua3x8IA1PQlh8NjZ8U1R8Qmxhbmt8fDAyLzAxOiBNZXQgd2l0aCBwdCB0aGlzIG1vcm5pbmcuIFNoZSB3YXMgaW4gaGVyIHJvb20gc2xlZXBpbmcuIEluZm9ybWVkIHB0DU9CWHw2N3xTVHxCbGFua3x8dGhhdCB0aGVyZSBpcyBhIHJldGlyZW1lbnQgY29tbXVuaXR5IHRoYXQgaGFzIHJlcXVlc3RlZCBpbmZvcm1haXRvbiBhbmQNT0JYfDY4fFNUfEJsYW5rfHxjaGVja2luZyBvbiB0aGUgbWVkaWNhaWQgd2FpdmVyIGZvciBwbGFjZW1lbnQuIFNoZSBpcyBmZWVsaW5nIGEgbGl0dGxlDU9CWHw2OXxTVHxCbGFua3x8aG9wZWZ1bC4gV2lsbCB0cnkgYW5kIGdldCBuYW1lIG9mIHBsYWNlIGZvciBwYXRpZW50LlNoZSBoYXMgYmVlbiBzdGFibGUgb24NT0JYfDcwfFNUfEJsYW5rfHx1bml0Lg1PQlh8NzF8U1R8Qmxhbmt8fCANT0JYfDcyfFNUfEJsYW5rfHwwMS8zMTogTWV0IHdpdGggcHQgdGhpcyBtb3JuaW5nLiBTaGUgaXMgYW1idWxhdGluZyBvbiB1bml0IHdpdGggd2Fsa2VyLiBTaGUNT0JYfDczfFNUfEJsYW5rfHxoYXMgaGlwIHBhaW4gdGhpcyBtb3JuaW5nLiBTaGUgaXMgZWF0aW5nIHdlbGwuIFNoZSBoYWQgZ3JpdHMsIGZyZW5jaCB0b2FzdCwNT0JYfDc0fFNUfEJsYW5rfHxlZ2dzLCBvcmFuZ2UganVpY2UgYW5kIGNvZmZlZSBmb3IgYnJlYWtmYXN0LiBTaGUgc3RhdGVzIHNoZSB1c3VhbGx5IGRvZXNuJ3QNT0JYfDc1fFNUfEJsYW5rfHx3YW50IHRvIGdldCB1cCBvbiB0aGUgd2Vla2VuZHMgZm9yIGJyZWFrZmFzdCwgYnV0IHNoZSBoYWQgdG9vIG11Y2ggcGFpbiBhbmQNT0JYfDc2fFNUfEJsYW5rfHxuZWVkZWQgdG8gZ2V0ICJtb3ZpbmcuIiBTaGUgaXMgd2FpdGluZyBmb3IgQUxGIG9wdGlvbnMuDU9CWHw3N3xTVHxCbGFua3x8IA1PQlh8Nzh8U1R8Qmxhbmt8fDAxLzMwOiBNZXQgd2l0aCBwdCB0aGlzIG1vcm5pbmcuIFNoZSBpcyBhbWJ1bGF0b3J5IG9uIHVuaXQgd2l0aCB3YWxrZXIuIFB0DU9CWHw3OXxTVHxCbGFua3x8YXR0ZW5kcyBtZWFscy4gU2hlIGlzIGZydXN0cmF0ZWQgYXQgdGltZXMgZHVlIHRvIG5vIHBsYWNlIHRvIGxpdmUuIFNoZQ1PQlh8ODB8U1R8Qmxhbmt8fHJlYWRzIGluIGhlciByb29tLiBBZGhlcmVudCB3aXRoIG1lZGljYXRpb25zLCBkZW5pZXMgc2lkZSBlZmZlY3RzLiBTaGUgaXMNT0JYfDgxfFNUfEJsYW5rfHxzdGlsbCBhd2FpdGluZyBBTEYgb3B0aW9ucy4gQ3VycmVudGx5IGhhcyBiZWVuIG9uIHVuaXQgMTQ4IGRheXMuIFNoZSBoYXMNT0JYfDgyfFNUfEJsYW5rfHxiZWVuIHN0YWJsZS4NT0JYfDgzfFNUfEJsYW5rfHwgDU9CWHw4NHxTVHxCbGFua3x8MDEvMjk6IFNoZXJyaWUgaXMgYW1idWxhdGluZyBvbiB1bml0IHdpdGggd2Fsa2VyIGZvciBtb2JpbGl0eS4gU2hlIGF0dGVuZHMNT0JYfDg1fFNUfEJsYW5rfHxtZWFscy4gRG9lc24ndCBhdHRlbmQgbWFueSBncm91cHMgYW55bW9yZS4gU2hlIGhhcyBiZWVuIGhlcmUgMTQ3IGRheXMgbm93Lg1PQlh8ODZ8U1R8Qmxhbmt8fFNoZSBlbmpveXMgYmVpbmcgaW4gaGVyIHJvb20gcmVhZGluZy4gV2lsbCBpbnRlcmFjdCB3aXRoIHBlZXJzIGF0IG1lYWxzLg1PQlh8ODd8U1R8Qmxhbmt8fFNoZSBlbmpveWVzIHdhdGNoaW5nIHR2IGluIHRoZSBhZnRlcm5vb24gYW5kIGV2ZW5pbmdzLiBTaGUgaXMgc3RpbGwgd2FpdGluZw1PQlh8ODh8U1R8Qmxhbmt8fG9uIEFMRiBwbGFjZW1lbnQuDU9CWHw4OXxTVHxCbGFua3x8IA1PQlh8OTB8U1R8Qmxhbmt8fDAxLzI4OiBNZXQgd2l0aCBwdCB0aGlzIG1vcm5pbmcuIFNoZSB3YXMgbHlpbmcgaW4gYmVkIHJlYWRpbmcuIFNoZSBzYXlzIHNoZQ1PQlh8OTF8U1R8Qmxhbmt8fGlzIHN0aWxsIHRyeWluZyB0byBmaW5kIG91dCBob3cgdG8gZ2V0IGFzc2lzdGFuY2Ugd2l0aCBoZXIgYmFuaywgVVNBQSB0bw1PQlh8OTJ8U1R8Qmxhbmt8fGhhdmUgaGVyIGNhcmQgbWFpbGVkIGhlcmUgYmVjYXVzZSBzb21lb25lIGhhcyBiZWVuIHRha2luZyBtb25leSBvdXQgb2YgaGVyDU9CWHw5M3xTVHxCbGFua3x8YWNjb3VudC4gU2hlIGlzIGF0dGVuZGluZyBtZWFscy4gQXdhaXRpbmcgQUxGLiBBZGhlcmVudCB3aXRoIG1lZHMuIFN0YWJsZQ1PQlh8OTR8U1R8Qmxhbmt8fG9uIHVuaXQuDU9CWHw5NXxTVHxCbGFua3x8IA1PQlh8OTZ8U1R8Qmxhbmt8fDAxLzI3OiBTb2NpYWwgd29yayBzYXlzIHRoZXkgZGlkIGdpdmUgcGF0aWVudCBTb2NpYWwgU2VjdXJpdHkgYmVuZWZpdHMNT0JYfDk3fFNUfEJsYW5rfHxudW1iZXIgdG8gY2FsbCBiZWNhdXNlIHNoZSByZXF1ZXN0ZWQuICBQYXRpZW50IGlzIHNheWluZyBzaGUgYWN0dWFsbHkgbWVhbnQNT0JYfDk4fFNUfEJsYW5rfHxzaGUgd2FudHMgdGhlIG51bWJlciBmb3IgaGVyIGJhbmsgdG8gY2FsbCBhYm91dCBoZXIgYmFsYW5jZS4gIEluZm9ybWF0aW9uDU9CWHw5OXxTVHxCbGFua3x8cmVsYXllZCB0byBzb2NpYWwgd29yay4gIFBhdGllbnQgaXMgc3RhYmxlIG9uIHVuaXQgYW5kIGNvbnRpbnVlcyB0byB3YWl0DU9CWHwxMDB8U1R8Qmxhbmt8fGZvciBBTEYgcGxhY2VtZW50Lg1PQlh8MTAxfFNUfEJsYW5rfHwgDU9CWHwxMDJ8U1R8Qmxhbmt8fDAxLzI2OiBQYXRpZW50IGlzIGFza2luZyB0byBzZWUgc29jaWFsIHdvcmsgcmVnYXJkaW5nIGhlciBTb2NpYWwgU2VjdXJpdHkNT0JYfDEwM3xTVHxCbGFua3x8YmVuZWZpdHMgYW5kIG1vbmV5IGJhbGFuY2UuICBQYXRpZW50IGlzIHN0YWJsZSBvbiB0aGUgdW5pdCBhbmQgY29udGludWVzIHRvDU9CWHwxMDR8U1R8Qmxhbmt8fHdhaXQgZm9yIEFMRiBwbGFjZW1lbnQgb3B0aW9ucy4gIFNoZSBpcyBtZWRpY2F0aW9uIGNvbXBsaWFudCBwZXINT0JYfDEwNXxTVHxCbGFua3x8ZG9jdW1lbnRhdGlvbiBmb3IgNiBob3Vycy4NT0JYfDEwNnxTVHxCbGFua3x8IA1PQlh8MTA3fFNUfEJsYW5rfHwwMS8yNTogUGF0aWVudCB2b2ljZXMgbm8gY29uY2VybnMgb3IgY29tcGxhaW50cyBhdCB0aGlzIHRpbWUuICBTaGUgaXMNT0JYfDEwOHxTVHxCbGFua3x8c3RhYmxlIG9uIHVuaXQgYW5kIGF3YWl0aW5nIHBsYWNlbWVudCBvcHRpb25zLiAgU2hlIGlzIGFza2luZyB0byBzcGVhayB0bw1PQlh8MTA5fFNUfEJsYW5rfHxzb2NpYWwgd29ya2VyIGFib3V0IGhlciBTb2NpYWwgU2VjdXJpdHkgbW9uZXkgYXMgc2hlIGhhcyBxdWVzdGlvbnMgYWJvdXQNT0JYfDExMHxTVHxCbGFua3x8aG93IG11Y2ggaXMgaW4gaGVyIGFjY291bnQuICBTaGUgaXMgbWVkaWNhdGlvbiBjb21wbGlhbnQgYW5kIHNsZXB0IDcgaG91cnMuDU9CWHwxMTF8U1R8Qmxhbmt8fCANT0JYfDExMnxTVHxCbGFua3x8MDEvMjQ6IFBhdGllbnQgaXMgcHN5Y2hpYXRyaWNhbGx5IHN0YWJsZSwgYW5kIGNvbnRpbnVlcyB0byBhd2FpdCBwbGFjZW1lbnQNT0JYfDExM3xTVHxCbGFua3x8b3B0aW9ucy4gIE5vIGJlaGF2aW9yYWwgaXNzdWVzIG5vdGVkLiAgUGVyIGRvY3VtZW50YXRpb24gcGF0aWVudCBpcw1PQlh8MTE0fFNUfEJsYW5rfHxtZWRpY2F0aW9uIGNvbXBsaWFudCBhbmQgc2xlcHQgZm9yIDYgaG91cnMuDU9CWHwxMTV8U1R8Qmxhbmt8fCANT0JYfDExNnxTVHxCbGFua3x8MDEvMjM6IE1ldCB3aXRoIHBhdGllbnQgZm9yIGZvbGxvdy11cCBpbiBTb3V0aCBUViByb29tLiAgU3RhdGVzIHNoZSBoYXMgbm8NT0JYfDExN3xTVHxCbGFua3x8Y29tcGxhaW50cyBvciBjb25jZXJucyBhdCB0aGlzIHRpbWUuICBTaGUgaXMgc3RhYmxlIG9uIHRoZSB1bml0IGFuZA1PQlh8MTE4fFNUfEJsYW5rfHxhd2FpdGluZyBBTEYgcGxhY2VtZW50IG9wdGlvbnMuICBQZXIgZG9jdW1lbnRhdGlvbiBzaGUgaXMgbWVkaWNhdGlvbg1PQlh8MTE5fFNUfEJsYW5rfHxjb21wbGlhbnQgYW5kIHNsZXB0IGZvciA2IGhvdXJzLg1PQlh8MTIwfFNUfEJsYW5rfHwgDU9CWHwxMjF8U1R8Qmxhbmt8fDAxLzIyOiBNZXQgd2l0aCBwYXRpZW50IGluIGhlciByb29tIHdoZXJlIHNoZSB3YXMgcmVhZGluZy4gIFNoZSBzdGF0ZXMgbm8NT0JYfDEyMnxTVHxCbGFua3x8Y29uY2VybnMgb3IgY29tcGxhaW50cyBhdCB0aGlzIHRpbWUuICBTaGUgY29udGludWVzIHRvIGF3YWl0IGZvciBBTEYNT0JYfDEyM3xTVHxCbGFua3x8cGxhY2VtZW50IG9wdGlvbnMuICBObyBiZWhhdmlvcmFsIGlzc3VlcyBub3RlZCBwZXIgZG9jdW1lbnRhdGlvbiwgYW5kDU9CWHwxMjR8U1R8Qmxhbmt8fHBhdGllbnQgc2xlcHQgZm9yIDggaG91cnMuDU9CWHwxMjV8U1R8Qmxhbmt8fCANT0JYfDEyNnxTVHxCbGFua3x8MDEvMjE6IE1ldCB3aXRoIHBhdGllbnQgaW4gaGVyIHJvb20uICBQYXRpZW50IGhhcyBubyBuZXcgY29uY2VybnMgb3INT0JYfDEyN3xTVHxCbGFua3x8Y29tcGxhaW50cyBhdCB0aGlzIHRpbWUuICBSZXZpZXcgb2YgbnVyc2luZyBub3RlcyByZXZlYWxzIHBhdGllbnQgc29jaWFsDU9CWHwxMjh8U1R8Qmxhbmt8fHdpdGggcGVlcnMsIGRpZCBhdHRlbmRpbmcgZ3JvdXAgYW5kIHNuYWNrLiAgRGVuaWVzIGF1ZGl0b3J5IG9yIHZpc3VhbA1PQlh8MTI5fFNUfEJsYW5rfHxoYWxsdWNpbmF0aW9ucy4gIENvbXBsaWFudCB3aXRoIG1lZGljYXRpb25zLiAgU2xlcHQgNisgaG91cnMuDU9CWHwxMzB8U1R8Qmxhbmt8fCANT0JYfDEzMXxTVHxCbGFua3x8MDEvMjA6IE1ldCB3aXRoIHB0IHRoaXMgYWZ0ZXJub29uLiBTaGUgaXMgaW50ZXJhY3Rpbmcgd2l0aCBzZWxlY3QgcGVlcnMuDU9CWHwxMzJ8U1R8Qmxhbmt8fFNoZSB3YXMgb2JzZXJ2ZWQgYXQgbHVuY2ggaW50ZXJhY3Rpbmcgd2l0aCBvdGhlciBmZW1hbGUgcGVlcnMgYXQgaGVyIHRhYmxlLg1PQlh8MTMzfFNUfEJsYW5rfHxTaGUgaGFzIGJlZW4gc3RhYmxlIG9uIHVuaXQuIFNoZSBpcyBhZGhlcmVudCB3aXRoIG1lZGljYXRpb25zLiBTaGUgaXMNT0JYfDEzNHxTVHxCbGFua3x8YW1idWxhdG9yeSB3aXRoIHdhbGtlciBvbiB1bml0LiBQdCBzdGlsbCBhd2FpdGluZyBwbGFjZW1lbnQuDU9CWHwxMzV8U1R8Qmxhbmt8fCANT0JYfDEzNnxTVHxCbGFua3x8MDEvMTk6IE1ldCB3aXRoIHB0IHRoaXMgbW9ybmluZy4gU2hlIGlzIGFtYnVsYXRpbmcgb24gdW5pdCB3aXRoIHdhbGtlciBmb3INT0JYfDEzN3xTVHxCbGFua3x8YXNzaXN0YW5jZS4gUHQgaGFzIGJlZW4gc3RhYmxlIG9uIHVuaXQuIFNoZSBpcyBhZGhlcmVudCB3aXRoIG1lZGljYXRpb25zLg1PQlh8MTM4fFNUfEJsYW5rfHxEZW5pZXMgc2lkZSBlZmZlY3RzLiBBd2FpdGluZyBwbGFjZW1lbnQgdG8gQUxGLg1PQlh8MTM5fFNUfEJsYW5rfHwgDU9CWHwxNDB8U1R8Qmxhbmt8fDAxLzE4OiBNZXQgd2l0aCBwdCB0aGlzIG1vcm5pbmcuIFNoZSBpcyBhbWJ1bGF0aW5nIG9uIHVuaXQgd2l0aCB3YWxrZXIgZm9yDU9CWHwxNDF8U1R8Qmxhbmt8fGFzc2lzdGFuY2UuIFRoZSBwYXRpZW50DU9CWHwxNDJ8U1R8Qmxhbmt8fGhhcyBiZWVuIHN0YWJsZSBvbiB1bml0LiBTaGUgaXMgYXdhaXRpbmcgQUxGIHBsYWNlbWVudC4gQWRoZXJlbnQgd2l0aCBtZWRzLg1PQlh8MTQzfFNUfEJsYW5rfHxObyBjaGFuZ2VzLg1PQlh8MTQ0fFNUfEJsYW5rfHwgDU9CWHwxNDV8U1R8Qmxhbmt8fDAxLzE3OiBNZXQgd2l0aCBwdCB0aGlzIG1vcm5pbmcuIFNoZSBpcyBhIGxpdHRsZSB1cHNldCBzaGUgaGFkIHRvIGNoYW5nZQ1PQlh8MTQ2fFNUfEJsYW5rfHxoZXIgYmVkIHRvZGF5LiBBbm90aGVyIHBhdGllbnQgbmVlZGVkIHRoZSBob3NwaXRhbCBiZWQuIFNoZSBkaWQgYXR0ZW5kDU9CWHwxNDd8U1R8Qmxhbmt8fGdyb3VwIHRoaXMgbW9ybmluZywgYnV0IGRpZG4ndCBzdGF5IGxvbmcgZHVlIHRvIHRoZSBjaGFpcnMgYXJlIHRvbyBoYXJkIGZvcg1PQlh8MTQ4fFNUfEJsYW5rfHxoZXIgYW5kIHNoZSBzdGF0ZWQgaGVyIGhpcHMgd2VyZSBodXJ0aW5nLiBTaGUgaXMgdXNpbmcgYSB3YWxrZXIgZm9yDU9CWHwxNDl8U1R8Qmxhbmt8fG1vYmlsaXR5LiBNZWRpY2F0aW9ucyBhcmUgaGVscGluZy4gU2hlIGhhcyBiZWVuIHN0YWJsZSBvbiB1bml0LiBBd2FpdGluZw1PQlh8MTUwfFNUfEJsYW5rfHxBTEYgcGxhY2VtZW50Lg1PQlh8MTUxfFNUfEJsYW5rfHwgDU9CWHwxNTJ8U1R8Qmxhbmt8fDAxLzE2OiBNZXQgd2l0aCBwdCB0aGlzIG1vcm5pbmcuIFNoZSBzbGVwdCBpbiB0b2RheSBhbmQgZGlkbid0IGdldCB1cCBmb3INT0JYfDE1M3xTVHxCbGFua3x8YnJlYWtmYXN0LiBTaGUgc2FpZCBzaGUganVzdCBkaWRuJ3QgZmVlbCBsaWtlIGdldHRpbmcgdXAuIFNoZSBpcyBhbWJ1bGF0aW5nDU9CWHwxNTR8U1R8Qmxhbmt8fG9uIHVuaXQgd2l0aCB3YWxrZXIuIFBlcmZvcm1zIGRhaWx5IGh5Z2VpbmUgY2FyZSBhbmQgQURMcy4gQWRoZXJlbnQgd2l0aA1PQlh8MTU1fFNUfEJsYW5rfHxtZWRpY2F0aW9ucywgZGVuaWVzIHNpZGUgZWZmZWN0cy4gU2hlIGlzIHN0YWJsZSBvbiB1bml0LiBBd2FpdGluZyBBTEYNT0JYfDE1NnxTVHxCbGFua3x8cGxhY2VtZW50IG9wdGlvbnMuDU9CWHwxNTd8U1R8Qmxhbmt8fCANT0JYfDE1OHxTVHxCbGFua3x8MDEvMTU6IE1ldCB3aXRoIHB0IHRoaXMgbW9ybmluZy4gU2hlIHdhcyBseWluZyBpbiBiZWQgcmVhZGluZy4gVHggdGVhbSBoYXMNT0JYfDE1OXxTVHxCbGFua3x8bm8gdXBkYXRlcy4gUHQgYXdhaXRpbmcgQUxGIHBsYWNlbWVudC4gU2hlIGhhcyBiZWVuIHN0YWJsZSB3aXRoDU9CWHwxNjB8U1R8Qmxhbmt8fG1lZGljYXRpb25zLiBBZGhlcmVudCB3aXRoIG1lZHMuIEFtYnVsYXRpbmcgb24gdW5pdCB3aXRoIHdhbGtlci4gU3RhYmxlLiBObw1PQlh8MTYxfFNUfEJsYW5rfHxjaGFuZ2VzLg1PQlh8MTYyfFNUfEJsYW5rfHwgDU9CWHwxNjN8U1R8Qmxhbmt8fDAxLzE0OiBNZXQgd2l0aCBwdCB0aGlzIGFmdGVybm9vbiBpbiBoZXIgcm9vbS4gU2hlIHN0YXRlcyBzaGUgaXMgc3RpbGwNT0JYfDE2NHxTVHxCbGFua3x8d2FpdGluZyB0byBoZWFyIGFib3V0IGZhY2lsaXR5LiBTVyB3b3JraW5nIGNsb3NlbHkgdG8gZmluZCBwbGFjZW1lbnQgYXQgQUxGDU9CWHwxNjV8U1R8Qmxhbmt8fGZvciBwYXRpZW50LiBTaGUgaXMgYW1idWxhdG9yeSBvbiB1bml0IHdpdGggd2Fsa2VyLiBTaGUgaXMgYWJsZSB0byBwZXJmb3JtDU9CWHwxNjZ8U1R8Qmxhbmt8fEFETHMuIFNoZSBoYXMgYmVlbiBjYWxtIGFuZCBjb29wZXJhdGl2ZS4gU2hlIGlzIGFueGlvdXMgYWJvdXQgaGVyIGJhbmsNT0JYfDE2N3xTVHxCbGFua3x8YWNjb3VudCBhbmQgbW9uZXkgYmVpbmcgdGFrZSBvdXQgb2YgaXQuIFNoZSBpcyBhcHByZWNpYXRpdmUgaGVyIFNXIGlzDU9CWHwxNjh8U1R8Qmxhbmt8fGhlbHBpbmcuDU9CWHwxNjl8U1R8Qmxhbmt8fCANT0JYfDE3MHxTVHxCbGFua3x8MDEvMTM6IE1ldCB3aXRoIHBhdGllbnQgZm9yIGZvbGxvdy11cCBpbiBoZXIgcm9vbS4gIFNvY2lhbCB3b3JrIGNvbnRpbnVlcw1PQlh8MTcxfFNUfEJsYW5rfHx0byB3b3JrIG9uIHRoZSBsZXR0ZXIgdG8gaGVyIGluc3VyYW5jZSByZWdhcmRpbmcgaGVyIHBsYWNlbWVudCBpc3N1ZXMuDU9CWHwxNzJ8U1R8Qmxhbmt8fFBhdGllbnQgY29udGludWVzIHRvIGJlIG1lZGljYXRpb24gY29tcGxpYW50LCBhdHRlbmRzIHNvbWUgZ3JvdXBzLCBhbmQgaXMNT0JYfDE3M3xTVHxCbGFua3x8ZWF0aW5nIGFuZCBzbGVlcGluZyB3ZWxsLiAgU2hlIGlzIHBzeWNoaWF0cmljYWxseSBzdGFibGUuDU9CWHwxNzR8U1R8Qmxhbmt8fCANT0JYfDE3NXxTVHxCbGFua3x8MDEvMTI6IE1ldCB3aXRoIHBhdGllbnQgZm9yIGZvbGxvdy11cCBpbiBoZXIgcm9vbS4gIFNoZSBzdGF0ZXMgdGhhdCBzaGUgaXMNT0JYfDE3NnxTVHxCbGFua3x8ZG9pbmcgb2theSwgYW5kIGhhcyBiZWVuIHRyeWluZyB0byBhdHRlbmQgc29tZSBncm91cHMsIGJ1dCBzaGUgZmVlbHMNT0JYfDE3N3xTVHxCbGFua3x8aXJyaXRhYmxlIHRvZGF5LiAgU2hlIHN0YXRlcyB0aGF0IHNoZSBoYXMgaGFkIHNvbWUgdHJvdWJsZSB3aXRoIHNsZWVwLCB0aGF0DU9CWHwxNzh8U1R8Qmxhbmt8fHNoZSBmYWxscyBhc2xlZXAgb2theSBidXQgaWYgc2hlIHdha2VzIHVwIGluIHRoZSBtaWRkbGUgb2YgdGhlIG5pZ2h0LCBzaGUNT0JYfDE3OXxTVHxCbGFua3x8c3RhcnRzIHRoaW5raW5nIGFuZCBjYW4gZ28gYmFjayB0byBzbGVlcC4gIFBhdGllbnQgaGFzIHNvbWUgYXMgbmVlZGVkJ3Mgb24NT0JYfDE4MHxTVHxCbGFua3x8aGVyIGZvcm11bGFyeSBtYXkgaGVscCBoZXIgZ2V0IGJhY2sgdG8gc2xlZXAuDU9CWHwxODF8U1R8Qmxhbmt8fCANT0JYfDE4MnxTVHxCbGFua3x8MDEvMTE6IFBhdGllbnQgaXMgc3RhYmxlIG9uIHRoZSB1bml0IGFuZCBhd2FpdGluZyBBTEYgcGxhY2VtZW50LiAgU2hlIGlzDU9CWHwxODN8U1R8Qmxhbmt8fG1lZGljYXRpb24gY29tcGxpYW50LCBhdHRlbmRzIHNvbWUgZ3JvdXBzLCBhbmQgc2xlcHQgZm9yIDcgaG91cnMuICBObw1PQlh8MTg0fFNUfEJsYW5rfHxiZWhhdmlvcmFsIGlzc3VlcyBub3RlZC4NT0JYfDE4NXxTVHxCbGFua3x8IA1PQlh8MTg2fFNUfEJsYW5rfHwwMS8xMDogUGF0aWVudCBpcyBwc3ljaGlhdHJpY2FsbHkgc3RhYmxlIGFuZCBjb250aW51ZXMgdG8gYXdhaXQgQUxGDU9CWHwxODd8U1R8Qmxhbmt8fHBsYWNlbWVudCBvcHRpb25zLiAgU2hlIGhhcyBub3QgYXR0ZW5kZWQgZ3JvdXBzIHJlY2VudGx5IHBlciBkb2N1bWVudGF0aW9uLA1PQlh8MTg4fFNUfEJsYW5rfHxidXQgaXMgZWF0aW5nIGFuZCBzbGVlcGluZyB3ZWxsLg1PQlh8MTg5fFNUfEJsYW5rfHwgDU9CWHwxOTB8U1R8Qmxhbmt8fDAxLzA5OiBQYXRpZW50IGlzIHN0YWJsZSBvbiB1bml0LCBtZWRpY2F0aW9uIGNvbXBsaWFudCwgYW5kIHN0YXRlcyBzaGUgaXMNT0JYfDE5MXxTVHxCbGFua3x8ZWF0aW5nIGFuZCBzbGVlcGluZyB3ZWxsLiBTVyBjb250aW51ZXMgdG8gc3dvcmsgb24gcGxhY2VtZW50Lg1PQlh8MTkyfFNUfEJsYW5rfHwgDU9CWHwxOTN8U1R8Qmxhbmt8fDAxLzA4OiBQYXRpZW50IGlzIHBzeWNoaWF0cmljYWxseSBzdGFibGUuICBTaGUgaXMgbWVkaWNhdGlvbiBjb21wbGlhbnQsDU9CWHwxOTR8U1R8Qmxhbmt8fGF0dGVuZHMgbW9zdCBncm91cHMsIHBlciBkb2N1bWVudGF0aW9uIHNsZXB0IGZvciA3IGhvdXJzLiAgUGF0aWVudA1PQlh8MTk1fFNUfEJsYW5rfHxjb250aW51ZXMgdG8gYXdhaXQgcGxhY2VtZW50IG9wdGlvbnMuDU9CWHwxOTZ8U1R8Qmxhbmt8fCANT0JYfDE5N3xTVHxCbGFua3x8MDEvMDc6IE1ldCB3aXRoIHBhdGllbnQgaW4gdGhlIG1vcm5pbmcsIHNoZSB3YXMgaW4gYmVkIHJlc3RpbmcuICBQYXRpZW50DU9CWHwxOTh8U1R8Qmxhbmt8fGRpZCBub3QgbWFrZSBleWUgY29udGFjdCwgYW5kIHdhcyBzaG9ydCBhbmQgYmx1bnQgd2l0aCBhbnN3ZXJzLiAgU2hlIHN0YXRlcw1PQlh8MTk5fFNUfEJsYW5rfHxzaGUgaXMgZG9pbmcgd2VsbCwgYW5kIGhhcyBubyBuZWVkcyBhdCB0aGlzIHRpbWUuICBQYXRpZW50IGlzIHN0YWJsZSBvbg1PQlh8MjAwfFNUfEJsYW5rfHx1bml0IGFuZCBjb250aW51ZXMgdG8gd2FpdCBmb3IgcGxhY2VtZW50IG9wdGlvbnMuDU9CWHwyMDF8U1R8Qmxhbmt8fCANT0JYfDIwMnxTVHxCbGFua3x8MDEvMDY6IFB0IHN0YWJsZSBvbiB1bml0LiBBdHRlbmRzIG1lYWxzLCBzbGVlcGluZyB3ZWxsLCBoYWQgYXNzZXNzbWVudA1PQlh8MjAzfFNUfEJsYW5rfHx5ZXN0ZXJkYXkgZm9yIEFMRiwgYW5kIGF3YWl0aW5nIHBsYWNlbWVudC4gU2hlIGlzIGVhdGluZyB3ZWxsLiBNZWRpY2F0aW9ucw1PQlh8MjA0fFNUfEJsYW5rfHxhcmUgaGVscGluZy4gU3RhYmxlIG9uIHVuaXQuIE5vIGNoYW5nZXMuDU9CWHwyMDV8U1R8Qmxhbmt8fCANT0JYfDIwNnxTVHxCbGFua3x8MDEvMDU6IFB0IGhhZCBBTEYgYXNzZXNzbWVudCB0aGlzIG1vcm5pbmcgdmlhIHRlbGVwaG9uZSB3aXRoIGxpc2Fzb24gYW5kDU9CWHwyMDd8U1R8Qmxhbmt8fFNXLiBQdCBzdGF0ZXMgaXQgdG9vayBhIHdoaWxlLCBidXQgc2hlIHRoaW5rcyBpdCB3ZW50IHdlbGwsIGJ1dCBub3Qgc3VyZS4NT0JYfDIwOHxTVHxCbGFua3x8U2hlIGlzIGx5aW5nIGluIGhlciByb29tIGluIGJlZCByZWFkaW5nLiBTdGFmZiBtb25pdG9ycyByb29tIHRvIG1ha2Ugc3VyZQ1PQlh8MjA5fFNUfEJsYW5rfHxzaGUgaXNuJ3QgaG9hcmRpbmcgZm9vZCBhbmQgaXRlbXMgYW55bW9yZS4gUHQgdXNpbmcgd2Fsa2VyIGZvciBtb2JpbGl0eS4NT0JYfDIxMHxTVHxCbGFua3x8U2hlIGF0dGVuZHMgbWVhbHMgYW5kIGhlciBhcHBldGl0ZSBoYXMgYmVlbiBnb29kLg1PQlh8MjExfFNUfEJsYW5rfHwgDU9CWHwyMTJ8U1R8Qmxhbmt8fDAxLzA0OiBQdCBhbnhpb3VzIGFib3V0IGhlciBpbnRlcnZpZXcgYXNzZXNzbWVudCB0b21vcnJvdy4gU2hlIGlzIG5vdw1PQlh8MjEzfFNUfEJsYW5rfHx3YW50aW5nIHRvIHNlZSBpZiBIb3Nhbm5hIEhvdXNlIGlzIHN0aWxsIGluIERlc3RpbiBhbmQgc2VlIGlmIHNoZSBjYW4gZ2V0DU9CWHwyMTR8U1R8Qmxhbmt8fGFwcHJvdmVkIHRvIGdvIGJhY2sgdGhlcmUuIE5vdGlmaWVkIGhlciBTVy4gUHQgYWxzbyBzdGF0ZXMgc2hlIGlzDU9CWHwyMTV8U1R8Qmxhbmt8fGZydXN0cmF0ZWQgd2l0aCBoZXIgYmFuayBhY2NvdW50IGFuZCB0aGlua3Mgc29tZW9uZSBoYXMgdGFrZW4gYWxsIGhlcg1PQlh8MjE2fFNUfEJsYW5rfHxtb25leS4gSW5mb3JtZWQgcHQgc2hlIG5lZWRzIHRvIHRyeSBhbmQgY2FsbCBoZXIgYmFuayB0byBnZXQgZXZlcnl0aGluZw1PQlh8MjE3fFNUfEJsYW5rfHxzdHJhaWdodGVuZWQgb3V0Lg1PQlh8MjE4fFNUfEJsYW5rfHwgDU9CWHwyMTl8U1R8Qmxhbmt8fDAxLzAzOiBQdCBzZWVuIGluIGYvdSB0aGlzIG1vcm5pbmcgaW4gaGVyIHJvb20uIFNoZSBpcyBsb29raW5nIGZvcndhcmQgdG8NT0JYfDIyMHxTVHxCbGFua3x8aGVyIGFwcHQgdGhpcyB0dWVzZGF5IGZvciB0aGUgQUxGIGFzc2Vzc21lbnQuIFB0IGlzIGhvcGluZyB0byBmaW5kDU9CWHwyMjF8U1R8Qmxhbmt8fHBsYWNlbWVudC4gU2hlIGlzIHN0YWJsZSBvbiB1bml0LiBBbWJ1bGF0aW5nIHZpYSB3YWxrZXIgZm9yIG1vYmlsaXR5Lg1PQlh8MjIyfFNUfEJsYW5rfHxTbGVlcGluZyB3ZWxsIGFuZCBhZGhlcmVudCB3aXRoIG1lZGljYXRpb25zLg1PQlh8MjIzfFNUfEJsYW5rfHwgDU9CWHwyMjR8U1R8Qmxhbmt8fDAxLzAyOiBNZXQgd2l0aCBwdCB0aGlzIG1vcm5pbmcuIFNoZSBpcyBzdGFibGUgb24gdW5pdC4gQWRoZXJlbnQgd2l0aA1PQlh8MjI1fFNUfEJsYW5rfHxtZWRpY2F0aW9ucy4gSGFzIGFuIEFMRiBhc3Nlc3NtZW50IG9uIEphbiA1LCAyMDIxIGF0IDA4MDAuIFNoZSBpcyBob3BpbmcgdG8NT0JYfDIyNnxTVHxCbGFua3x8YmUgYWNjZXB0ZWQgdG8gQUxGIHNvb24uIE5vIGNoYW5nZXMgdG8gY3VycmVudCBtZWRzIG9yIHR4IHBsYW4uIFB0IGlzDU9CWHwyMjd8U1R8Qmxhbmt8fHN0YWJsZS4gU2hlIGlzIGFtYnVsYXRvcnkgd2l0aCB3YWxrZXIuDU9CWHwyMjh8U1R8Qmxhbmt8fCANT0JYfDIyOXxTVHxCbGFua3x8MDEvMDE6IE1ldCB3aXRoIHB0IHRoaXMgbW9ybmluZy4gU2hlIGlzIHVwc2V0IGJlY2F1c2Ugc2hlIHN0YXRlcyBzb21lb25lDU9CWHwyMzB8U1R8Qmxhbmt8fGhhcyBzdG9sZSBoZXIgYmFuayBjYXJkIGZyb20gVVNBQSAoYW4gb2xkIHJvb21tYXRlKSBhbmQgaGFzIGNsZWFuZWQgb3V0IGhlcg1PQlh8MjMxfFNUfEJsYW5rfHxiYW5rIGFjY291bnQuIFNoZSBpcyB3YW50aW5nIHRvIHNwZWFrIHdpdGggU1cgdG8gc2VlIGlmIHRoZXkgY2FuIGhlbHAgaGVyDU9CWHwyMzJ8U1R8Qmxhbmt8fGNhbGwgdGhlICJmcmF1ZCBob3RsaW5lIiBmb3IgVVNBQSBhbmQgZ2l2ZSB0aGVtIGhlciBpbmZvcm1hdGlvbiBzbyB0aGV5IGNhbg1PQlh8MjMzfFNUfEJsYW5rfHxzZW5kIGEgbmV3IGNhcmQuIFNoZSBzdGF0ZXMgYWxsIGhlciBtb25leSBpcyBnb25lIGFuZCBzaGUgaXMgdmVyeSB1cHNldA1PQlh8MjM0fFNUfEJsYW5rfHx0b2RheS4gU2hlIGlzIGF3YWl0aW5nIEFMRiBwbGFjZW1lbnQuDU9CWHwyMzV8U1R8Qmxhbmt8fCANT0JYfDIzNnxTVHxCbGFua3x8MTIvMzE6IE1ldCB3aXRoIHB0IHRoaXMgbW9ybmluZyBpbiBoZXIgcm9vbS4gU2hlIGlzIGx5aW5nIGluIGJlZCByZWFkaW5nIGENT0JYfDIzN3xTVHxCbGFua3x8Ym9vay4gU2hlIGlzIGFkaGVyZW50IHdpdGggbWVkaWNhdGlvbnMuIFNoZSBhdHRlbmRzIG1lYWxzLiBTaGUgZG9lc24ndA1PQlh8MjM4fFNUfEJsYW5rfHxhdHRlbmQgbWFueSBncm91cHMgYW55bW9yZSwgYnV0IHdpbGwgYXR0ZW5kIHNvbWUgdGhhdCBhcmVuJ3QgcmVwZXRpdGl2ZSBvZg1PQlh8MjM5fFNUfEJsYW5rfHx3aGF0IHNoZSBoYXMgYmVlbiB0byBpbiB0aGUgcGFzdC4gU2hlIGlzIHNjaGVkdWxlZCBmb3IgQUxGIGFzc2Vzc21lbnQgamFuDU9CWHwyNDB8U1R8Qmxhbmt8fDUsIDIwMjEuDU9CWHwyNDF8U1R8Qmxhbmt8fCANT0JYfDI0MnxTVHxCbGFua3x8MTIvMzA6IE1ldCB3aXRoIHBhdGllbnQgZm9yIGZvbGxvdy11cCBpbiBoZXIgcm9vbSB3aGVyZSBzaGUgd2FzIHJlYWRpbmcuDU9CWHwyNDN8U1R8Qmxhbmt8fFNoZSBzYXlzIHNoZSBpcyBkb2luZyB3ZWxsIHRvZGF5LCBhbmQgaXMgYXNraW5nIGZvciBoZWxwIGZyb20gc29jaWFsIHdvcmsNT0JYfDI0NHxTVHxCbGFua3x8dG8gb3JkZXIgaGVyc2VsZiBhIG5ldyBkZWJpdCBjYXJkIGFuZCBoYXZlIGl0IG1haWxlZCBoZXJlLiAgU2hlIGlzDU9CWHwyNDV8U1R8Qmxhbmt8fHBzeWNoaWF0cmljYWxseSBzdGFibGUsIGFuZCB3YWl0aW5nIGZvciBhIGxvbmcgdGVybSBjYXJlIHdhaXZlciBhc3Nlc3NtZW50DU9CWHwyNDZ8U1R8Qmxhbmt8fG9uIEphbnVhcnkgNS4gIEhlIHNsZXB0IGZvciA2IGhvdXJzIGxhc3QgbmlnaHQuDU9CWHwyNDd8U1R8Qmxhbmt8fCANT0JYfDI0OHxTVHxCbGFua3x8MTIvMjk6IE1ldCB3aXRoIHBhdGllbnQgZm9yIGZvbGxvdy11cCBpbiBoZXIgcm9vbS4gIFRoZSByZWFzb25zIHdoeSBoZXINT0JYfDI0OXxTVHxCbGFua3x8dHJlYXRtZW50IHRlYW0gd2lsbCBub3QgYmUgYWJsZSB0byBleHBhbmQgaGVyIEFMRiBzZWFyY2ggdG8gR2VvcmdpYSB3ZXJlDU9CWHwyNTB8U1R8Qmxhbmt8fGV4cGxhaW5lZCByZWxhdGVkIHRvIGluc3VyYW5jZSBpc3N1ZXMsIGFuZCBwYXRpZW50IHZlcmJhbGl6ZWQgYW4NT0JYfDI1MXxTVHxCbGFua3x8dW5kZXJzdGFuZGluZy4gIFRoZSBsb25nLXRlcm0gY2FyZSB3YWl2ZXIgYXNzZXNzbWVudCB0aGF0IGlzIHNjaGVkdWxlZCBmb3INT0JYfDI1MnxTVHxCbGFua3x8SmFudWFyeSA1IHdhcyBhZ2FpbiBleHBsYWluZWQgdG8gdGhlIHBhdGllbnQgYW5kIHdoeSBpdCB3YXMgaW1wb3J0YW50LiAgU2hlDU9CWHwyNTN8U1R8Qmxhbmt8fHZlcmJhbGl6ZWQgdW5kZXJzdGFuZGluZywgYW5kIHNheXMgc2hlIGlzIG9rYXkgd2l0aCB3YWl0aW5nLiAgUGVyDU9CWHwyNTR8U1R8Qmxhbmt8fGRvY3VtZW50YXRpb24gcGF0aWVudCBzbGVwdCA3IGhvdXJzLg1PQlh8MjU1fFNUfEJsYW5rfHwgDU9CWHwyNTZ8U1R8Qmxhbmt8fDEyLzI4OiBNZXQgd2l0aCBwYXRpZW50IGZvciBmb2xsb3ctdXAgaW4gaGVyIHJvb20gd2hlcmUgc2hlIHdhcyByZWFkaW5nLg1PQlh8MjU3fFNUfEJsYW5rfHxTaGUgYXNrZWQgaWYgdGhlcmUgaXMgYSBwb3NzaWJpbGl0eSBmb3IgaGVyIHRyZWF0bWVudCB0ZWFtIHRvIGhlbHAgZmluZCBoZXINT0JYfDI1OHxTVHxCbGFua3x8YW4gQUxGIG9yIG51cnNpbmcgaG9tZSBpbiBHZW9yZ2lhIHNvIHNoZSBjYW4gYmUgbmVhciAgaGVyIGJyb3RoZXIuICBBZnRlcg1PQlh8MjU5fFNUfEJsYW5rfHxzcGVha2luZyB0byBzb2NpYWwgd29yayBob3dldmVyLCBpdCB3YXMgbWFkZSBrbm93biB0aGF0IGluc3VyYW5jZQ1PQlh8MjYwfFNUfEJsYW5rfHxyZXN0cmljdGlvbnMgcHJldmVudCB0aGlzIHBvc3NpYmlsaXR5LiAgUGF0aWVudCB3b3VsZCBiZSByZXF1aXJlZCB0byBiZQ1PQlh8MjYxfFNUfEJsYW5rfHxyZXNpZGluZyBpbiB0aGUgc3RhdGVzIHNoZSB3YW50cyB0byBzd2l0Y2ggaGVyIGluc3VyYW5jZSB0byBiZWZvcmUgaGFuZC4NT0JYfDI2MnxTVHxCbGFua3x8UGF0aWVudCBjb250aW51ZXMgdG8gYmUgb24gbWVhbCByZXN0cmljdGlvbnMgaW4gU291dGggbWlsaWV1IGR1ZSB0byBmb29kDU9CWHwyNjN8U1R8Qmxhbmt8fGhvYXJkaW5nLiAgU2hlIGlzIHBzeWNoaWF0cmljYWxseSBzdGFibGUgYW5kIGF3YWl0aW5nIHBsYWNlbWVudC4NT0JYfDI2NHxTVHxCbGFua3x8MTIvMjc6IE1ldCB3aXRoIHBhdGllbnQgZm9yIGZvbGxvdy11cCBpbiBTb3V0aCBtaWxpZXUgYXMgc2hlIGlzIHdhaXRpbmcgdG8NT0JYfDI2NXxTVHxCbGFua3x8Z28gdG8gbHVuY2guICBTaGUgc3RhdGVzIHNoZSBpcyBkb2luZyAic28tc28iIHRvZGF5LiAgU2hlIGNvbnRpbnVlcyB0byB3YWl0DU9CWHwyNjZ8U1R8Qmxhbmt8fG9uIGhlciB1cGNvbWluZyBsb25nLXRlcm0gY2FyZSB3YWl2ZXIgYXNzZXNzbWVudCBvbiBKYW51YXJ5IDUuICBTaGUgc3RhdGVzDU9CWHwyNjd8U1R8Qmxhbmt8fHRoYXQgc2hlIHBsYW5zIG9uIGFwcGx5aW5nIGZvciBhIG5ldyBkZWJpdCBjYXJkIHRvIGJlIHNlbnQgdG8gdGhlIHVuaXQNT0JYfDI2OHxTVHxCbGFua3x8YmVmb3JlIHNoZSBkaXNjaGFyZ2VzLiAgUGVyIHN0YWZmIHJlcG9ydCwgMyBiYWdzIG9mIGZvb2Qgd2VyZSBmb3VuZCBpbg1PQlh8MjY5fFNUfEJsYW5rfHxwYXRpZW50J3Mgcm9vbSAod2hlcmUgZm9vZCBpcyBub3QgYWxsb3dlZCkgYXMgd2VsbCBhcyAxMiBvZiB0aGUgdW5pdHMNT0JYfDI3MHxTVHxCbGFua3x8bGlicmFyeSBib29rcy4gUGF0aWVudCB3aWxsIGJlIHB1dCBvbiByZXN0cmljdGlvbnMgZm9yIHRoZSByZW1haW5lciBvZiB0aGlzDU9CWHwyNzF8U1R8Qmxhbmt8fG1vbnRoIHdoZXJlIHNoZSB3aWxsIGJlIGVhdGluZyBtZWFscyBuZWFyIHRoZSBudXJzaW5nIHN0YXRpb24gdG8gZWxpbWluYXRlDU9CWHwyNzJ8U1R8Qmxhbmt8fHNuZWFraW5nIGZvb2QgaW50byBoZXIgcm9vbS4NT0JYfDI3M3xTVHxCbGFua3x8IA1PQlh8Mjc0fFNUfEJsYW5rfHwxMi8yNjogTWV0IHdpdGggcGF0aWVudCBmb3IgZm9sbG93LXVwIGluIGhlciByb29tIHdoZXJlIHNoZSB3YXMgZ2V0dGluZw1PQlh8Mjc1fFNUfEJsYW5rfHxyZWFkeSBmb3IgbHVuY2guICBTaGUgc3RhdGVzIHNoZSBpcyBkb2luZyBva2F5IGFuZCBoYWQgYSBnb29kIGRheQ1PQlh8Mjc2fFNUfEJsYW5rfHx5ZXN0ZXJkYXkuICBQYXRpZW50IGlzIHBzeWNoaWF0cmljYWxseSBzdGFibGUgYW5kIGF3YWl0aW5nIGxvbmctdGVybSBjYXJlDU9CWHwyNzd8U1R8Qmxhbmt8fGFzc2Vzc21lbnQuICBQZXIgZG9jdW1lbnRhdGlvbiBzaGUgaXMgbWVkaWNhdGlvbiBjb21wbGlhbnQsIGF0dGVuZHMgZ3JvdXBzLA1PQlh8Mjc4fFNUfEJsYW5rfHxhbmQgc2xlcHQgZm9yIDcgaG91cnMuDU9CWHwyNzl8U1R8Qmxhbmt8fCANT0JYfDI4MHxTVHxCbGFua3x8MTIvMjU6IFBhdGllbnQgZm9yIGZvbGxvdy11cCBpbiBoZXIgcm9vbSBzaGUgd2FzIHNsZWVwaW5nLCBidXQgYXdva2UNT0JYfDI4MXxTVHxCbGFua3x8ZWFzaWx5LiAgU2hlIHNheXMgc2hlIGlzIGRvaW5nIHdlbGwgYW5kIHZvaWNlcyBubyBjb21wbGFpbnRzIG9yIGNvbmNlcm5zLg1PQlh8MjgyfFNUfEJsYW5rfHxQYXRpZW50IGlzIHBzeWNoaWF0cmljYWxseSBzdGFibGUsIG1lZGljYXRpb24gY29tcGxpYW50LCBhbmQgcGVyDU9CWHwyODN8U1R8Qmxhbmt8fGRvY3VtZW50YXRpb24gc2xlcHQgZm9yIDcgaG91cnMuICBTaGUgY29udGludWVzIHRvIGF3YWl0IEFMRiBwbGFjZW1lbnQNT0JYfDI4NHxTVHxCbGFua3x8IA1PQlh8Mjg1fFNUfEJsYW5rfHwxMi8yNDogTWV0IHdpdGggcGF0aWVudCBmb3IgZm9sbG93LXVwIGluIGhlciByb29tLCBzaGUgd2FzIGFzbGVlcCBidXQgYXdva2UNT0JYfDI4NnxTVHxCbGFua3x8ZWFzaWx5LiAgTG9uZy10ZXJtIGNhcmUgYXNzZXNzbWVudCBzaGUgd2FzIGdvaW5nIHRvIHJlY2VpdmUgb24gMTIvMzAgaGFzDU9CWHwyODd8U1R8Qmxhbmt8fG5vdyBiZWVuIHB1c2hlZCBiYWNrIHRvIEphbnVhcnkgNS4gIFBhdGllbnQgc3RhdGVzIHRoYXQgc2hlIGRvZXMgbm90IG1pbmQsDU9CWHwyODh8U1R8Qmxhbmt8fHNoZSBpcyBva2F5IHN0YXlpbmcgaGVyZS4gIFBlciBkb2N1bWVudGF0aW9uIHNoZSBpcyBtZWRpY2F0aW9uIGNvbXBsaWFudCwNT0JYfDI4OXxTVHxCbGFua3x8YXR0ZW5kcyBncm91cHMsICBhbmQgaXMgcGxlYXNhbnQgYW5kIGNvb3BlcmF0aXZlIHdpdGggc3RhZmYgYW5kIHBlZXJzLg1PQlh8MjkwfFNUfEJsYW5rfHwgDU9CWHwyOTF8U1R8Qmxhbmt8fDEyLzIzOiBQdCBzZWVuIGluIGYvdSB0aGlzIG1vcm5pbmcuIFNoZSB3YXMgdXBkYXRlZCBvbiB0aGUgbmV3IGRhdGUgZm9yIGhlcg1PQlh8MjkyfFNUfEJsYW5rfHxBTEYgYXNzZXNzbWVudCBhcyBiZWluZyBKYW4gNSwgMjAyMSBhdCAwODAwLiBVdGlsaXphdGlvbiByZXZpZXcgc3RhdGVzDU9CWHwyOTN8U1R8Qmxhbmt8fGluc3VyYW5jZSBpcyBjb3ZlcmVkIGZvciBwYXRpZW4gdHVwIHRvIERlYyAzMSwgMjAyMCBhbmQgVEMgaXMgd29ya2luZyBvbg1PQlh8Mjk0fFNUfEJsYW5rfHx0cnlpbmcgdG8gZ2V0IHRoZSBhc3Nlc3NtZW50IG1vdmVkIHVwIGJlZm9yZSBEZWMgMzEsIDIwMjAgc3RhdGluZyBkdWUgdG8NT0JYfDI5NXxTVHxCbGFua3x8aW5zdXJhbmNlIHRoZXJlIGlzIGltbWluZW50IHJpc2sgcHQgbmVlZHMgYXNzZXNzbWVudCBzb29uZXIgZm9yIHBsYWNlbWVudC4NT0JYfDI5NnxTVHxCbGFua3x8UHQgdXBkYXRlZCBvbiB0eCB0ZWFtIGluZm9ybWF0aW9uLiBQdCB3YXMgY29uY2VybmVkIHRoYXQgaWYgaXQgaXMgbm90IG1vdmVkDU9CWHwyOTd8U1R8Qmxhbmt8fHVwIGFuZCBpbnN1cmFuY2Ugc3RvcHMgcGF5aW5nIGhvdyB3aWxsIHNoZSBiZSBhYmxlIHRvIGFmZm9yZCBwYXltZW50cy4gU2hlDU9CWHwyOTh8U1R8Qmxhbmt8fGlzIGludGVyYWN0aW5nIG9uIHVuaXQgd2l0aCBzZWxlY3QgcGVlcnMuIFJlYWRzIGluIGhlciByb29tIGEgbG90LiBBcHBldGl0ZQ1PQlh8Mjk5fFNUfEJsYW5rfHxoYXMgYmVlbiBnb29kLiBTaGUgaGFzIGJlZW4gc2xlZXBpbmcgd2VsbCB0aGUgcGFzdCBjb3VwbGUgb2YgbmlnaHRzLg1PQlh8MzAwfFNUfEJsYW5rfHwgDU9CWHwzMDF8U1R8Qmxhbmt8fDEyLzIyOiBQdCBzZWVuIGluIGYvdSBpbiBoZXIgcm9vbSB0aGlzIG1vcm5pbmcuIFNoZSB3YXMgc2xlZXBpbmcgc291bmRseSwNT0JYfDMwMnxTVHxCbGFua3x8YnV0IGVhc2lseSBhd2FrZW5lZC4gU2hlIHdhcyB1cGRhdGVkIG9uIEFMRiB0aGF0IHBvc3NpYmx5IG9uZSBpcyBsb29raW5nIHRvDU9CWHwzMDN8U1R8Qmxhbmt8fGFjY2VwdCBoZXIgcGVuZGluZyB0aGUgYXNzZXNzbWVudCBEZWMgMzEsIDIwMjAgYXQgbm9vbi4gU2hlIGlzIGEgbGl0dGxlDU9CWHwzMDR8U1R8Qmxhbmt8fGFueGlvdXMgYWJvdXQgaXQgYW5kIGFmcmFpZCBzaGUgd2lsbCBlbmQgdXAgaG9tZWxlc3MuIENvbnQgdG8gdXNlIHdhbGtlcg1PQlh8MzA1fFNUfEJsYW5rfHxmb3IgbW9iaWxpdHkgb24gdW5pdC4gQXR0ZW5kcyBtZWFscywgc29tZSBncm91cHMsIGJ1dCBzdGF0ZXMgc29tZSBhcmUNT0JYfDMwNnxTVHxCbGFua3x8cmVwZWF0cyBhbmQgdGhlIHNhbWUgc2hlIGhhcyBiZWVuIHRvby4gU2hlIGF0dGVuZHMgYXJ0IGF0IHRpbWVzLCBvdXRzaWRlDU9CWHwzMDd8U1R8Qmxhbmt8fGFjdGl2aXRpZXMsIGFuZCBpcyBzb2NpYWwgd2l0aCBwZWVycy4NT0JYfDMwOHxTVHxCbGFua3x8IA1PQlh8MzA5fFNUfEJsYW5rfHwxMi8yMTogTWV0IHdpdGggcHQgdGhpcyBtb3JuaW5nIGFmdGVyIHR4IHRlYW0uIFVwZGF0ZWQgaGVyIHRoYXQgb25lDU9CWHwzMTB8U1R8Qmxhbmt8fGZhY2lsaXR5IGhhcyBlbWFpbGVkIGhlciBUQyB3aXRoIGludGVyZXN0IGluIHBvc3NpYmx5IGFjY2VwdGluZyBoZXIuIFNoZQ1PQlh8MzExfFNUfEJsYW5rfHxmZWVscyBhIGxpdHRsZSBob3BlZnVsIG5vdyBhbmQgc3RhdGVkIHNoZSB3YXMgc3RhcnRpbmcgdG8gZmVlbCBhIGxpdHRsZQ1PQlh8MzEyfFNUfEJsYW5rfHxkZXByZXNzZWQuIFNoZSBpcyBpbiBoZXIgcm9vbSByZWFkaW5nIGFuZCBzaXR0aW5nIHVwIGluIGJlZC4gQWRoZXJlbnQgd2l0aA1PQlh8MzEzfFNUfEJsYW5rfHxtZWRpY2F0aW9ucy4gQW54aWV0eSBpcyBsZXNzIHRvZGF5LiBTaGUgaXMgYXR0ZW5kaW5nIG1lYWxzIGFuZCBlYXRpbmcgd2VsbC4NT0JYfDMxNHxTVHxCbGFua3x8IA1PQlh8MzE1fFNUfEJsYW5rfHwxMi8yMDogTWV0IHdpdGggcHQgdGhpcyBtb3JuaW5nIGluIGhlciByb29tLiBTaGUgd2FzIGx5aW5nIGluIGJlZC4gU2hlIGhhcw1PQlh8MzE2fFNUfEJsYW5rfHxiZWVuIGZlZWxpbmcgZG93biB0aGUgcGFzdCBmZXcgZGF5cy4gUHQgaXMgZnJ1c3RyYXRlZCBhbmQgd29ycmllZCBhYm91dA1PQlh8MzE3fFNUfEJsYW5rfHx3aGVyZSBzaGUgd2lsbCBnby4gU2hlIGlzIGFmcmFpZCBubyBvbmUgd2lsbCBhY2NlcHQgaGVyIGFuZCBzaGUgd2lsbCBiZQ1PQlh8MzE4fFNUfEJsYW5rfHxob21lbGVzcy4gU2hlIGhhcyBhbHNvIGJlZW4gdmVyeSBhbnhpb3VzIGFib3V0IGhlciBmdXR1cmUuIFNoZSBpcw1PQlh8MzE5fFNUfEJsYW5rfHxyZXF1ZXN0aW5nIHRvIGdvIHVwIG9uIGhlciBzZXJvcXVlbCBhdCBiZWR0aW1lLiBTaGUgaGFzIGJlZW4gaGF2aW5nIHNvbWUNT0JYfDMyMHxTVHxCbGFua3x8YnJva2VuIHNsZWVwIHRoZSBwYXN0IHdlZWsuIEFkaGVyZW50IHdpdGggbWVkaWNhdGlvbnMgYW5kIGRlbmllcyBzaWRlDU9CWHwzMjF8U1R8Qmxhbmt8fGVmZmVjdHMuDU9CWHwzMjJ8U1R8Qmxhbmt8fCANT0JYfDMyM3xTVHxCbGFua3x8MTIvMTk6IE1ldCB3aXRoIHB0IHRoaXMgbW9ybmluZy4gU2hlIGhhZCBhIGdvb2QgYnJlYWtmYXN0LiBTaGUgcmVwb3J0cw1PQlh8MzI0fFNUfEJsYW5rfHxmZWVsaW5nIHZlcnkgYW54aW91cyBzdGlsbC4gU2hlIGhhcyBtZWRpY2F0aW9ucyBvbiBNQVIuIFN0aWxsIHJlcXVlc3RpbmcNT0JYfDMyNXxTVHxCbGFua3x8YXRpdmFuIFBSTi4gc2hlIHNheXMgc2hlIGlzIGNvbmNlcm5lZCBhYm91dCBwbGFjZW1lbnQuIE5lcnZvdXMgYWJvdXQgaWYgc2hlDU9CWHwzMjZ8U1R8Qmxhbmt8fHdpbGwgZW5kIHVwIGhvbWVsZXNzLiBTYXlzIHNoZSBoYXMgbm8gbW9uZXkuIEFueGlvdXMgYWJvdXQgdGhlIGhvbGlkYXlzIGFuZA1PQlh8MzI3fFNUfEJsYW5rfHxubyBmYW1pbHkgaGVyZS4gU2hlIGhhcyBiZWVuIG9uIHVuaXQgMTA2IGRheXMuIEFMRiBhc3Nlc3NtZW50IHNjaGVkdWxlZCBieQ1PQlh8MzI4fFNUfEJsYW5rfHxUQyBvbiAxMi8zMS8yMDIwIGF0IDEyMDAuDU9CWHwzMjl8U1R8Qmxhbmt8fCANT0JYfDMzMHxTVHxCbGFua3x8MTIvMTg6IE1ldCB3aXRoIHB0IHRoaXMgbW9ybmluZy4gU2hlIGlzIGFtYnVsYXRpbmcgd2l0aCB3YWxrZXIuIE5vIGNoYW5nZXMuDU9CWHwzMzF8U1R8Qmxhbmt8fEhhcyBiZWVuIHN0YWJsZSBvbiB1bml0LiBBZGhlcmVudCB3aXRoIG1lZGljYXRpb25zLiBTaGUgaXMgcmVxdWVzdGluZw1PQlh8MzMyfFNUfEJsYW5rfHxhdGl2YW4sIGJ1dCBoYXMgbWVkaWNhdGlvbnMgZm9yIGFueGlldHkgb24gTUFSIHNoZSBjYW4gdXRpbGl6ZS4gU2hlIGhhcw1PQlh8MzMzfFNUfEJsYW5rfHxiZWVuIGNhbG0gb24gdW5pdCBwZXIgc3RhZmYuIERvZXNuJ3QgYXBwZWFyIGFueGlvdXMuIFNoZSBpbnRlcmFjdHMgd2l0aA1PQlh8MzM0fFNUfEJsYW5rfHxzZWxlY3QgcGVlcnMgYW5kIGlzIGF0dGVuZGluZyBtZWFscy4gSGVyIGFwcGV0aXRlIGlzIHN0YWJsZS4NT0JYfDMzNXxTVHxCbGFua3x8IA1PQlh8MzM2fFNUfEJsYW5rfHwxMi8xNzogTWV0IHdpdGggcHQgdGhpcyBtb3JuaW5nLiBTaGUgaGFzIGJlZW4gc3RhYmxlIG9uIHVuaXQuIERlbmllcyBjL28gYXQNT0JYfDMzN3xTVHxCbGFua3x8dGhpcyB0aW1lLiBBZGhlcmVudCB3aXRoIG1lZHMuIFVzaW5nIHdhbGtlciBmb3IgbW9iaWxpdHkgb24gdW5pdC4gU2xlZXBpbmcNT0JYfDMzOHxTVHxCbGFua3x8d2VsbC4gQXdhaXRpbmcgZm9yIGhlciBhc3Nlc3NtZW50IHRoYXQgaXMgc2NoZWR1bGVkIERlYyAzMSBhdCAxMjAwIGZvciBBTEYNT0JYfDMzOXxTVHxCbGFua3x8cGxhY2VtZW50Lg1PQlh8MzQwfFNUfEJsYW5rfHwgDU9CWHwzNDF8U1R8Qmxhbmt8fDEyLzE2Ok1ldCB3aXRoIFBhdGllbnQgZm9yIGZvbGxvdy11cCBpbiBoZXIgcm9vbS4gIFNoZSB3YXMgcmVzdGluZyBpbiBiZWQsDU9CWHwzNDJ8U1R8Qmxhbmt8fGV4cHJlc3NlZCBubyBuZWVkcyBvciBjb25jZXJucy4gIFBhdGllbnQgaXMgcHN5Y2hpYXRyaWNhbGx5IHN0YWJsZSBhbmQNT0JYfDM0M3xTVHxCbGFua3x8YXdhaXRpbmcgcGxhY2VtZW50IG9wdGlvbnMuICBQZXIgZG9jdW1lbnRhdGlvbiBzaGUgc2xlcHQgZm9yIDUgaG91cnMuDU9CWHwzNDR8U1R8Qmxhbmt8fCANT0JYfDM0NXxTVHxCbGFua3x8MTIvMTU6IG1ldCB3aXRoIHBhdGllbnQgaW4gaGVyIHJvb20gc2hlIHdhcyBseWluZyBpbiBiZWQgcmVhZGluZyBhIGJvb2suDU9CWHwzNDZ8U1R8Qmxhbmt8fFBhdGllbnQgdm9pY2VzIG5vIGNvbmNlcm5zLCBzaGUgaXMgbWVkaWNhdGlvbiBjb21wbGlhbnQsIGFuZA1PQlh8MzQ3fFNUfEJsYW5rfHxwc3ljaGlhdHJpY2FsbHkgc3RhYmxlLiAgU2hlIGNvbnRpbnVlcyB0byB3YWl0IGZvciBhIGxvbmd0ZXJtIGNhcmUgd2FpdmVyDU9CWHwzNDh8U1R8Qmxhbmt8fGFzc2Vzc21lbnQuICBEb2N1bWVudGF0aW9uIHNoZSBzbGVwdCA2IGhvdXJzLg1PQlh8MzQ5fFNUfEJsYW5rfHwgDU9CWHwzNTB8U1R8Qmxhbmt8fDEyLzE0OiBtZXQgd2l0aCBwdCBpbiBoZXIgcm9vbS4gc2hlIHNheXMgc2hlIGlzIGp1c3QgZ2V0dGluZyB1cCBmb3IgdGhlDU9CWHwzNTF8U1R8Qmxhbmt8fGRheSwgYW5kIHRoYXQgc2hlIGZlZWxzICJmaW5lIi4gU2hlIGlzIHBzeWNoaWF0cmljYWxseSBzdGFibGUgYW5kIHdhaXRpbmcNT0JYfDM1MnxTVHxCbGFua3x8b24gcGxhY2VtZW50Lg1PQlh8MzUzfFNUfEJsYW5rfHwgDU9CWHwzNTR8U1R8Qmxhbmt8fDEyLzEzOiBtZXQgd2l0aCBwdCBpbiBoZXIgcm9vbSwgc2hlIHdhcyBzdGlsbCBzbGVlcGluZyBhbmQgc2FpZCBzaGUgZGlkbid0DU9CWHwzNTV8U1R8Qmxhbmt8fGdvIHRvIGJyZWFrZmFzdCBiZWNhdXNlICJJIGRpZG4ndCBmZWVsIGxpa2UgZ2V0dGluZyB1cCIuIFNoZSBzYXlzIGhlciBtb29kDU9CWHwzNTZ8U1R8Qmxhbmt8fGlzIGdvb2QuIFNoZSBpcyBwc3ljaGlhdHJpY2FsbHkgc3RhYmxlIGFuZCB3YWl0aW5nIG9uIHBsYWNlbWVudC4NT0JYfDM1N3xTVHxCbGFua3x8IA1PQlh8MzU4fFNUfEJsYW5rfHwxMi8xMjogbWV0IHdpdGggcHQgaW4gaGVyIHJvb20gd2hlcmUgc2hlIHdhcyByZXN0aW5nLiBzaGUgc2F5cyBzaGUgaXMgZG9pbmcNT0JYfDM1OXxTVHxCbGFua3x8d2VsbCBhbmQgaGFzIG5vIGNvbmNlcm5zLiBzaGUgaXMgcHN5Y2hpYXRyaWNhbGx5IHN0YWJsZSBhbmQgYXdhaXRpbmcgaGVyDU9CWHwzNjB8U1R8Qmxhbmt8fGxvbmcgdGVybSBjYXJlIHdhaXZlci4NT0JYfDM2MXxTVHxCbGFua3x8IA1PQlh8MzYyfFNUfEJsYW5rfHwxMi8xMTogbWV0IHdpdGggcHQgaW4gaGVyIHJvb20uIHNoZSBoYXMgbm8gaXNzdWVzIG9yIGNvbmNlcm5zIGF0IHRoaXMgdGltZS4NT0JYfDM2M3xTVHxCbGFua3x8c2hlIGlzIHBzeWNoaWF0cmljYWxseSBzdGFibGUgYW5kIHdhaXRpbmcgb24gYSBsb25ndGVybSBjYXJlIHdhaXZlcg1PQlh8MzY0fFNUfEJsYW5rfHxhc3Nlc3NtZW50LiBzaGUgc2xlcHQgZm9yIDcgaG91cnMuDU9CWHwzNjV8U1R8Qmxhbmt8fCANT0JYfDM2NnxTVHxCbGFua3x8MTIvMTA6IG1ldCB3aXRoIHB0IGluIGhlciByb29tLCBzaGUgc3RhdGVzIG5vIGNvbmNlcm5zIGF0IHRoaXMgdGltZS4gc2hlIGlzDU9CWHwzNjd8U1R8Qmxhbmt8fGF0dGVuZGluZyBzb21lIGdyb3VwcyBhbmQgaXMgbWVkaWNhdGlvbiBjb21wbGlhbnQuIHNoZSBzbGVwdCA2IGhvdXJzIHBlcg1PQlh8MzY4fFNUfEJsYW5rfHxkb2N1bWVudGF0aW9uLg1PQlh8MzY5fFNUfEJsYW5rfHwgDU9CWHwzNzB8U1R8Qmxhbmt8fDEyLzk6IFB0IGRlbmllcyBhY3V0ZSBjb25jZXJucy4gTWVkIGFkaGVyYW50LCBkZW5pZXMgc2lkZSBlZmZlY3RzLiBObw1PQlh8MzcxfFNUfEJsYW5rfHxvdmVybmlnaHQgZXZlbnRzLiBQdCBpcyBlbmdhZ2luZyBpbiBtaWxpZXUgYWN0aXZpdGllcyBhcHByb3ByaWF0ZWx5Lg1PQlh8MzcyfFNUfEJsYW5rfHxUb2xlcmF0aW5nIG1lYWxzLiBTbGVwdCA3KyBob3VycyBvdmVybmlnaHQuDU9CWHwzNzN8U1R8Qmxhbmt8fCANT0JYfDM3NHxTVHxCbGFua3x8MTIvMDg6IE1ldCB3aXRoIHB0IHRoaXMgbW9ybmluZy4gTm8gdXBkYXRlcyBmcm9tIHR4IHRlYW0uIEFMRiBhc3Nlc3NtZW50DU9CWHwzNzV8U1R8Qmxhbmt8fHdhcyBzY2hlZHVsZWQgZm9yIERlYyAzMHRoLiBUQyBzdGF0ZWQgdGhleSBhcmUgdHJ5aW5nIHRvIG1vdmUgaXQgdXAgdG8gRGVjDU9CWHwzNzZ8U1R8Qmxhbmt8fDE1dGguIFB0IGF3YXJlLiBTaGUgaXMgYW1idWxhdG9yeSBvbiB1bml0LCB1c2VzIHdhbGtlciBmb3IgbW9iaWxpdHksIGVhdGluZw1PQlh8Mzc3fFNUfEJsYW5rfHx3ZWxsLCBhbmQgc2xlZXAgaGFzIGJlZW4gZ29vZC4NT0JYfDM3OHxTVHxCbGFua3x8IA1PQlh8Mzc5fFNUfEJsYW5rfHwxMi8wNzogTWV0IHdpdGggcHQgdGhpcyBtb3JuaW5nIGFmdGVyIGFydCBncm91cC4gU2hlIHNsZXB0IGJldHRlciBsYXN0DU9CWHwzODB8U1R8Qmxhbmt8fG5pZ2h0LiBBcHBldGl0ZSBpcyBzdGFibGUsIGF0dGVuZHMgbWVhbHMuIEFtYnVsYXRvcnkgb24gdW5pdCB3aXRoIHdhbGtlci4NT0JYfDM4MXxTVHxCbGFua3x8U2hlIGludGVyYWN0cyB3aXRoIHNlbGVjdCBwZWVycy4gTm8gdXBkYXRlcyBvbiBBTEYgdGhpcyBtb3JuaW5nIGluIHR4IHRlYW0uDU9CWHwzODJ8U1R8Qmxhbmt8fFB0IGF3YXJlIG9mIG5vIHVwZGF0ZXMgYXQgdGhpcyB0aW1lLg1PQlh8MzgzfFNUfEJsYW5rfHwgDU9CWHwzODR8U1R8Qmxhbmt8fDEyLzA2OiBNZXQgd2l0aCBwdCBqdXN0IGJlZm9yZSBsdW5jaCB0b2RheS4gU2hlIGlzIGFtYnVsYXRpbmcgb24gdW5pdCB3aXRoDU9CWHwzODV8U1R8Qmxhbmt8fHdhbGtlci4gQXR0ZW5kcyBtZWFscy4gU2hlIHdhdGNoZWQgdGhlIENsZW1zb24gZ2FtZSBsYXN0IG5pZ2h0IGFuZCB3YXMNT0JYfDM4NnxTVHxCbGFua3x8aGFwcHkgdGhleSB3b24uIFNoZSBlbmpveXMgd2F0Y2hpbmcgdGhlIENsZW1zb24gZ2FtZXMuIFNoZSBpcyBob3BpbmcgdG8gYmUNT0JYfDM4N3xTVHxCbGFua3x8YWNjZXB0ZWQgdG8gYW4gQUxGIHNvb24uIFNoZSBpcyBhYmxlIHRvIHZvaWNlIG5lZWRzIG9uIHVuaXQgdG8gc3RhZmYuDU9CWHwzODh8U1R8Qmxhbmt8fEludGVyYWN0cyB3aXRoIHNlbGVjdCBwZWVycy4NT0JYfDM4OXxTVHxCbGFua3x8IA1PQlh8MzkwfFNUfEJsYW5rfHwxMi8wNTogbWV0IHdpdGggcHQgdGhpcyBtb3JuaW5nLiBTaGUgd2FzIGluIGhlciByb29tIGx5aW5nIGluIGJlZCByZWFkaW5nLg1PQlh8MzkxfFNUfEJsYW5rfHxTaGUgc3RhdGVzIHNoZSBkaWQgbm90IHNsZWVwIHdlbGwgbGFzdCBuaWdodC4gU2hlIGlzIGhhdmluZyBhIGhhcmQgdGltZQ1PQlh8MzkyfFNUfEJsYW5rfHxnb2luZyBiYWNrIHRvIHNsZWVwIGFmdGVyIHNoZSB3YWtlcyB1cC4gU2hlIGlzIHN0YWJsZSBvbiB1bml0LiBBd2FpdGluZyBBTEYNT0JYfDM5M3xTVHxCbGFua3x8cGxhY2VtZW50IG9wdGlvbnMuIEF0dGVuZHMgbWVhbHMuDU9CWHwzOTR8U1R8Qmxhbmt8fCANT0JYfDM5NXxTVHxCbGFua3x8MTIvMDQ6IE1ldCB3aXRoIHB0IHRoaXMgbW9ybmluZyBpbiBoZXIgcm9vbS4gU2hlIGlzIHNpdHRpbmcgdXAgaW4gYmVkDU9CWHwzOTZ8U1R8Qmxhbmt8fHJlYWRpbmcuIEF3YWl0aW5nIHBsYWNlbWVudCBvcHRpb25zIHRvIEFMRi4gU2hlIGlzIGFkaGVyZW50IHdpdGgNT0JYfDM5N3xTVHxCbGFua3x8bWVkaWNhdGlvbnMuIExlc3MgYW54aW91cyB0b2RheS4gQXBwZXRpdGUgaGFzIGJlZW4gZ29vZC4gU2hlIGFtYnVsYXRlcyBvbg1PQlh8Mzk4fFNUfEJsYW5rfHx1bml0IGFuZCB1c2VzIHdhbGtlciBzb21ldGltZXMgZm9yIG1vYmlsaXR5Lg1PQlh8Mzk5fFNUfEJsYW5rfHwgDU9CWHw0MDB8U1R8Qmxhbmt8fDEyLzAzOiBNZXQgd2l0aCBwdCB0aGlzIG1vcm5pbmcuIFNoZSBpcyByZXF1ZXN0aW5nIGF0aXZhbi4gU3RhdGVzIHNoZSBpcw1PQlh8NDAxfFNUfEJsYW5rfHxhbnhpb3VzLiBQdCBoYXMgbWVkaWNhdGlvbnMgZm9yIGFueGlldHkgb24gaGVyIGNoYXJ0LiBTaGUgaGFzIGJlZW4gb24gdW5pdA1PQlh8NDAyfFNUfEJsYW5rfHw5MCBkYXlzLiBTVyBhc3Npc3Rpbmcgd2l0aCBsb25ndGVybSB3YWl2ZXIgYXBwIGFuZCBwbGFjZW1lbnQgb3B0aW9ucy4gUHQNT0JYfDQwM3xTVHxCbGFua3x8c3RhYmxlIG9uIHVuaXQuIE5vIGNoYW5nZXMuDU9CWHw0MDR8U1R8Qmxhbmt8fCANT0JYfDQwNXxTVHxCbGFua3x8MTIvMDI6IG1ldCB3aXRoIHB0IGZvciBmL3UgaW4gaGVyIHJvb20uIHNoZSBoYXMgYmVlbiBsZXNzIGlycml0YWJsZSBhbmQgbm8NT0JYfDQwNnxTVHxCbGFua3x8bG9uZ2VyIHRhbGtzIGFib3V0IGRpc2NoYXJnaW5nIHRvIGhlciBmcmllbmRzIGhvdXNlLiBTaGUgaXMgd2lsbGluZyB0byB3YWl0DU9CWHw0MDd8U1R8Qmxhbmt8fGFuZCBnZXQgdGhlIGxvbmd0ZXJtIGNhcmUgd2FpdmVyIG5lZWRlZCBmb3IgaGVyIEFMRiBwbGFjZW1lbnQuIFNoZSBpcw1PQlh8NDA4fFNUfEJsYW5rfHxwc3ljaGlhdHJpY2FsbHkgc3RhYmxlIGFuZCB3YWl0aW5nIG9uIHBsYWNlbWVudC4NT0JYfDQwOXxTVHxCbGFua3x8IA1PQlh8NDEwfFNUfEJsYW5rfHwxMi8wMTogbWV0IHdpdGggcHQgZm9yIGYvdSBpbiBzb3V0aCBtaWxpZXUuIHNoZSBzdGF0ZXMgc2hlIGlzIGRvaW5nIHdlbGwNT0JYfDQxMXxTVHxCbGFua3x8YW5kIHRyeWluZyB0byBrZWVwIGhlcnNlbGYgb2NjdXBpZWQgYnkgcmVhZGluZy4gdGhlIGJlbmVmaXRzIG9mIHdhaXRpbmcgdG8NT0JYfDQxMnxTVHxCbGFua3x8YmUgYWNjZXB0ZWQgdG8gYW4gQUxGIHZzIGEgc2hvcnQgdGVybSBkaXNjaGFyZ2UgdG8gYSBmcmllbmRzIGhvdXNlIHdlcmUNT0JYfDQxM3xTVHxCbGFua3x8ZGlzY3Vzc2VkLiBUaGUgcGF0aWVudCB2ZXJiYWxpemVkIGFuIHVuZGVyc3RhbmRpbmcgYW5kIHNheXMgc2hlIGFncmVlcy4NT0JYfDQxNHxTVHxCbGFua3x8IA1PQlh8NDE1fFNUfEJsYW5rfHwxMS8zMDogbWV0IHdpdGggcHQgZm9yIGYvdSBpbiBoZXIgcm9vbSBhcyBzaGUgd2FzIGdldHRpbmcgcmVhZHkgdG8gZ28gdG8gYQ1PQlh8NDE2fFNUfEJsYW5rfHxncm91cC4gc2hlIHN0YXRlcyBzaGUgaXMgZG9pbmcgZmluZSwgYnV0IHBlciBzdGFmZiBkb2N1bWVudGF0aW9uIHNoZSBoYXMNT0JYfDQxN3xTVHxCbGFua3x8YmVlbiBtb3JlIGlycml0YWJsZS4gc2hlIGlzIHBzeWNoaWF0cmljYWxseSBzdGFibGUgYW5kIGF3YWl0aW5nIHBsYWNlbWVudA1PQlh8NDE4fFNUfEJsYW5rfHxvcHRpb25zLg1PQlh8NDE5fFNUfEJsYW5rfHwgDU9CWHw0MjB8U1R8Qmxhbmt8fDExLzI5OiBtZXQgd2l0aCBwdCBmb3IgZi91IGluIHNvdXRoIG1pbGlldSBhcyBzaGUgd2FzIHdhbGtpbmcgaW4gaGVyDU9CWHw0MjF8U1R8Qmxhbmt8fHdhbGtlci4gc2hlIHdhcyAic2hvcnQgYW5kIGFicnVwdCIgaW4gaGVyIGFuc3dlcnMsIGJ1dCBub3QgdW5wbGVhc2FudC4gc2hlDU9CWHw0MjJ8U1R8Qmxhbmt8fHN0YXRlcyBzaGUgaXMgImZpbmUiLiBwZXIgZG9jdW1lbnRhdGlvbiBzaGUgc2xlcHQgZm9yIDcgaG91cnMgYW5kIGlzDU9CWHw0MjN8U1R8Qmxhbmt8fG1lZGljYXRpb24gY29tcGxpYW50Lg1PQlh8NDI0fFNUfEJsYW5rfHwgDU9CWHw0MjV8U1R8Qmxhbmt8fDExLzI4OiBtZXQgd2l0aCBwdCBmb3IgZi91IGluIGhlciByb29tLiBzaGUgd2FzIHJlc3RpbmcgYWZ0ZXIgYnJlYWtmYXN0Lg1PQlh8NDI2fFNUfEJsYW5rfHxzaGUgc2F5cyBzaGUgaXMgZG9pbmcgZmluZSBhbmQgIm5vIGNoYW5nZXMgcmlnaHQgbm93Ii4gcHQgaXMNT0JYfDQyN3xTVHxCbGFua3x8cHN5Y2hpYXRyaWNhbGx5IHN0YWJsZSBhbmQgYXdhaXRpbmcgcGxhY2VtZW50IG9wdGlvbnMuIHBlciBkb2N1bWVudGF0aW9uDU9CWHw0Mjh8U1R8Qmxhbmt8fHNoZSBzbGVwdCA2IGhvdXJzLg1PQlh8NDI5fFNUfEJsYW5rfHwgDU9CWHw0MzB8U1R8Qmxhbmt8fDExLzI3OiBtZXQgd2l0aCBwdCBmb3IgZi91IGluIGhlciByb29tIHdoZXJlIHNoZSB3YXMgcmVzdGluZy4gc2hlIHNheXMgc2hlDU9CWHw0MzF8U1R8Qmxhbmt8fGlzIHNsZWVwaW5nIGFuZCBlYXRpbmcgZmluZS4gcGVyIGRvY3VtZW50YXRpb24gc2hlIGlzIGNvbXBsaWFudCB3aXRoDU9CWHw0MzJ8U1R8Qmxhbmt8fG1lZGljYXRpb25zIGFuZCBzbGVwdCA3IGhvdXJzLiBTVyBjb250aW51ZXMgdG8gdHJ5IGFuZCBnZXQgcHQgYSBsb25nIHRlcm0NT0JYfDQzM3xTVHxCbGFua3x8Y2FyZSB3YWl2ZXIgZm9yIGFsZiBwbGFjZW1lbnQuIHB0IHN0aWxsIHRhbGtzIGFib3V0IG1heWJlIGdvaW5nIHRvIGhlcg1PQlh8NDM0fFNUfEJsYW5rfHxmcmllbmQgR2FpbHMgaG91c2Ugb24gTW9uZGF5IG9yIFR1ZXNkYXkuDU9CWHw0MzV8U1R8Qmxhbmt8fCANT0JYfDQzNnxTVHxCbGFua3x8MTEvMjY6IG1ldCB3aXRoIHB0IGZvciBmL3UgaW4gYnJlYWtmYXN0IGFyZWEuIHNoZSBzdGF0ZXMgc2hlIHN0aWxsIHdhbnRzIHRvDU9CWHw0Mzd8U1R8Qmxhbmt8fCJ0cnkiIGFuZCBsaXZlIHdpdGggaGVyIGZyaWVuZCBHYWlsLCBhbmQgaXMgcGxhbm5pbmcgb24gZGlzY2hhcmdpbmcgTW9uZGF5DU9CWHw0Mzh8U1R8Qmxhbmt8fG9yIFR1ZXNkYXkuIFBlciBTVywgdGhleSBhcmUgc3RpbGwgdHJ5aW5nIHRvIHdvcmsgb24gZ2V0dGluZyBoZXIgYSAibG9uZw1PQlh8NDM5fFNUfEJsYW5rfHx0ZXJtIGNhcmUgd2FpdmVyIiB0byBoZWxwIHdpdGggYWxmIHBsYWNlbWVudCBvcHRpb25zLiBwZXIgZG9jdW1lbnRhdGlvbiBwdA1PQlh8NDQwfFNUfEJsYW5rfHxzbGVwdCBmb3IgNyBob3Vycy4NT0JYfDQ0MXxTVHxCbGFua3x8IA1PQlh8NDQyfFNUfEJsYW5rfHwxMS8yNTogTWV0IHdpdGggcHQgdGhpcyBtb3JuaW5nLiBTaGUgaXMgYW1idWxhdGluZyB3aXRoIHdhbGtlciBvbiB1bml0Lg1PQlh8NDQzfFNUfEJsYW5rfHxBcHBldGl0ZSBoYXMgYmVlbiBnb29kLiBUQyBiYWNrIHRvIHdvcmtpbmcgb24gQUxGL2dyb3VwIGhvbWUgcGxhY2VtZW50IGZvcg1PQlh8NDQ0fFNUfEJsYW5rfHxwYXRpZW50IHNpbmNlIHNoZSBjYW5ub3QgZ28gbGl2ZSB3aXRoIGhlciBmcmllbmQgbm93LiBTaGUgaXMgYWRoZXJlbnQgd2l0aA1PQlh8NDQ1fFNUfEJsYW5rfHxtZWRpY2F0aW9ucy4gU2hlIGhhcyBoYWQgdHdvIGlzc3VlcyB3aXRoIHBhc3QgdHdvIHJvb21tYXRlcy4gU2hlIGhhcyBnb3R0ZW4NT0JYfDQ0NnxTVHxCbGFua3x8aW50byBhIGZpZ2h0IHdpdGggY3VycmVudCByb29tbWF0ZSBhbmQgd291bGRuJ3Qgc3RvcCB5ZWxsaW5nIGF0IGhlciBsYXN0DU9CWHw0NDd8U1R8Qmxhbmt8fHJvb21tYXRlLiBTdGFmZiBzcG9rZSB3aXRoIHB0IGFuZCByZW1pbmRlZCBoZXIgb2YgYXBwcm9wcmlhdGUgYmVoYXZpb3JzIG9uDU9CWHw0NDh8U1R8Qmxhbmt8fHVuaXQgYW5kIGlmIHNoZSBjYW5ub3QgYWJpZGUgYnkgcnVsZXMgc2hlIHdpbGwgaGF2ZSB0byBtb3ZlIGJhY2sgdG8gbm9ydGgNT0JYfDQ0OXxTVHxCbGFua3x8dW5pdC4NT0JYfDQ1MHxTVHxCbGFua3x8IA1PQlh8NDUxfFNUfEJsYW5rfHwxMS8yNDogTWV0IHdpdGggcHQgdGhpcyBtb3JuaW5nLiBTaGUgd2FzIGEgbGl0dGxlIGlycml0YWJsZS4gU2hlIGhhcw1PQlh8NDUyfFNUfEJsYW5rfHxkZWNpZGVkIHNoZSBjYW5ub3QgZGlzY2hhcmdlIHRvIGhlciBmcmllbmRzIGFueW1vcmUuIFRyZWF0bWVudCB0ZWFtIHVwZGF0ZWQNT0JYfDQ1M3xTVHxCbGFua3x8b24gcHQgdGhpcyBtb3JuaW5nLiBTaGUgaXMgYWRoZXJlbnQgd2l0aCBtZWRpY2F0aW9ucywgYXR0ZW5kcyBtZWFscywgYW5kDU9CWHw0NTR8U1R8Qmxhbmt8fGludGVyYWN0cyB3aXRoIHNlbGVjdCBwZWVycy4gU2hlIHVzZXMgYSB3YWxrZXIgZm9yIG1vYmlsaXR5Lg1PQlh8NDU1fFNUfEJsYW5rfHwgDU9CWHw0NTZ8U1R8Qmxhbmt8fDExLzIzOiBNZXQgd2l0aCBwdCB0aGlzIG1vcm5pbmcuIFNoZSBzYWlkIHNoZSBjYW5ub3QgZGlzY2hhcmdlLiBTaGUgc3RhdGVzDU9CWHw0NTd8U1R8Qmxhbmt8fGhlciBmcmllbmRzIGJveWZyaWVuZCBpcyBNZXhpY2FuIGFuZCBoZSBzY2FyZXMgaGVyIHNvIHNoZSBjYW5ub3QgZ28gbGl2ZQ1PQlh8NDU4fFNUfEJsYW5rfHx3aXRoIEdhaWwgTWFydGluZXogYW55bW9yZSBhbmQgc3RpbGwgd2FudHMgdG8gZ28gdG8gYW4gQUxGLiBUeCB0ZWFtDU9CWHw0NTl8U1R8Qmxhbmt8fG5vdGlmaWVkIG9mIHB0cyByZWZ1c2FsIHRvIGRpc2NoYXJnZSB0byBoZXIgZnJpZW5kcyBob21lLg1PQlh8NDYwfFNUfEJsYW5rfHwxMS8yMjogTWV0IHdpdGggcHQgdGhpcyBtb3JuaW5nLiBTaGUgaXMgdG8gZGlzY2hhcmdlIE1vbmRheSBvciBUdWVzZGF5IHRoaXMNT0JYfDQ2MXxTVHxCbGFua3x8d2Vlay4gUHQgc3RhdGVzIHNoZSBoYXMgbm90IHNwb2tlbiB0byBoZXIgZnJpZW5kIHdobyBpcyBwaWNraW5nIGhlciB1cCBhbmQNT0JYfDQ2MnxTVHxCbGFua3x8ZG9lc24ndCBrbm93IHdoaWNoIGRheS4gUmVjb21tZW5kZWQgcHQgY2FsbCBoZXIgZnJpZW5kIHRvZGF5IHNvIHdlIGNhbg1PQlh8NDYzfFNUfEJsYW5rfHxzdGFydCBoZXIgZGlzY2hhcmdlIHBhcGVyd29yayBhbmQgcHJvY2VzcyBzbyBzaGUgaXNuJ3Qgd2FpdGluZy4gU2hlIGlzDU9CWHw0NjR8U1R8Qmxhbmt8fHNsZWVwaW5nIHdlbGwsIGF0dGVuZGluZyBtZWFscywgYW5kIGFkaGVyZW50IHdpdGggbWVkaWNhdGlvbnMuDU9CWHw0NjV8U1R8Qmxhbmt8fCANT0JYfDQ2NnxTVHxCbGFua3x8MTEvMjE6IE1ldCB3aXRoIHB0IHRoaXMgbW9ybmluZy4gU2hlIHJlcG9ydHMgc2hlIGRpZCBub3Qgc2xlZXAgd2VsbCBsYXN0DU9CWHw0Njd8U1R8Qmxhbmt8fG5pZ2h0LiBTaGUgaXMgc3RpbGwgbHlpbmcgaW4gYmVkLiBTaGUgaXMgZWF0aW5nIHdlbGwuIEF3YWl0aW5nIGRpc2NoYXJnZQ1PQlh8NDY4fFNUfEJsYW5rfHxlYXJseSBuZXh0IHdlZWsgdG8gZ28gbGl2ZSB3aXRoIGhlciBmcmllbmQuIE1vc3QgbGlrZWx5IHdpbGwgZC9jIG9uIE1vbmRheS4NT0JYfDQ2OXxTVHxCbGFua3x8IA1PQlh8NDcwfFNUfEJsYW5rfHwgDU9CWHw0NzF8U1R8Qmxhbmt8fDExLzIwOiBNZXQgd2l0aCBwdCB0aGlzIGFmdGVybm9vbi4gU2hlIGlzIGxvb2tpbmcgZm9yd2FyZCB0byBkaXNjaGFyZ2luZw1PQlh8NDcyfFNUfEJsYW5rfHxuZXh0IHdlZWsuIFN0YXRlcyBTVyBtZXQgd2l0aCBoZXIgIHllc3RlcmRheSBhbmQgc2hlIGlzIHR5cmluZyB0byBnZXQgaG9sZA1PQlh8NDczfFNUfEJsYW5rfHxvZiBoZXIgZnJpZW5kIHRvIGhhdmUgaGVyIGNhcmRzIG1haWxlZCB0byBmcmllbmRzIGhvbWUuIFNoZSBzYWlkIHNoZSBkaWRuJ3QNT0JYfDQ3NHxTVHxCbGFua3x8c2xlZXAgd2VsbCBsYXN0IG5pZ2h0IGR1ZSB0byBoZXIgcm9vbW1hdGUuIEhlciBhcHBldGl0ZSBoYXMgYmVlbiBzdGFibGUuDU9CWHw0NzV8U1R8Qmxhbmt8fFNoZSBpcyBzdGFibGUgb24gdW5pdC4gQW50aWNpcGF0ZWQgZGlzY2hhcmdlIHRoaXMgbW9uZGF5Lg1PQlh8NDc2fFNUfEJsYW5rfHwgDU9CWHw0Nzd8U1R8Qmxhbmt8fDExLzE5OiBNZXQgd2l0aCBwdCB0aGlzIGFmdGVybm9vbi4gU2hlIHN0YXRlcyBzaGUgZG9lcyBub3QgaGF2ZSBoZXIgZGViaXQNT0JYfDQ3OHxTVHxCbGFua3x8Y2FyZCBvciBhbm90aGVyIGNhcmQgZm9yIGhlciBmb29kIHN0YW1wcy9kaXNhYmlsaXR5IGFuZCBkb2Vzbid0IHdhbnQgdG8NT0JYfDQ3OXxTVHxCbGFua3x8ZGlzY2hhcmdlIHdpdGhvdXQgaXQuIHNoZSB3YW50cyB0byBoYXZlIGl0IG1haWxlZCB0byB0aGUgaG9zcGl0YWwuDU9CWHw0ODB8U1R8Qmxhbmt8fEVuY291cmFnZWQgcHQgdG8gdGFsayB0byBzdGFmZiBhYm91dCB0aGUgZGViaXQgY2FyZCBvciBoZXIgU1cuIFRDIG5vdGlmaWVkDU9CWHw0ODF8U1R8Qmxhbmt8fG9mIHBhdGllbnRzIGNvbmNlcm5zLiBTaGUgaGFzIHBsYW5zIHRvIGRpc2NoYXJnZSBNb25kYXkgdG8gaGVyIGZyaWVuZHMgdGhhdA1PQlh8NDgyfFNUfEJsYW5rfHxzaGUgaXMgYWJsZSB0byBtb3ZlIGluIHdpdGgsIGJ1dCB0b2RheSBzdGF0ZXMgc2hlIGNhbm5vdCBsZWF2ZSB3aXRoIG91dCBoZXINT0JYfDQ4M3xTVHxCbGFua3x8ZGViaXQgY2FyZHMgYW5kIHN0YXRlIGFzc2lzdGFuY2UgY2FyZC4NT0JYfDQ4NHxTVHxCbGFua3x8IA1PQlh8NDg1fFNUfEJsYW5rfHwxMS8xODogbWV0IHdpdGggcHQgZm9yIGYvdSBpbiBicmVha2Zhc3QgYXJlYS4gc2hlIHByZXNlbnRlZCBhIGxpdHRsZQ1PQlh8NDg2fFNUfEJsYW5rfHxpcnJpdGFibGUsIHNheXMgc2hlJ3MgYmVlbiBoZXJlIGEgbG9uZyB0aW1lIGFuZCBpc250IHNsZWVwaW5nIHdlbGwuIFNvY2lhbA1PQlh8NDg3fFNUfEJsYW5rfHx3b3JrZXIgc2F5cyB0aGUgcGF0aWVudCBnYXZlIGhlciB0aGUgbmFtZSBhbmQgbnVtYmVyIG9mIGEgZnJpZW5kIHdobyBzYXlzDU9CWHw0ODh8U1R8Qmxhbmt8fHNoZSBjYW4gc3RheSB3aXRoIGhlci4gU1cgY2FsbGVkIHRoZSBmcmllbmQgKEdhaWwgTWFydGluZXopIGFuZCBzaGUgc2FpZA1PQlh8NDg5fFNUfEJsYW5rfHxzaGUgY291bGQgY29tZSBNb25kYXkuDU9CWHw0OTB8U1R8Qmxhbmt8fCANT0JYfDQ5MXxTVHxCbGFua3x8MTEvMTc6IG1ldCB3aXRoIHB0IGZvciBmL3UgaW4gc291dGggbWlsaWV1LiBwZXIgZG9jdW1lbnRhdGlvbiBzaGUgaGFzIGJlZW4NT0JYfDQ5MnxTVHxCbGFua3x8aXJyaXRhYmxlIHdpdGggc3RhZmYgYW5kIHJvb20gbWF0ZS4gcHQgc2F5cyBzaGUgaXMganVzdCB0aXJlZCBhbmQgaXMNT0JYfDQ5M3xTVHxCbGFua3x8ZmVlbGluZyBmaW5lLiBzaGUgaXMgcHN5Y2hpYXRyaWNhbGx5IHN0YWJsZSBhbmQgYXdhaXRuZyBwbGFjZW1lbnQgb3B0aW9ucy4NT0JYfDQ5NHxTVHxCbGFua3x8IA1PQlh8NDk1fFNUfEJsYW5rfHwxMS8xNjogbWV0IHdpdGggcHQgZm9yIGYvdSBpbiBzb3V0aCBtaWxpZXUuIHNoZSBzdGF0ZXMgc2hlIGlzIHRpcmVkIGJlY2F1c2UNT0JYfDQ5NnxTVHxCbGFua3x8c2hlIGp1c3Qgd29rZSB1cC4gcHQgaGFzIGNvbXBsYWludCBvZiBlYXJseSBtb3JuaW5nIGF3YWtlbmluZywgc28gcHJuDU9CWHw0OTd8U1R8Qmxhbmt8fG1lZGljYXRpb25zIGFscmVhZHkgb24gaGVyIGZvcm11bGFyeSBkaXNjdXNzZWQgdGhhdCBjYW4gaGVscCBoZXIgcmVsYXggYW5kDU9CWHw0OTh8U1R8Qmxhbmt8fGdldCBiYWNrIHRvIHNsZWVwLiBwdCBpcyBwc3ljaGlhdHJpY2FsbHkgc3RhYmxlIGFuZCBhd2FpdGluZyBwbGFjZW1lbnQuDU9CWHw0OTl8U1R8Qmxhbmt8fCANT0JYfDUwMHxTVHxCbGFua3x8MTEvMTU6IG1ldCB3aXRoIHB0IGZvciBmL3UgaW4gaGVyIHJvb20uIHNoZSBoYXMgYSBjb21wbGFpbnQgb2Ygd2FraW5nIHVwDU9CWHw1MDF8U1R8Qmxhbmt8fGVhcmx5IGluIHRoZSBtb3JuaW5nIGFuZCBub3QgYmVpbmcgYWJsZSB0byBmYWxsIGJhY2sgYXNsZWVwICJiZWNhdXNlIG15DU9CWHw1MDJ8U1R8Qmxhbmt8fG1pbmQgc3RhcnRzIGdvaW5nIi4gcHQgd2FzIHJlbWluZGVkIHRoYXQgc2hlIGhhcyBwcm4ncyBzaGUgY2FuIHV0aWxpemUgaW4NT0JYfDUwM3xTVHxCbGFua3x8dGhvc2UgdGltZXMuDU9CWHw1MDR8U1R8Qmxhbmt8fCANT0JYfDUwNXxTVHxCbGFua3x8MTEvMTQ6IG1ldCB3aXRoIHB0IGZvciBmL3UgaW4gc291dGggYnJlYWtmYXN0IGFyZWEuIHNoZSBzdGF0ZXMgc2hlIGlzIG5vdA1PQlh8NTA2fFNUfEJsYW5rfHxzbGVlcGluZyB3ZWxsIGFuZCBpcyByZXF1ZXN0aW5nIGEgbWVkaWNhdGlvbiBhZGp1c3RtZW50LiBkdWUgdG8gaGVyDU9CWHw1MDd8U1R8Qmxhbmt8fGNvbW9yYmlkaXRpZXMsIG1lbGF0b25pbiBpbmNyZWFzZWQuDU9CWHw1MDh8U1R8Qmxhbmt8fCANT0JYfDUwOXxTVHxCbGFua3x8MTEvMTM6IG1ldCB3aXRoIHB0IGluIHR2IHJvb20uIHNoZSBpcyBwbGVhc2FudCBhbmQgY29vcGVyYXB0aXZlLCB3aXRoIHNvbWUNT0JYfDUxMHxTVHxCbGFua3x8Y29tcGxhaW50cyBvZiByaWdodCBoaXAgcGFpbiwgYW5kIHNoZSBzdGF0ZXMgc2hlIG5lZWRzIGEgaGlwIHJlcGxhY2VtZW50Lg1PQlh8NTExfFNUfEJsYW5rfHxzaGUgaXMgcHN5Y2hpYXRyaWNhbGx5IHN0YWJsZSBhbmQgYXdhaXRpbmcgcGxhY2VtZW50IG9wdGlvbnMuDU9CWHw1MTJ8U1R8Qmxhbmt8fCANT0JYfDUxM3xTVHxCbGFua3x8MTEvMTI6IG1ldCB3aXRoIHB0IGZvciBmL3UgaW4gcm9vbS4gc2hlIHN0YXRlcyBzaGUgaXMgZWF0aW5nIGFuZCBzbGVlcGluZw1PQlh8NTE0fFNUfEJsYW5rfHx3ZWxsLCBhbmQgaXMgYXR0ZW5kaW5nIGdyb3Vwcy4gc2hlIGlzIGF3YWl0aW5nIHJlc3BvbnNlIGZyb20gYWxmIGluDU9CWHw1MTV8U1R8Qmxhbmt8fHBlbnNhY29sYSByZWdhcmRpbmcgYSBsb25nIHRlcm0gY2FyZSB3YWl2ZXIuIHB0IHNsZXB0IDYgaG91cnMNT0JYfDUxNnxTVHxCbGFua3x8IA1PQlh8NTE3fFNUfEJsYW5rfHwxMS8xMTogTWV0IHdpdGggcHQgdGhpcyBtb3JuaW5nLiBTaGUgaXMgYXR0ZW5kaW5nIGFydC4gU2hlIGlzIGludGVyYWN0aW5nDU9CWHw1MTh8U1R8Qmxhbmt8fHdpdGggcGVlcnMuIFNoZSBpcyBwYXRpZW50bHkgd2FpdGluZyBmb3IgcGxhY2VtZW50LiBTaGUgaG9wZXMgdG8gZmluZCBhDU9CWHw1MTl8U1R8Qmxhbmt8fHBsYWNlIHNvb24uIFNoZSBoYXMgYmVlbiBzdGFibGUgb24gdW5pdC4gQXR0ZW5kcyBtZWFscyBhbmQgc2xlZXBpbmcgd2VsbC4NT0JYfDUyMHxTVHxCbGFua3x8MTEvMTA6IE1ldCB3aXRoIHB0IHRoaXMgbW9ybmluZy4gU2hlIGlzIHN0YWJsZSBvbiB1bml0LiBTaGUgaXMgdXNpbmcgd2Fsa2VyDU9CWHw1MjF8U1R8Qmxhbmt8fGZvciBtb2JpbGl0eS4gQW54aW91c2x5IGF3YWl0aW5nIHBsYWNlbWVudC4gU2hlIGRlbmllcyBzaWRlIGVmZmVjdHMgb2YNT0JYfDUyMnxTVHxCbGFua3x8bWVkcy4gTm8gY2hhbmdlcy4NT0JYfDUyM3xTVHxCbGFua3x8IA1PQlh8NTI0fFNUfEJsYW5rfHwxMS8wOTogTWV0IHdpdGggcHQgdGhpcyBhZnRlcm5vb24uIFNoZSBpcyBpbiBhIG11Y2ggYmV0dGVyIG1vb2QgdG9kYXkuIE5vDU9CWHw1MjV8U1R8Qmxhbmt8fHVwZGF0ZXMgdG9kYXkgb24gcGxhY2VtZW50LiBXYXMgZG93biB5ZXN0ZXJkYXkgZHVlIHRvIHN0aWxsIGJlaW5nIG9uIHVuaXQNT0JYfDUyNnxTVHxCbGFua3x8YW5kIHJlZmxlY3Rpbmcgb24gdGhlIGRlbmlhbCB0byBCV1kgYW5kIEJyaWdodCBCZWdpbm5pbmdzLiBTaGUgaGFzIGJlZW4NT0JYfDUyN3xTVHxCbGFua3x8c3RhYmxlIG9uIHVuaXQuDU9CWHw1Mjh8U1R8Qmxhbmt8fCANT0JYfDUyOXxTVHxCbGFua3x8MTEvMDg6IE1ldCB3aXRoIHB0IHRoaXMgbW9ybmluZy4gU2hlIGlzIGZlZWxpbmcgZG93biBhbmQgZGVwcmVzc2VkIHRvZGF5Lg1PQlh8NTMwfFNUfEJsYW5rfHxTdGF0ZXMgc2hlIGZlZWxzIGZydXN0cmF0ZWQgdGhhdCBzaGUgd2lsbCBub3QgYmUgYWNjZXB0ZWQgYW55d2hlcmUuIFNoZSBpcw1PQlh8NTMxfFNUfEJsYW5rfHxhbHNvIHVwc2V0IENsZW1zb24gbG9zdCB0aGUgZ2FtZSBsYXN0IG5pZ2h0LiBTdGF0ZWQgc2hlIGlzIGF0dGVuZGluZyBzb21lDU9CWHw1MzJ8U1R8Qmxhbmt8fGdyb3VwcywgYnV0IGFmdGVyIGEgZmV3IG1vbnRocyBzaGUgc2FpZCBzb21lIGFyZSBtb3N0bHkgcmVwZWF0cyBvZiB3aGF0IHNoZQ1PQlh8NTMzfFNUfEJsYW5rfHxrbm93cy4gT3RoZXJ3aXNlLCBkb2luZyBvayBhbmQgaG9waW5nIHNoZSBjYW4gZ2V0IGEgcmV2aXNpdCB3aXRoIGJyaWdodA1PQlh8NTM0fFNUfEJsYW5rfHxiZWdpbm5pbmdzLg1PQlh8NTM1fFNUfEJsYW5rfHwgDU9CWHw1MzZ8U1R8Qmxhbmt8fDExLzA3OiBNZXQgd2l0aCBwdCB0aGlzIG1vcm5pbmcuIFNoZSBoYXMgYmVlbiBzdGFibGUgb24gdW5pdC4gTm8gY2hhbmdlcy4NT0JYfDUzN3xTVHxCbGFua3x8QWRoZXJlbnQgd2l0aCBtZWRzLCBkZW5pZXMgc2lkZSBlZmZlY3RzLiBTaGUgaXMgc3RpbGwgYXdhaXRpbmcgcGxhY2VtZW50Lg1PQlh8NTM4fFNUfEJsYW5rfHxBbWJ1bGF0aW5nIHRvZGF5IHdpdGhvdXQgd2Fsa2VyLiBHYWl0IGlzIGFudGFsZ2ljLiBObyBjaGFuZ2VzIHRvIHR4IHBsYW4uDU9CWHw1Mzl8U1R8Qmxhbmt8fCANT0JYfDU0MHxTVHxCbGFua3x8MTEvMDYvMjAyMDogTWV0IHdpdGggcHQgdGhpcyBtb3JuaW5nIG9uIDEgc291dGggaW4gY29uc3VsdCByb29tIHZpYQ1PQlh8NTQxfFNUfEJsYW5rfHx0ZWxlcHN5Y2hpYXRyeS4gU2hlIGlzIGFkaGVyZW50IHdpdGggbWVkaWNhdGlvbnMuIEFudGFsZ2ljIGdhaXQgdG9kYXksDU9CWHw1NDJ8U1R8Qmxhbmt8fHdpdGhvdXQgd2Fsa2VyIGNvbWluZyBpbnRvIHJvb20uU2hlIHNheXMgaGVyIHNsZWVwIGlzIGdvb2Qgc29tZXRpbWVzLCBidXQNT0JYfDU0M3xTVHxCbGFua3x8Z2V0cyBsb3VkIG90aGVyIHRpbWVzIGFuZCBzaGUgY2FuJ3Qgc2xlZXAuIFNoZSBpcyB0b2xlcmF0aW5nIG1lZGljYXRpb25zLA1PQlh8NTQ0fFNUfEJsYW5rfHxkZW5pZXMgc2lkZSBlZmZlY3RzLiBBIHJlZmVycmFsIHdhcyBzZW50IHRvIFZhcm51bWEgYSB3ZWVrIGFnby4gQWNjb3JkaW5nDU9CWHw1NDV8U1R8Qmxhbmt8fHRvIHNpZ24gb3V0IFNXIHJlYWNoaW5nIG91dCB0byB0aGVtIGFnYWluIGZvciByZXNwb25zZSBvbiB3aGV0aGVyIHRoZXkgcGxhbg1PQlh8NTQ2fFNUfEJsYW5rfHx0byBhY2NlcHQgcGF0aWVudC4gU2hlIGhhcyBoYWQgYSBnb29kIGFwcGV0aXRlLCBsaWtlcyB0byByZWFkIGluIGhlciByb29tIGENT0JYfDU0N3xTVHxCbGFua3x8bG90LCBhbmQgaXMgYWJsZSB0byB2b2ljZSBjb25jZXJucyB0byBzdGFmZi4NT0JYfDU0OHxTVHxCbGFua3x8IA1PQlh8NTQ5fFNUfEJsYW5rfHwxMS8wNTogTm8gYWN1dGUgY29uY2VybnMsIG5vIGJlaGF2aW9yYWwgY29uY2VybnMgb3Zlcm5pZ2h0LiBTbGVlcGluZyB3ZWxsLA1PQlh8NTUwfFNUfEJsYW5rfHx0b2xlcmF0aW5nIG1lYWxzLCB2aXNpYmxlIGFuZCBlbmdhZ2luZyBpbiBtaWxpZXUgYWN0aXZpdGllcy4NT0JYfDU1MXxTVHxCbGFua3x8TWVkaWNhdGlvbiBhZGhlcmFudCwgZGVuaWVzIHNpZGUgZWZmZWN0Lg1PQlh8NTUyfFNUfEJsYW5rfHwgDU9CWHw1NTN8U1R8Qmxhbmt8fDExLzA0OiBtZXQgd2l0aCBwdCBmb3IgZi91IGluIHNvdXRoLiB0aGVyZSBhcmUgbm8gdXBkYXRlcyBmb3IgcHQgY3VycmVudGx5DU9CWHw1NTR8U1R8Qmxhbmt8fG9uIGFsZiByZWZlcnJhbC4gcHQgaXMgbWVkaWNhdGlvbiBjb21wbGlhbnQsIHBhcnRpY2lwYXRlcyBpbiBncm91cHMsIGFuZCBpcw1PQlh8NTU1fFNUfEJsYW5rfHxwc3ljaGlhdHJpY2FsbHkgc3RhYmxlLg1PQlh8NTU2fFNUfEJsYW5rfHwgDU9CWHw1NTd8U1R8Qmxhbmt8fDExLzAzOiBtZXQgd2l0aCBwdCBmb3IgZi91IGluIHNvdXRoIG1pbGlldS4gc2hlIGlzIG1lZGljYXRpb24gY29tcGxpYW50LA1PQlh8NTU4fFNUfEJsYW5rfHxhdHRlbmRpbmcgZ3JvdXBzLCBhbmQgcGxlYXNhbnQgd2l0aCBwZWVycyBhbmQgc3RhZmYuIHNoZSBpcyBwc3ljaGlhdHJpY2FsbHkNT0JYfDU1OXxTVHxCbGFua3x8c3RhYmxlIGFuZCBhd2FpdGluZyBwbGFjZW1lbnQgb3B0aW9ucy4gcmVmZXJyYWwgaW4gZm9yIFZhcm51bm0uDU9CWHw1NjB8U1R8Qmxhbmt8fCANT0JYfDU2MXxTVHxCbGFua3x8MTEvMDI6IG1ldCB3aXRoIHB0IGZvciBmL3UgaW4gaGVyIHJvb20sIHNoZSB3YXMgcmVhZGluZyBpbiBiZWQuIHNoZQ1PQlh8NTYyfFNUfEJsYW5rfHxwcmVzZW50cyBhcyBzbGlnaHRseSBmcnVzdHJhdGVkIHdpdGggaG93IGxvbmcgc2hlIGhhcyBiZWVuIGhlcmUgYW5kIHRoZQ1PQlh8NTYzfFNUfEJsYW5rfHxsaW1pdGVkIHBsYWNlbWVudCBvcHRpb25zLiB0aGlzIHdyaXRlciByZW1pbmRlZCBoZXIgdGhhdCBzaGUgaGFzIGEgcmVmZXJyYWwNT0JYfDU2NHxTVHxCbGFua3x8aW4gYXQgVmFybnVtcyBSZXN0IGhvbWUsIGFuZCBTVyBpcyB3b3JraW5nIHdpdGggdGhlbSBmb3IgYW4gaW50ZXJ2aWV3LiBwZXINT0JYfDU2NXxTVHxCbGFua3x8ZG9jdW1lbnRhdGlvbiBwdCBpcyBtZWRpY2F0aW9uIGNvbXBsaWFudCBhbmQgc2xlcHQgZm9yIDcgaG91cnMuDU9CWHw1NjZ8U1R8Qmxhbmt8fCANT0JYfDU2N3xTVHxCbGFua3x8MTEvMDE6IG1ldCB3aXRoIHB0IGZvciBmL3UgaW4gaGVyIHJvb20gd2hlcmUgc2hlIHdhcyByZWFkaW5nIGluIGJlZC4gc2hlDU9CWHw1Njh8U1R8Qmxhbmt8fHN0YXRlcyBzaGUgaGFkIGEgZ29vZCBkYXkgeWVzdGVyZGF5IGFuZCBwbGFucyBvbiBhdHRlbmRpbmcgdGhlIGdyb3Vwcw1PQlh8NTY5fFNUfEJsYW5rfHx0b2RheS4gcGVyIGRvY3VtZW50YXRpb24gc2hlIHNsZXB0IDguNSBob3Vycy4NT0JYfDU3MHxTVHxCbGFua3x8IA1PQlh8NTcxfFNUfEJsYW5rfHwxMC8zMTogbWV0IHdpdGggcHQgZm9yIGYvdSBpbiBzb3V0aCB0diByb29tLiBzaGUgaXMgcGxlYXNhbnQgYW5kDU9CWHw1NzJ8U1R8Qmxhbmt8fGNvb3BlcmF0aXZlLiBzaGUgaGFzIGEgcmVmZXJyYWwgaW4gZm9yIHZhcm51bSByZXN0IGhvbWUuIHNoZSBpcyBtZWRpY2F0aW9uDU9CWHw1NzN8U1R8Qmxhbmt8fGNvbXBsaWFudCBhbmQgcHN5Y2hpYXRyaWNhbGx5IHN0YWJsZS4NT0JYfDU3NHxTVHxCbGFua3x8IA1PQlh8NTc1fFNUfEJsYW5rfHwxMC8zMDogbWV0IHdpdGggcHQgZm9yIGYvdSBpbiBzb3V0aCB0diByb29tLiBzaGUgaXMgcGxlYXNhbnQgYW5kDU9CWHw1NzZ8U1R8Qmxhbmt8fGNvb3BlcmF0aXZlLiBzaGUgaXMgY29tcGxpYW50IHdpdGggbWVkaWNhdGlvbnMgYW5kIHBhcnRpY2lwYXRlcyBpbiBncm91cHMuDU9CWHw1Nzd8U1R8Qmxhbmt8fHNoZSBpcyBhd2FpdGluZyBwbGFjZW1lbnQgb3B0aW9ucy4NT0JYfDU3OHxTVHxCbGFua3x8IA1PQlh8NTc5fFNUfEJsYW5rfHwxMC8yOTogbWV0IHdpdGggcHQgZm9yIGYvdSBpbiBoZXIgcm9vbSB3aGVyZSBzaGUgd2FzIHJlc3RpbmcgaW4gYmVkLiBzaGUNT0JYfDU4MHxTVHxCbGFua3x8c3RhdGVzIHNoZSBpcyBmZWVsaW5nIGRlcHJlc3NlZCB0b2RheSwgd2FzIHNsaWdodGx5IHRlYXJmdWwsIGFuZCB3b3JyaWVkDU9CWHw1ODF8U1R8Qmxhbmt8fGFib3V0IG5vdCBoYXZpbmcgYSBwbGFjZSB0byBnby4gdGhpcyB3cml0ZXIgZW5jb3VyZ2VkIGhlciB0byBnbyB0byBncm91cHMNT0JYfDU4MnxTVHxCbGFua3x8YW5kIHNvY2lhbGl6ZSwgYW5kIG5vdCBpc29sYXRlIHRvIGhlciByb29tIGlmIHNoZSBpcyBmZWVsaW5nIGRlcHJlc3NlZC4gcHQNT0JYfDU4M3xTVHxCbGFua3x8dmVyYmFsaXplZCBhbiB1bmRlcnN0YW5kaW5nLg1PQlh8NTg0fFNUfEJsYW5rfHwgDU9CWHw1ODV8U1R8Qmxhbmt8fDEwLzI4OiBNZXQgd2l0aCBwdCB0aGlzIG1vcm5pbmcuIFNoZSB3YXMgbHlpbmcgaW4gYmVkLiBVc2luZyBhIHdhbGtlciBmb3INT0JYfDU4NnxTVHxCbGFua3x8YW1idWxhdGlvbiBvbiB1bml0LiBTaGUgaXMgdG9sZXJhdGluZyBtZWRpY2F0aW9ucyB3aXRob3V0IHNpZGUgZWZmZWN0cy4NT0JYfDU4N3xTVHxCbGFua3x8U2F5cyBzaGUgaXMgc2xlZXBpbmcgd2VsbC4gQXBwZXRpdGUgaGFzIGJlZW4gZ29vZC1hdHRlbmRzIG1lYWxzLiBBdHRlbmRzDU9CWHw1ODh8U1R8Qmxhbmt8fHNvbWUgZ3JvdXBzLCBidXQgc3RhdGVzIHNoZSBkb2Vzbid0IHVzdWFsbHkgYXR0ZW5kIEJBIGdyb3VwcyBzaW5jZSBzaGUgaGFzDU9CWHw1ODl8U1R8Qmxhbmt8fGJlZW4gdG8gbW9yZSB0aGFuIHR3byBvZiB0aGVtLiBBdHRlbmRzIHNvbWUgYWN0aXZpdGllcy4gU2hlIGhhcyBiZWVuIHN0YWJsZQ1PQlh8NTkwfFNUfEJsYW5rfHxvbiB1bml0LiBBd2FpdGluZyBwbGFjZW1lbnQgcGVyIFNXLg1PQlh8NTkxfFNUfEJsYW5rfHwgDU9CWHw1OTJ8U1R8Qmxhbmt8fDEwLzI3OiBNZXQgd2l0aCBwdCB0aGlzIG1vcm5pbmcgaW4gaGVyIHJvb20uIFNoZSBzdGF0ZXMgc2hlIHdhcyBkZW5pZWQgZnJvbQ1PQlh8NTkzfFNUfEJsYW5rfHxCcmlnaHQgQmVnaW5uaW5ncyBiZWNhdXNlIHRoZXkgc2FpZCBzaGUgd2FzIGEgInRyb3VibGUgbWFrZXIuIiBQdCBzdGF0ZXMNT0JYfDU5NHxTVHxCbGFua3x8c2hlIGlzIGp1c3QgdHJ5aW5nIHRvIGdldCBiYWNrIG9uIGhlciBmZWV0LiBTaGUgc3RhdGVzIHRoYXQgd2hhdCBoYXBwZW5lZA1PQlh8NTk1fFNUfEJsYW5rfHwxMCB5ZWFycyBhZ28gYXQgQnJpZGdld2F5IHdhcyAxMCB5ZWFycyBhZ28gYW5kIHNoZSBpc24ndCB0aGF0IHBlcnNvbg1PQlh8NTk2fFNUfEJsYW5rfHxhbnltb3JlLiBTaGUgaXMgYXR0ZW5kaW5nIG1lYWxzLWFwcGV0aXRlIHN0YWJsZSwgbWVkaWNhdGlvbnMgYXJlIGhlbHBpbmcsDU9CWHw1OTd8U1R8Qmxhbmt8fHNsZWVwIGhhcyBiZWVuIGdvb2QsIGJ1dCBzaGUgZGlkIGhhdmUgYSBmZXcgd2FrZXVwcyBsYXN0IG5pZ2h0LiBTaGUgaXMNT0JYfDU5OHxTVHxCbGFua3x8YW1idWxhdGluZyBvbiB1bml0IHdpdGggd2Fsa2VyLiBTVyBhc3Npc3Rpbmcgd2l0aCBwbGFjZW1lbnQuIE5vIHVwZGF0ZXMNT0JYfDU5OXxTVHxCbGFua3x8dGhpcyBtb3JuaW5nIGluIHR4IHRlYW0uDU9CWHw2MDB8U1R8Qmxhbmt8fCANT0JYfDYwMXxTVHxCbGFua3x8MTAvMjY6IE5vIGNoYW5nZXMuIE1vb2Qgc3RhYmxlLiBCcmlnaHQgYmVnaW5uaW5ncyByZWplY3RlZCBoZXIuIFNXIGlzDU9CWHw2MDJ8U1R8Qmxhbmt8fGF0dGVtcHRpbmcgdG8gZmluZCBhbHRlcm5hdGl2ZSBwbGFjZW1lbnQuDU9CWHw2MDN8U1R8Qmxhbmt8fCANT0JYfDYwNHxTVHxCbGFua3x8MTAvMjU6IHBsZWFzYW50LCBubyBtb29kIGRpc3R1cmJhbmNlIHJlcG9ydGVkLiBTbGVwdCA3LTggaG91cnMgcGVyIHN0YWZmLCA1DU9CWHw2MDV8U1R8Qmxhbmt8fGhvdXJzIHN1YmplY3RpdmUuIEVhdGluZyB3ZWxsLCB0b2xlcmF0aW5nIG1lYWxzLCBtZWQgYWRoZXJhbnQuDU9CWHw2MDZ8U1R8Qmxhbmt8fCANT0JYfDYwN3xTVHxCbGFua3x8MTAvMjQ6IE5vIGFjdXRlIGNvbmNlcm5zLiBtZWRpY2F0aW9uIGFkaGVyYW50LCB0b2xlcmF0aW5nIG1lYWxzLCBzbGVwdCB3ZWxsDU9CWHw2MDh8U1R8Qmxhbmt8fG92ZXJuaWdodC4gTm8gU0kvSEksIGludGVudCBvciBwbGFuIG9yIG1vb2QgZGlzdHVyYmFuY2UgcmVwb3J0ZWQuIFN0YWZmDU9CWHw2MDl8U1R8Qmxhbmt8fGhhdmUgbm8gYWN1dGUgY29uY2VybnMuDU9CWHw2MTB8U1R8Qmxhbmt8fCANT0JYfDYxMXxTVHxCbGFua3x8MTAvMjM6IFNsZXB0IG92ZXJuaWdodCwgdG9sZXJhdGluZyBtZWFscy4gUHQgaXJyaXRhdGVkIHRoYXQgc2hlIGRpZG4ndCBrbm93DU9CWHw2MTJ8U1R8Qmxhbmt8fHNoZSBjb3VsZCBoYXZlIHJldHVybmVkIHRvIGhlciBhcGFydG1lbnQsIGZvdW5kIG91dCBzaGUncyBldmljdGVkIHRvZGF5Lg1PQlh8NjEzfFNUfEJsYW5rfHxEaXNwbyBwbGFubmluZyB1bmRlcndheS4NT0JYfDYxNHxTVHxCbGFua3x8MTAvMjI6IERpc3BvIHBsYW5uaW5nIHVuZGVyd2F5LiBObyBhY3V0ZSBldmVudHMgb3Zlcm5pZ2h0LiBObyBzZWxmIGhhcm0gb3INT0JYfDYxNXxTVHxCbGFua3x8c3VpY2lkYWwgdGhvdWdodHMuIE1lZGljYXRpb24gYWRoZXJhbnQuDU9CWHw2MTZ8U1R8Qmxhbmt8fCANT0JYfDYxN3xTVHxCbGFua3x8MTAvMjE6IG1ldCB3aXRoIHB0IGZvciBmL3UgaW4gc291dGggbWlsaWV1LiBzaGUgaXMgc3RpbGwgZXhwcmVzc2lvbg1PQlh8NjE4fFNUfEJsYW5rfHxkaXNjb3VyYWdtZW50IGFib3V0IGJlaW5nIGRlbmllZCBieSBCcmlnaHQgQmVnaW5uaW5ncy4gU1cgaXMgY29udGFjdGluZyBCQg1PQlh8NjE5fFNUfEJsYW5rfHxhZ2FpbiB0byB0cnkgYWdhaW4gdG8gZ2V0IHRoZW0gdG8gYWNjZXB0IGhlci4gUHQgaGFzIGJlZW4gcGxlYXNhbnQgYW5kDU9CWHw2MjB8U1R8Qmxhbmt8fGNvb3BlcmF0aXZlIG9uIHRoZSB1bml0LCBhdHRlbmRzIGdyb3VwcywgYW5kIGlzIG1lZGljYXRpb24gY29tcGxpYW50Lg1PQlh8NjIxfFNUfEJsYW5rfHwgDU9CWHw2MjJ8U1R8Qmxhbmt8fDEwLzIwOiBtZXQgd2l0aCBwdCBmb3IgZi91IGluIGhlciByb29tLiBQdCB3YXMgZGlzY291cmFnZWQgdGhhdCBzaGUgd2FzDU9CWHw2MjN8U1R8Qmxhbmt8fGRlbmllZCBhdCBCcmlnaHQgQmVnaW5uaW5ncy4gU2hlIGlzIG1lZGljYXRpb24gY29tcGxpYW50LCBwbGVhc2FudCBhbmQNT0JYfDYyNHxTVHxCbGFua3x8Y29vcGVyYXRpdmUgd2l0aCBzdGFmZiBhbmQgcGVlcnMuIFNXIGFuZCB0ZWFtIHdpbGwgY29udGludWUgdG8gd29yayBvbg1PQlh8NjI1fFNUfEJsYW5rfHxwbGFjZW1lbnQgb3B0aW9ucy4NT0JYfDYyNnxTVHxCbGFua3x8IA1PQlh8NjI3fFNUfEJsYW5rfHwxMC8xOTogbWV0IHdpdGggcHQgaW4gc291dGggbWlsaWV1IGZvciBmL3UuIHB0IHN0YXRlcyBzaGUgaXMgZG9pbmcgb2ssIGJ1dA1PQlh8NjI4fFNUfEJsYW5rfHxub3Qgc2xlZXBpbmcgd2VsbCBhcyBzaGUgaGFzIGZyZXF1ZW50IGF3YWtlbmluZ3MgYW5kICJ3ZWlyZCBkcmVhbXMiLiBzaGUgaXMNT0JYfDYyOXxTVHxCbGFua3x8YXNraW5nIGZvciAibWVkaWNhdGlvbiBhZGp1c3RtZW50cyIuIHRoaXMgd3JpdGVyIHJlbWluZGVkIGhlciB3aHkgaGVyDU9CWHw2MzB8U1R8Qmxhbmt8fG1lZGljYXRpb25zIGNoYW5nZXMgd2VyZSBoYW5kbGVkIGNhcmVmdWxseSBkdWUgdG8gaGVyIGxpdmVyIGFuZCBoZWFydA1PQlh8NjMxfFNUfEJsYW5rfHxpc3N1ZXMuIFB0IHZlcmJhbGl6ZWQgYW4gdW5kZXJzdGFuZGluZy4gQWZ0ZXIgbWVkaWNhdGlvbiByZXZpZXcsIG1lbGF0b25pbg1PQlh8NjMyfFNUfEJsYW5rfHxhZGRlZC4NT0JYfDYzM3xTVHxCbGFua3x8IA1PQlh8NjM0fFNUfEJsYW5rfHwxMC8xODogbWV0IHdpdGggcHQgZm9yIGYvdSBpbiBzb3V0aCBtaWxpZXUgd2hpbGUgc2hlIHdhcyBkcmF3aW5nL2NvbG9yaW5nLg1PQlh8NjM1fFNUfEJsYW5rfHxTaGUgc2F5cyBzaGUgaXMgZG9pbmcgd2VsbCwgYnV0IGhhdmluZyAid2VpcmQgZHJlYW1zIi4gUHQgaXMNT0JYfDYzNnxTVHxCbGFua3x8cHN5Y2hpYXRyaWNhbGx5IHN0YWJsZSBhbmQgYXdhaXRpbmcgQUxGIHBsYWNlbWVudC4NT0JYfDYzN3xTVHxCbGFua3x8IA1PQlh8NjM4fFNUfEJsYW5rfHwxMC8xNzogbWV0IHdpdGggcHQgZm9yIGYvdSBpbiBicmVha2Zhc3Qgcm9vbS4gc2hlIHN0YXRlcyBzaGUgaXMgZG9pbmcgd2VsbC4NT0JYfDYzOXxTVHxCbGFua3x8c2hlIGlzIHBzeWNoaWF0cmljYWxseSBzdGFibGUgYW5kIGF3YWl0aW5nIHBsYWNlbWVudC4NT0JYfDY0MHxTVHxCbGFua3x8IA1PQlh8NjQxfFNUfEJsYW5rfHwxMC8xNjogbWV0IHdpdGggcHQgZm9yIGYvdSBpbiBzb3V0aCBtaWxpZXUuIHB0IGlzIHBzeWNoaWF0cmljYWxseSBzdGFibGUNT0JYfDY0MnxTVHxCbGFua3x8YW5kIGF3YWl0aW5nIGEgcGhvbmUgaW50ZXJ2aWV3IHdpdGggQnJpZ2h0IEJlZ2lubmluZ3MuDU9CWHw2NDN8U1R8Qmxhbmt8fCANT0JYfDY0NHxTVHxCbGFua3x8MTAvMTU6IG1ldCB3aXRoIHB0IGZvciBmL3UgaW4gc291dGggY29tbW9uIGFyZWEuIHB0IGlzIHdhaXRpbmcgdG8gaGVhciBmcm9tDU9CWHw2NDV8U1R8Qmxhbmt8fEJyaWdodCBCZWdpbm5pbmdzIGZvciBhbiBpbnRlcnZpZXcuIHNoZSBzdGF0ZXMgc2hlIGlzICJkb2luZyB3ZWxsIi4gcHQgaXMNT0JYfDY0NnxTVHxCbGFua3x8cHN5Y2hpYXRyaWNhbGx5IHN0YWJsZS4NT0JYfDY0N3xTVHxCbGFua3x8IA1PQlh8NjQ4fFNUfEJsYW5rfHwxMC8xNDogTWV0IHdpdGggcHQgYWZ0ZXIgbHVuY2guIFNoZSBpcyBhbWJ1bGF0b3J5IG9uIHVuaXQgd2l0aCB3YWxrZXIuIFNoZQ1PQlh8NjQ5fFNUfEJsYW5rfHxoYXMgYmVlbiBzdGFibGUuIEFkaGVyZW50IHdpdGggbWVkaWNhdGlvbnMuIERlbmllcyBzaWRlIGVmZmVjdHMgb2YNT0JYfDY1MHxTVHxCbGFua3x8bWVkaWNhdGlvbnMuIFR4IHRlYW0gcmVwb3J0ZWQgdGhpcyBtb3JuaW5nIEJyaWdodCBCZWdnaW5pbmdzIGlzIHJldmlld2luZw1PQlh8NjUxfFNUfEJsYW5rfHxwdHMgcGFja2V0IGFuZCBzaG91bGQgaGF2ZSBhIHJlc3BvbnNlIGJ5IHRoZSBlbmQgb2Ygd2Vlay4gV2lsbCBrZWVwIHB0DU9CWHw2NTJ8U1R8Qmxhbmt8fHVwZGF0ZWQgYXMgaW5mb3JtYXRpb24gY29tZXMgYXZhaWxhYmxlLiBQdCBkZW5pZXMgYy9vIGFuZCBpcyBhYmxlIHRvIHZvaWNlDU9CWHw2NTN8U1R8Qmxhbmt8fGNvbmNlcm5zIG9uIHVuaXQgdG8gc3RhZmYuDU9CWHw2NTR8U1R8Qmxhbmt8fCANT0JYfDY1NXxTVHxCbGFua3x8MTAvMTM6IE1ldCB3aXRoIHB0IHRoaXMgbW9ybmluZy4gU2hlIGhhcyBiZWVuIHN0YWJsZSBvbiB1bml0LiBBbWJ1bGF0aW5nDU9CWHw2NTZ8U1R8Qmxhbmt8fHdpdGggd2Fsa2VyLiBQYWNrZXQgd2FzIHN1Ym1pdHRlZCB0byBCcmlnaHQgQmVnaW5uaW5ncyBhbmQgcGVyIFNXIHN0aWxsDU9CWHw2NTd8U1R8Qmxhbmt8fGF3YWl0aW5nIHJlc3BvbnNlIGZyb20gQnJpZ2h0IEJlZ2lubmluZ3MuIFNsZWVwaW5nIGJldHRlciwgYXR0ZW5kaW5nIG1lYWxzLA1PQlh8NjU4fFNUfEJsYW5rfHxhbmQgaW50ZXJhY3Rpbmcgd2l0aCBwZWVycy4gTm8gY2hhbmdlcyB0byB0eCBwbGFuLiBQZXIgdHggdGVhbSBubyB1cGRhdGVzDU9CWHw2NTl8U1R8Qmxhbmt8fG9uIHJlc3BvbnNlcyBmcm9tIEJyaWdodCBCZWdpbm5pbmdzIHRvZGF5Lg1PQlh8NjYwfFNUfEJsYW5rfHwgDU9CWHw2NjF8U1R8Qmxhbmt8fDEwLzEyOiBNZXQgd2l0aCBwdCB0aGlzIG1vcm5pbmcgaW4gaGVyIHJvb20uIEFtYnVsYXRpbmcgb24gdW5pdCB3aXRoDU9CWHw2NjJ8U1R8Qmxhbmt8fHdhbGtlci4gU2hlIGNvbnRpbnVlcyB0byBzbGVlcCB3ZWxsLCBhdHRlbmRzIG1lYWxzLCBhbmQgc29tZSBhY3Rpdml0aWVzIG9uDU9CWHw2NjN8U1R8Qmxhbmt8fHVuaXQuIFNoZSByZWFkcyBpbiBoZXIgcm9vbSBhdCB0aW1lcy4gU2hlIGlzIGFkaGVyZW50IHdpdGggbWVkaWNhdGlvbnMuIE1ldA1PQlh8NjY0fFNUfEJsYW5rfHx3aXRoIHR4IHRlYW0gdGhpcyBtb3JuaW5nIGFuZCBhd2FpdGluZyByZXNwb25zZSBmcm9tIEJyaWdodCBCZWdpbm5pbmdzLg1PQlh8NjY1fFNUfEJsYW5rfHwgDU9CWHw2NjZ8U1R8Qmxhbmt8fDEwLzExOiBNZXQgd2l0aCBwdCB0aGlzIG1vcm5pbmcgaW4gaGVyIHJvb20uIE5vIGNoYW5nZXMuIFNoZSBoYXMgYmVlbg1PQlh8NjY3fFNUfEJsYW5rfHxzdGFibGUgb24gdW5pdC4gTWVkaWNhdGlvbnMgaGVscGluZywgZGVuaWVzIHNpZGUgZWZmZWN0cy4gU3RpbGwgdXNpbmcNT0JYfDY2OHxTVHxCbGFua3x8d2Fsa2VyIGZvciBtb2JpbGl0eS4gQXR0ZW5kcyBtZWFscy4gSW5kZXBlbmRlbnQgd2l0aCBBRExzLiBTVyBhc3Npc3RpbmcNT0JYfDY2OXxTVHxCbGFua3x8d2l0aCBBTEYgcGxhY2VtZW50LiBTdGlsbCBhd2FpdGluZyBhbnN3ZXIgZnJvbSBCcmlnaHQgQmVnaW5uaW5ncy4NT0JYfDY3MHxTVHxCbGFua3x8IA1PQlh8NjcxfFNUfEJsYW5rfHwxMC8xMDogTWV0IHdpdGggcHQgdGhpcyBtb3JuaW5nIG9uIDEgc291dGguIFNoZSBpcyByZWFkaW5nIGEgYm9vayBpbiBoZXINT0JYfDY3MnxTVHxCbGFua3x8cm9vbS4gTm8gY2hhbmdlcyBpbiBjdXJyZW50IHBsYW4gb2YgY2FyZS4gU2hlIGhhcyBiZWVuIHN0YWJsZSBvbiB1bml0Lg1PQlh8NjczfFNUfEJsYW5rfHxBd2FpdGluZyByZXNwb25zZSBmcm9tIEJyaWdodCBCZWdpbm5pbmdzIG9uIHBsYWNlbWVudC4NT0JYfDY3NHxTVHxCbGFua3x8IA1PQlh8Njc1fFNUfEJsYW5rfHwxMC8wOTogTWV0IHdpdGggcHQgdGhpcyBtb3JuaW5nIG9uIDEgc291dGggbWlsaWV1LiBObyB1cGRhdGVzIGZyb20gdHggdGVhbQ1PQlh8Njc2fFNUfEJsYW5rfHx0aGlzIG1vcm5pbmcuIFNoZSBoYXMgYmVlbiBjb2xvcmluZy4gU2hlIGlzIGFueGlvdXMgYWJvdXQgaWYgdGhlcmUgYXJlIGFueQ1PQlh8Njc3fFNUfEJsYW5rfHx1cGRhdGVzIG9uIEJyaWdodCBCZWdpbm5pbmdzLiBQdCBpbmZvcm1lZCB0aGVyZSBhcmUgbm8gdXBkYXRlcyBmcm9tIHR4IHRlYW0NT0JYfDY3OHxTVHxCbGFua3x8dG9kYXksIGJ1dCB3ZSB3aWxsIGtlZXAgaGVyIHBvc3RlZC4gU2hlIGlzIGFtYnVsYXRvcnkgb24gdW5pdCB3aXRoIHdhbGtlci4NT0JYfDY3OXxTVHxCbGFua3x8TWVkaWNhdGlvbnMgYXJlIGhlbHBpbmcsIGRlbmllcyBzaWRlIGVmZmVjdHMuDU9CWHw2ODB8U1R8Qmxhbmt8fCANT0JYfDY4MXxTVHxCbGFua3x8MTAvMDg6IE1ldCB3aXRoIHB0IHRoaXMgbW9ybmluZyBpbiBoZXIgcm9vbS4gU2hlIHN0YXRlZCBTVyBzdWJtaXR0ZWQgYW4NT0JYfDY4MnxTVHxCbGFua3x8YXBwbGljYXRpb24gZm9yIEJyaWdodCBCZWdpbm5pbmdzLiBTdGlsbCBhd2FpdGluZyByZXNwb25zZSBmcm9tIHNvY2lhbCB3b3JrDU9CWHw2ODN8U1R8Qmxhbmt8fG9uIEFMRi4gU2hlIGlzIHVzaW5nIHdhbGtlciBmb3IgYXNzaXN0YW5jZS4gSW50ZXJhY3Rpbmcgd2l0aCBwZWVycy4gU2hlIGlzDU9CWHw2ODR8U1R8Qmxhbmt8fGFkaGVyZW50IHdpdGggbWVkaWNhdGlvbnMuIFRvbGVyYXRpbmcgaW5jcmVhc2UgaW4gc2Vyb3F1ZWwgd2l0aG91dCBzaWRlDU9CWHw2ODV8U1R8Qmxhbmt8fGVmZmVjdHMuDU9CWHw2ODZ8U1R8Qmxhbmt8fCANT0JYfDY4N3xTVHxCbGFua3x8MTAvMDc6IG1ldCB3aXRoIHB0IGZvciBmL3UgaW4gc291dGggY29tbW9uIGFyZWEuIHNoZSBzdGF0ZWQgdGhhdCBzaGUgaGFkDU9CWHw2ODh8U1R8Qmxhbmt8fGxvc3QgaGVyIHRlbXBlciB3aXRoIGFub3RoZXIgcHQgdGhhdCB3YXMgYmVpbmcgInJ1ZGUiIHRvIGhlciwgYnV0IHRoYXQgc2hlDU9CWHw2ODl8U1R8Qmxhbmt8fGZlbHQgYmFkIG5vdywgYW5kIHNoZSB3YXMgbWFraW5nIGFuIGVmZm9ydCB0byBiZSBwbGVhc2FudC4gc2hlIGlzIGNvbXBsaWFudA1PQlh8NjkwfFNUfEJsYW5rfHx3aXRoIG1lZGljYXRpb25zIGFuZCBhd2FpdGluZyBwbGFjZW1lbnQgb3B0aW9ucy4NT0JYfDY5MXxTVHxCbGFua3x8IA1PQlh8NjkyfFNUfEJsYW5rfHwxMC8wNjogbWV0IHdpdGggcHQgZm9yIGYvdSBpbiBzb3V0aCBjb21tb24gYXJlYSB3aGVyZSBzaGUgd2FzIGNvbG9yaW5nIGENT0JYfDY5M3xTVHxCbGFua3x8cGljdHVyZS4gc2hlIHN0YXRlcyBzaGUgaXMgZG9pbmcgb2ssIGFuZCB3YXMgdGhhbmtmdWwgaGVyIHNlcm9xdWVsIGhhZCBiZWVuDU9CWHw2OTR8U1R8Qmxhbmt8fGluY3JlYXNlZC4gc2hlIHZlcmJhbGl6ZWQgYW4gdW5kZXJzdGFuZGluZyB0aGF0IHNoZSBoYXMgYSByZWZlcnJhbCBpbiBmb3INT0JYfDY5NXxTVHxCbGFua3x8YnJpZ2h0IGJlZ2lubmluZ3MgYW5kIHRoYXQgdGhlIHRlYW0gaXMgd2FpdGluZyBvbiB0aGVpciByZXNwb25zZS4gU2hlIGlzDU9CWHw2OTZ8U1R8Qmxhbmt8fHBsZWFzYW50IGFuZCBjb29wZXJhdGl2ZSwgYW5kIHZlcnkgaG9wZWZ1bCB0byBmaW5kIGEgcGxhY2UgdG8gYWNjZXB0IGhlci4NT0JYfDY5N3xTVHxCbGFua3x8IA1PQlh8Njk4fFNUfEJsYW5rfHwxMC8wNTogbWV0IHdpdGggcHQgZm9yIGYvdSBpbiBzb3V0aCBjb21tb24gYXJlYS4gc2hlIGhhcyBjb21wbGFpbnRzIG9mIG5vdA1PQlh8Njk5fFNUfEJsYW5rfHxzbGVlcGluZyB3ZWxsIGFuZCBpcyBhc2tpbmcgZm9yIGEgbWVkaWNhdGlvbiBhZGp1c3RtZW50LiBwdCBpcyBhd2FpdGluZw1PQlh8NzAwfFNUfEJsYW5rfHxwbGFjZW1lbnQgb3B0aW9ucy4gU1cgaW52b2x2ZWQgaW4gY2FzZS4NT0JYfDcwMXxTVHxCbGFua3x8IA1PQlh8NzAyfFNUfEJsYW5rfHwxMC8wNDogbWV0IHdpdGggcHQgZm9yIGYvdSBpbiBzb3V0aCBicmVha2Zhc3QgYXJlYS4gc2hlIHN0YXRlcyBzaGUgaXMgZG9pbmcNT0JYfDcwM3xTVHxCbGFua3x8b2ssIGJ1dCB0aGF0IHNoZSBoYWQgbmlnaHRtYXJlcyBsYXN0IG5pZ2h0LiBzaGUgc3RhdGVzIHNoZSBpcyB3aWxsaW5nICJ0bw1PQlh8NzA0fFNUfEJsYW5rfHxnbyBhbnl3aGVyZSIgaW4gcmVnYXJkcyB0byBhbiBBTEYsIHNoZSBpcyBvcGVuIHRvIHBsYWNlcyBpbiBHZW9yZ2lhIGFzIHNoZQ1PQlh8NzA1fFNUfEJsYW5rfHxoYXMgYSBicm90aGVyIHRoZXJlLg1PQlh8NzA2fFNUfEJsYW5rfHwgDU9CWHw3MDd8U1R8Qmxhbmt8fDEwLzAzOiBtZXQgd2l0aCBwdCBmb3IgZi91IGluIHNvdXRoIGNvbW1vbiBhcmVhLiBzaGUgc3RhdGVzIHNoZSBpcw1PQlh8NzA4fFNUfEJsYW5rfHwiYWdncmF2YXRlZCwgbG90cyBvZiBodXJyeSB1cCBhbmQgd2FpdCIuIHB0IGlzIHBzeWNoaWF0cmljYWxseSBzdGFibGUgYW5kDU9CWHw3MDl8U1R8Qmxhbmt8fGF3YWl0aW5nIHBsYWNlbWVudC4NT0JYfDcxMHxTVHxCbGFua3x8IA1PQlh8NzExfFNUfEJsYW5rfHwxMC8wMjogbWV0IHdpdGggcHQgZm9yIGYvdSBpbiBoZXIgcm9vbS4gc2hlIGlzIGJlaW5nIHRyYW5zZmVycmVkIHRvIHNvdXRoDU9CWHw3MTJ8U1R8Qmxhbmt8fHRvZGF5LCBhbmQgdGhpcyB3cml0ZXIgZW5jb3VyYWdlZCBoZXIgdG8ga2VlcCBnb2luZyB0byBncm91cHMgYW5kDU9CWHw3MTN8U1R8Qmxhbmt8fHBhcnRpY2lwYXRpbmcgaW4gaGVyIGNhcmUuIGF3YWl0aW5nIHBsYWNlbWVudC4NT0JYfDcxNHxTVHxCbGFua3x8IA1PQlh8NzE1fFNUfEJsYW5rfHwxMC8wMTogbWV0IHdpdGggcHQgZm9yIGYvdSBpbiBub3J0aCBjb21tb24gYXJlYS4gc2hlIHN0YXRlcyBzaGUgaXMgZmVlbGluZw1PQlh8NzE2fFNUfEJsYW5rfHwiZ29vZCIsIGFuZCBpcyBlYXRpbmcgYW5kIHNsZWVwaW5nIHdlbGwuIHNoZSBjb250aW51ZXMgdG8gYXNrIHRvIG1vdmUgdG8NT0JYfDcxN3xTVHxCbGFua3x8c291dGguIFRoaXMgd3JpdGVyIGVuY291cmFnZWQgaGVyIHRvIHRyeSBhbmQgcmVhY2ggb3V0IHRvIGhlciBicm90aGVyIGluDU9CWHw3MTh8U1R8Qmxhbmt8fEdlb3JnaWEsIG9yIGhlciBzb24uIFNXIHdvcmtpbmcgb24gcGxhY2VtZW50Lg1PQlh8NzE5fFNUfEJsYW5rfHwgDU9CWHw3MjB8U1R8Qmxhbmt8fDkvMzA6IFB0IGZvY3VzZWQgb24gd2FudGluZyB0byBtb3ZlIHRvIHNvdXRoLiBTaGUgaXMgdXNpbmcgd2Fsa2VyIGZvcg1PQlh8NzIxfFNUfEJsYW5rfHxtb2JpbGl0eS4gU2hlIGlzIHRyeWluZyB0byBoZWxwIHJvb21tYXRlIGVhdCBkdXJpbmcgbWVhbHMuIFNoZSBpcyBub3cNT0JYfDcyMnxTVHxCbGFua3x8d2FudGluZyB0byBrbm93IGlmIFNXIGNhbiBoZWxwIHdpdGggQUxGcyBpbiBHZW9yZ2lhIGFuZCBzdGF0aW5nIGhlciBicm90aGVyDU9CWHw3MjN8U1R8Qmxhbmt8fGxpdmVzIGluIEdBLiBSZWNvbW1lbmRlZCB0byBwdCBpdCBtYXkgYmUgYmV0dGVyIGlmIHNoZSByZWFjaGVzIG91dCB0byBoZXINT0JYfDcyNHxTVHxCbGFua3x8c2libGluZ3MgaW4gdGhlc2UgbG9jYXRpb25zLiBTVyBzdGlsbCB0cnlpbmcgdG8gbG9jYXRlIHBsYWNlbWVudC4gVGhlcmUgaGFzDU9CWHw3MjV8U1R8Qmxhbmt8fGJlZW4gbm8gdXBkYXRlcyBvbiBzdGF0dXMgaW4gdHggdGVhbS4gUHQgc3RpbGwgYXdhaXRpbmcgcGxhY2VtZW50IGFuZCBpc24ndA1PQlh8NzI2fFNUfEJsYW5rfHxwcm9hY3RpdmUgaW4gcmVhY2hpbmcgb3V0IHRvIGZhbWlseSBmb3IgYXNzaXN0YW5jZS4NT0JYfDcyN3xTVHxCbGFua3x8IA1PQlh8NzI4fFNUfEJsYW5rfHw5LzI5OiBNZXQgd2l0aCBwdCB0aGlzIG1vcm5pbmcgaW4gaGVyIHJvb20uIFNoZSBpcyBjYWxtIGFuZCBwbGVhc2FudC4gU2hlDU9CWHw3Mjl8U1R8Qmxhbmt8fGlzIGF0dGVuZGluZyBtZWFscywgYXR0ZW5kaW5nIGdyb3VwcywgYW5kIGFtYnVsYXRpbmcgb24gdW5pdCB3aXRoIHdhbGtlci4NT0JYfDczMHxTVHxCbGFua3x8U2hlIGlzIGZydXN0cmF0ZWQgd2l0aCByb29tbWF0ZSBhdCB0aW1lcy4gUHQgd2FudHMgdG8gbW92ZSB0byBzb3V0aC4gU1cNT0JYfDczMXxTVHxCbGFua3x8d29ya2luZyBvbiBwbGFjZW1lbnQuIE5vIHVwZGF0ZXMgZnJvbSB0eCB0ZWFtIGF0IHRoaXMgdGltZS4NT0JYfDczMnxTVHxCbGFua3x8IA1PQlh8NzMzfFNUfEJsYW5rfHw5LzI4OiBNZXQgd2l0aCBwdCB0aGlzIG1vcm5pbmcgaW4gaGVyIHJvb20uIFNoZSBoYXMgY29tcGxldGVkIGhlcg1PQlh8NzM0fFNUfEJsYW5rfHxicmVha2Zhc3QuIEFtYnVsYXRpbmcgb24gdW5pdCB3aXRoIHdhbGtlci4gTW9vZCBpcyBldXRoeW1pYy4gSG9waW5nIG90IGhlYXINT0JYfDczNXxTVHxCbGFua3x8Z29vZCBuZXdzIHRvZGF5IGFib3V0IHBsYWNlbWVudC9yZXNvdXJjZXMgb3IgYnJpZ2h0IGJlZ2lubmluZ3MuIE5vIHVwZGF0ZXMNT0JYfDczNnxTVHxCbGFua3x8ZnJvbSBUeCB0ZWFtIHRoaXMgbW9ybmluZy4NT0JYfDczN3xTVHxCbGFua3x8IA1PQlh8NzM4fFNUfEJsYW5rfHw5LzI3OiBNZXQgd2l0aCBwdCB0aGlzIGFmdGVybm9vbiBpbiBoZXIgcm9vbS4gU2hlIHNsZXB0IHdlbGwgbGFzdCBuaWdodC4NT0JYfDczOXxTVHxCbGFua3x8U3RhdGVzIHNoZSBpcyAiaGFuZ2luZyBpbiB0aGVyZSIgYW5kIHRyeWluZyB0byBzdGF5IGNhbG0uIFNoZSB3YW50cyB0byBtb3ZlDU9CWHw3NDB8U1R8Qmxhbmt8fHRvIHNvdXRoLiBTaGUgaGFzIGJlZW4gYXR0ZW5kaW5nIGdyb3Vwcy4gQXBwZXRpdGUgaXMgc3RhYmxlLiBNb29kIGlzIHN0YWJsZQ1PQlh8NzQxfFNUfEJsYW5rfHx0b2RheSBhbmQgZXV0aHltaWMuIEFueGlvdXMgYWJvdXQgZmluZGluZyBwbGFjZSB0byBzdGF5Lg1PQlh8NzQyfFNUfEJsYW5rfHwgDU9CWHw3NDN8U1R8Qmxhbmt8fDkvMjY6IE1ldCB3aXRoIHB0IGluIGhlciByb29tIHRoaXMgbW9ybmluZy4gU2hlIHdhcyB2ZXJ5IHRlYXJmdWwuIFNheXMgc2hlDU9CWHw3NDR8U1R8Qmxhbmt8fGlzIGdldHRpbmcgYW54aW91cyBvbiBub3J0aC4gV2FudHMgdG8gbW92ZSB0byBzb3V0aC4gQ29uY2VybmVkIHNoZSB3aWxsIG5vdA1PQlh8NzQ1fFNUfEJsYW5rfHxoYXZlIGEgcGxhY2UgdG8gbGl2ZS4gUGVyIHN0YWZmIHNoZSBoYXMgYmVlbiBhdHRlbmRpbmcgZ3JvdXBzLCBhZGhlcmFudA1PQlh8NzQ2fFNUfEJsYW5rfHx3aXRoIG1lZGljYXRpb25zLCBhcHBldGl0ZSBoYXMgYmVlbiBzdGFibGUsIGFuZCBzaGUgaXMgc2xlZXBpbmcgd2VsbC4gU2hlDU9CWHw3NDd8U1R8Qmxhbmt8fHVzZXMgYSB3YWxrZXIgYXQgdGltZXMgZm9yIG1vYmlsaXR5IG9uIHVuaXQuIFNoZSBmZWVscyBkb3duIHRvZGF5LCBidXQgaGFzDU9CWHw3NDh8U1R8Qmxhbmt8fGJlZW4gZG9pbmcgc29tZSByZWFkaW5nIHRvIGtlZXAgaGVyIG1pbmQgb2ZmIHRoZSBzdHJlc3MuIFNoZSBtaXNzZXMgaGVyIHNvbg1PQlh8NzQ5fFNUfEJsYW5rfHx3aG9tIHNoZSBjYW5ub3QgZ2V0IGhvbGQgb2YgYW55bW9yZS4gU2hlIHN0YXRlcyBoZSB3YXMgaW4gdGhlIHByb2Nlc3Mgb2YNT0JYfDc1MHxTVHxCbGFua3x8bW92aW5nIGFuZCBzaGUgaGFzIGxvc3QgY29udGFjdCB3aXRoIGhpbS4NT0JYfDc1MXxTVHxCbGFua3x8IA1PQlh8NzUyfFNUfEJsYW5rfHw5LzI1OiBNZXQgd2l0aCBwdCB0aGlzIGFmdGVybm9vbi4gU2hlIGhhZCBqdXN0IGZpbmlzaGVkIGVhdGluZyBsdW5jaC4gVXNpbmcNT0JYfDc1M3xTVHxCbGFua3x8d2Fsa2VyIHRvZGF5IGZvciBtb2JpbGl0eS4gU2hlIGlzIHNpdHRpbmcgaW4gaGVyIHJvb20gaW4gaGVyIGJlZCByZWFkaW5nLg1PQlh8NzU0fFNUfEJsYW5rfHxDb25jZXJuZWQgYWJvdXQgcGxhY2VtZW50LiBTVyBjaGVja2luZyBpbnRvIEJyaWdodCBCZWdpbm5pbmdzLg1PQlh8NzU1fFNUfEJsYW5rfHwgDU9CWHw3NTZ8U1R8Qmxhbmt8fDkvMjQ6IE1ldCB3aXRoIHB0IHRoaXMgbW9ybmluZyBvbiAxIG5vcnRoLiBTaGUgd2FzIHZlcnkgYW54aW91cy4gUmVwb3J0cw1PQlh8NzU3fFNUfEJsYW5rfHx0aGUgbm9ydGggdW5pdCBnZXRzIGhlciBhbnhpZXR5IHVwLiBTaGUgaXMgcmVxdWVzdGluZyB0byBtb3ZlIHRvIHNvdXRoLiBTaGUNT0JYfDc1OHxTVHxCbGFua3x8aGFzIGJlZW4gYXR0ZW5kaW5nIGdyb3VwLiBTdGFmZiByZXBvcnQgc2hlIGhhcyBiZWVuIGFwcHJvcHJpYXRlLCBhZGhlcmFudA1PQlh8NzU5fFNUfEJsYW5rfHx3aXRoIG1lZGljYXRpb25zLCBhbmQgYWN0aXZlbHkgcGFydGljaXBhdGluZyB0aGlzIGFkbWlzc2lvbi4gUHQgd2FzIGRlbmllZA1PQlh8NzYwfFNUfEJsYW5rfHxhdCBCV1kuIFNXIHRyeWluZyB0byBnZXQgcHQgaW50byBCcmlnaHQgQmVnaW5uaW5ncy4gQXdhaXRpbmcgcmVzcG9uc2UuDU9CWHw3NjF8U1R8Qmxhbmt8fCANT0JYfDc2MnxTVHxCbGFua3x8OS8yMzogbWV0IHdpdGggcHQgZm9yIGYvdSBpbiBub3J0aCBjb21tb24gYXJlYSB3aGVyZSBzaGUgd2FzIGFib3V0IHRvDU9CWHw3NjN8U1R8Qmxhbmt8fHBhcnRpY2lwYXRlIGluIGEgZ3JvdXAgYWN0aXZpdHkuIFNoZSBzdGF0ZXMgc2hlIGlzIGRvaW5nIHdlbGwsIGFuZCBpcw1PQlh8NzY0fFNUfEJsYW5rfHxlYXRpbmcgYW5kIHNsZWVwaW5nLiBQZXIgU1csIHJlZmVycmFscyBhcmUgYmVpbmcgbG9va2VkIGF0IGZvciBCcmlnaHQNT0JYfDc2NXxTVHxCbGFua3x8QmVnaW5uaW5ncyBhbmQgQ3Jlc3R2aWV3IG1hbm9yLCBhcyBDT1BFIGlzIGZ1bGwuDU9CWHw3NjZ8U1R8Qmxhbmt8fCANT0JYfDc2N3xTVHxCbGFua3x8OS8yMjogbWV0IHdpdGggcHQgZm9yIGYvdSBpbiBoZXIgcm9vbS4gc2hlIHN0YXRlcyBzaGUgaXMgZG9pbmcgd2VsbCwgYW5kIGlzDU9CWHw3Njh8U1R8Qmxhbmt8fGhvcGVmdWwgZm9yIHRoZSBDT1BFIHJlZmVycmFsLiBzaGUgaXMgY29tcGxpYW50IHdpdGggbWVkaWNhdGlvbnMgd2l0aCBubw1PQlh8NzY5fFNUfEJsYW5rfHxub3RhYmxlIHNpZGUgZWZmZWN0cy4NT0JYfDc3MHxTVHxCbGFua3x8IA1PQlh8NzcxfFNUfEJsYW5rfHw5LzIxOiBtZXQgd2l0aCBwdCBpbiBoZXIgcm9vbSBmb3IgZi91LiBzaGUgc3RhdGVzIHNoZSBjb3VsZG4ndCBzbGVlcCBsYXN0DU9CWHw3NzJ8U1R8Qmxhbmt8fG5pZ2h0LiBzaGUgaXMgc2l0dGluZyB1cCBpbiBiZWQgcmVhZGluZyBhIGJvb2suIHNoZSBpcyBob3BlZnVsIGZvciB0aGUgQ09QRQ1PQlh8NzczfFNUfEJsYW5rfHxyZWZlcnJhbC4gc2hlIGRlbmllcyBjdXJyZW50IFNJL0hJLg1PQlh8Nzc0fFNUfEJsYW5rfHwgDU9CWHw3NzV8U1R8Qmxhbmt8fDkvMjA6IG1ldCB3aXRoIHB0IGZvciBmL3UgaW4gaGVyIHJvb20sIHNoZSBzdGF0ZXMgc2hlIGhhZCB3ZWlyZCBkcmVhbXMgYW5kDU9CWHw3NzZ8U1R8Qmxhbmt8fGlzIHdvcnJpZWQgYWJvdXQgd2hlcmUgc2hlIHdpbGwgZ28gaWYgQ09QRSB3b250IHRha2UgaGVyLiBTaGUgZGVuaWVzIFNJL0hJDU9CWHw3Nzd8U1R8Qmxhbmt8fGFuZCBzdGF0ZXMgaGVyIG1lZGljYXRpb25zIHNlZW0gdG8gYmUgd29ya2luZyBmb3IgaGVyLg1PQlh8Nzc4fFNUfEJsYW5rfHwgDU9CWHw3Nzl8U1R8Qmxhbmt8fDkvMTk6IG1ldCB3aXRoIHB0IGluIGhlciByb29tIGZvciBmL3UuIHNoZSBzdGF0ZXMgc2hlIGZlZWxzIG1vcmUgZGVwcmVzc2VkDU9CWHw3ODB8U1R8Qmxhbmt8fHRvZGF5IGJlY2F1c2Ugc2hlIGJlZW4gaGVyZSBhd2hpbGUsIGFuZCBzaGUgd2FudHMgdG8gbW92ZSB0byBzb3V0aC4gc2hlDU9CWHw3ODF8U1R8Qmxhbmt8fHNheXMgc2hlIHNsZXB0IG9rIGJ1dCBoYWQgd2VpcmQgZHJlYW1zLCBhbmQgc2hlIGRpZCBlYXQgYnJlYWtmYXN0LiBzaGUNT0JYfDc4MnxTVHxCbGFua3x8ZGVuaWVzIFNJL0hJIGN1cnJlbnRseS4NT0JYfDc4M3xTVHxCbGFua3x8IA1PQlh8Nzg0fFNUfEJsYW5rfHw5LzE4OiBtZXQgd2l0aCBwdCBpbiBoZXIgcm9vbSBmb3IgZi91LiBzaGUgaXMgd29ycmllZCBhYm91dCB3aGVyZSBzaGUgY2FuDU9CWHw3ODV8U1R8Qmxhbmt8fGdvLiAgdGhpcyB3cml0ZXIgdG9sZCBoZXIgdGhhdCBTVyBpcyBwdXR0aW5nIGluIGEgcmVmZXJyYWwgZm9yIENPUEUsIGFuZA1PQlh8Nzg2fFNUfEJsYW5rfHxzaGUgc3RhdGVzIHNoZSBpcyBleGNpdGVkIGFib3V0IHRoYXQuIFNoZSBzdGF0ZXMgaGVyIG1vb2QgaXMgZ29vZCwgYW5kIHNoZQ1PQlh8Nzg3fFNUfEJsYW5rfHxpcyBlYXRpbmcgYW5kIHNsZWVwaW5nIG9rLg1PQlh8Nzg4fFNUfEJsYW5rfHwgDU9CWHw3ODl8U1R8Qmxhbmt8fDkvMTc6IG1ldCB3aXRoIHB0IG9uIG5vcnRoIGluIGhlciByb29tIGZvciBmL3UuIHNoZSBzdGF0ZXMgaGVyIG1vb2QgaXMNT0JYfDc5MHxTVHxCbGFua3x8Z29vZCwgYnV0IHNoZSBpcyB3b3JyaWVkIGFib3V0IHBsYWNlbWVudCBpc3N1ZXMuIFNoZSB3YXMgZGVuaWVkIGJ5DU9CWHw3OTF8U1R8Qmxhbmt8fGJyaWRnZXdheS4gU1cgaXMgaW52b2x2ZWQgaW4gY2FzZSwgYW5kIGNvbnNpZGVyaW5nIENPUEUgY2VudGVyIGludGVydmlldy4NT0JYfDc5MnxTVHxCbGFua3x8cHQgZGVuaWVzIGN1cnJlbnQgU0kvSEkuDU9CWHw3OTN8U1R8Qmxhbmt8fCANT0JYfDc5NHxTVHxCbGFua3x8OS8xNjogTWV0IHdpdGggcHQgb24gMSBub3J0aCBpbiBoZXIgcm9vbS4gTW9vZCBpcyBldXRoeW1pYy4gU2hlIGlzIGluIGdvb2QNT0JYfDc5NXxTVHxCbGFua3x8c3Bpcml0cyB3aXRoIGhlciByb29tbWF0ZSB0b2RheS4gQWRoZXJhbnQgd2l0aCBoZXIgbWVkcywgbm8gc2lkZSBlZmZlY3RzLg1PQlh8Nzk2fFNUfEJsYW5rfHxTdGlsbCBhd2FpdGluZyBCV1kgaW50ZXJ2aWV3IGFuc3dlci4gQW1idWxhdG9yeSBvbiB1bml0IHdpdGggd2Fsa2VyLg1PQlh8Nzk3fFNUfEJsYW5rfHxJbmRwZW5kZW50IHdpdGggQURMcyBhbmQgYWJsZSB0byB2b2ljZSBjb25jZXJucyB0byBzdGFmZi4NT0JYfDc5OHxTVHxCbGFua3x8IA1PQlh8Nzk5fFNUfEJsYW5rfHw5LzE1OiBNZXQgd2l0aCBwdCB0aGlzIG1vcm5pbmcuIFNoZSBpcyBhbGwgYW54aW91cywgc3RhdGVzIHRoZSBldmVudHMgb24NT0JYfDgwMHxTVHxCbGFua3x8bm9ydGggYXJlIGNhdXNpbmcgaGVyIHRvIGJlY29tZSB0b28gYW54aW91cy4gRW5jb3VyYWdlZCB0byB1c2UgY29waW5nDU9CWHw4MDF8U1R8Qmxhbmt8fHNraWxscywgY29udGludWUgYXR0ZW5kaW5nIGdyb3VwcywgYW5kIGlmIHNoZSBuZWVkcyBtZWRpY2F0aW9ucyB0aGVyZSBhcmUNT0JYfDgwMnxTVHxCbGFua3x8c29tZSBvbiBoZXIgTUFSLiBTaGUgY2FuIGFsc28gcmVhY2ggb3V0IHRvIGEgc3RhZmYgbWVtYmVyLiBTaGUgaXMgc3RheWluZw1PQlh8ODAzfFNUfEJsYW5rfHxpbiBoZXIgcm9vbSB0b2RheSB3aXRoIGhlciByb29tbWF0ZSB3cml0aW5nLg1PQlh8ODA0fFNUfEJsYW5rfHwgDU9CWHw4MDV8U1R8Qmxhbmt8fDkvMTQ6IFB0IHNlZW4gaW4gZi91IHRoaXMgbW9ybmluZy4gU2hlIGlzIG9ic2VydmVkIGF0dGVuZGluZyBncm91cHMuIFNoZQ1PQlh8ODA2fFNUfEJsYW5rfHxjb250aW51ZXMgdG8gYXNrIGZvciBhdGl2YW4gdG9kYXkuIFB0IGVuY291cmFnZWQgdG8gdXNlIGNvcGluZyBtZWNoYW5pc21zLg1PQlh8ODA3fFNUfEJsYW5rfHxIb3BpbmcgdG8gaGVhciBmcm9tIGJXWSB0b2RheS4gU2hlIGlzIGFtYnVsYXRpbmcgd2VsbCwgcHVzaGluZyBhIHdhbGtlcg1PQlh8ODA4fFNUfEJsYW5rfHxhY3Jvc3MgdGhlIG1pbGlldS4gU2hlIGlzIGZyaWVuZHMgd2l0aCBoZXIgcm9vbW1hdGUgbm93LCB3aG8gc2hlIHdhcyBhbmdyeQ1PQlh8ODA5fFNUfEJsYW5rfHx3aXRoIG92ZXIgdGhlIHdlZWtlbmQuDU9CWHw4MTB8U1R8Qmxhbmt8fCANT0JYfDgxMXxTVHxCbGFua3x8OS8xMzogQ29udGludWVzIHRvIHdhbnQgYXRpdmFuIGZvciBoZXIgYW54aWV0eS4gU2F5cyBpdCB3b3JrcyB0aGUgYmVzdCBhbmQNT0JYfDgxMnxTVHxCbGFua3x8d2hlbiBlZHVjYXRlZCBwYXRpZW50IG9uIG90aGVyIG1lZHMgdGhhdCBzaGUgY2FuIHV0aWxpemUgb3IgdXNlIGhlciBjb3BpbmcNT0JYfDgxM3xTVHxCbGFua3x8bWVjaGFuaXNtcy4gU2hlIHRoZW4gc3RhdGVzLCAiV2VsbCB3aGVuIEkgZ2V0IG91dCBvZiBoZXJlIEknbSBqdXN0IGdvbm5hDU9CWHw4MTR8U1R8Qmxhbmt8fGhhdmUgdGhlIG91dHBhdGllbnQgcHJvdmlkZXIgcHV0IG1lIGJhY2sgb24gaXQuIiBTaGUgaXMgYXdhaXRpbmcgQldZDU9CWHw4MTV8U1R8Qmxhbmt8fHJlc3BvbnNlIGZvciBCV1kgaG91c2luZyBwcm9ncmFtLg1PQlh8ODE2fFNUfEJsYW5rfHwgDU9CWHw4MTd8U1R8Qmxhbmt8fDkvMTI6IFB0IHNlZW4gaW4gZi91IHRoaXMgbW9ybmluZy4gc2hlIHdhcyB2ZXJ5IGFueGlvdXMgYW5kIGlycml0YWJsZS4gU2hlDU9CWHw4MTh8U1R8Qmxhbmt8fHN0YXRlcyBzaGUgaXMgbWFkIGF0IGhlciByb29tbWF0ZS4gUHQgZW5jb3VyYWdlZCB0byB3b3JrIG9uIGNvcGluZyBza2lsbHMNT0JYfDgxOXxTVHxCbGFua3x8dG8gZGVhbCB3aXRoIGhlciBhbmdlciBhbmQgYW54aWV0eS4gU2hlIGRpZCB3ZWxsIGF0dGVuZGluZyBncm91cCB5ZXN0ZXJkYXkNT0JYfDgyMHxTVHxCbGFua3x8YW5kIHJlY29tbWVuZGVkIHRvIHRyeSBhbmQgYXR0ZW5kIHRvZGF5LiBQdCBlbmNvdXJhZ2VkIHRvIHNpdCBvdXQgaW4gbWlsaWV1DU9CWHw4MjF8U1R8Qmxhbmt8fGlmIHJvb21tYXRlIHVwc2V0cyBoZXIuIFNoZSBjYW4gcmVhZCB0aGUgcGFwZXIsIGpvdXJuYWwsIGRyYXcsIG9yIGludGVyYWN0DU9CWHw4MjJ8U1R8Qmxhbmt8fHdpdGggb3RoZXIgcGVlcnMuIFNoZSBpcyBhbHNvIGFueGlvdXMgYWJvdXQgYW4gYW5zd2VyIGZyb20gQldZLg1PQlh8ODIzfFNUfEJsYW5rfHwgDU9CWHw4MjR8U1R8Qmxhbmt8fDkvMTE6IFB0IHNlZW4gaW4gZi91IHRoaXMgbW9ybmluZy4gU2hlIGp1c3QgY29tcGxldGVkIGhlciBCV1kgaW50ZXJ2aWV3Lg1PQlh8ODI1fFNUfEJsYW5rfHxTaGUgaG9wZXMgdG8gaGVhciBiYWNrIHNvb24gYWJvdXQgQldZIGhvdXNpbmcuIFNoZSBpcyB1c2luZyBhIHdhbGtlcg1PQlh8ODI2fFNUfEJsYW5rfHxhbHRob3VnaCBzaGUgc2VlbXMgdG8gYmUgYW1idWxhdGluZyB2ZXJ5IHdlbGwuIFByaW9yIHRvIGRpc2NoYXJnZSB3aWxsDU9CWHw4Mjd8U1R8Qmxhbmt8fG9yZGVyIFBUL09UIGV2YWwuIFNoZSBpcyBhdHRlbmRpbmcgZ3JvdXAgdG9kYXkuIEZlZWxzIGJldHRlciB0b2RheSwgc3RhdGVzDU9CWHw4Mjh8U1R8Qmxhbmt8fHNoZSBpcyBnb2luZyB0byBncm91cHMgbW9yZSBzbyBzaGUgaXNuJ3QgaW4gaGVyIHJvb20gd2l0aCAibmVnYXRpdmUgbmFuY3kiDU9CWHw4Mjl8U1R8Qmxhbmt8fHJvb21tYXRlLCBwZXIgcHQuIE1vb2QgaXMgbW9yZSBldXRoeW1pYyB0b2RheS4NT0JYfDgzMHxTVHxCbGFua3x8IA1PQlh8ODMxfFNUfEJsYW5rfHw5LzEwOiBQdCBzZWVuIGluIGYvdSBpbiBoZXIgcm9vbSB0aGlzIG1vcm5pbmcuIFNoZSB1c2VzIGEgd2Fsa2VyIGZvcg1PQlh8ODMyfFNUfEJsYW5rfHxtb2JpbGl0eS4gU3RhdGVzIHNoZSB1c2VzIGEgY2FuZSBhdCBob21lLiBTaGUgaXMgaXJyaXRhYmxlIHRoaXMgbW9ybmluZw1PQlh8ODMzfFNUfEJsYW5rfHxiZWNhdXNlIHNoZSBzdGF0ZXMgaGVyIHJvb21tYXRlICJ3b250IHNuYXAgb3V0IG9mIGl0LiIgU2hlcnJpZSBzdGF0ZXMsICJJDU9CWHw4MzR8U1R8Qmxhbmt8fGhhdmUgbm8gaHVzYmFuZCBhbmQgSSBoYXZlIG5vIHBsYWNlIHRvIGxpdmUsIHNoZSBqdXN0IG5lZWRzIHRvIHNuYXAgb3V0IG9mDU9CWHw4MzV8U1R8Qmxhbmt8fGl0IHNoZSdzIG1ha2luZyBtZSBkZXByZXNzZWQuIiBTaGUgc3RhdGVzIHNoZSBzbGVwdCBvayBsYXN0IG5pZ2h0LiBTaGUgaXMNT0JYfDgzNnxTVHxCbGFua3x8YWRoZXJhbnQgd2l0aCBtZWRpY2F0aW9uIHJlZ2ltZW4uIFB0IGhvcGluZyB0byBnZXQgaW50byBCV1kgcHJvZ3JhbS4NT0JYfDgzN3xTVHxCbGFua3x8IA1PQlh8ODM4fFNUfEJsYW5rfHw5Lzk6IG1ldCB3aXRoIHB0IGZvciBmL3UgaW4gbm9ydGggYnJlYWtmYXN0IGFyZWEuIHNoZSBzYXlzIHNoZSBpcyBuZXJ2b3VzDU9CWHw4Mzl8U1R8Qmxhbmt8fGFib3V0IGhlciBicmlkZ2V3YXkgcmVmZXJyYWwgYmVjYXVzZSBzaGUgcmVhbGx5IG5lZWRzIGFuICJ0ZW1wb3JhcnkgcGxhY2UiLg1PQlh8ODQwfFNUfEJsYW5rfHxQZXIgc29jaWFsIHdvcmsgc2hlIGlzIGR1ZSB0b2RheSB0byBoYXZlIGEgY2FsbCBmcm9tIGJyaWRnZXdheS4gU2hlIGRlbmllcw1PQlh8ODQxfFNUfEJsYW5rfHxjdXJyZW50IFNJL0hJLiBwZXIgbnVyc2luZyBkb2N1bWVudGF0aW9uLCBwdCBoYWQgYSB5ZWxsaW5nIG91dGJ1cnN0IHRoaXMNT0JYfDg0MnxTVHxCbGFua3x8bW9ybmluZyB3aXRoIHN0YWZmIGFuZCBoZXIgcm9vbW1hdGUuIHNoZSBhcG9sb2dpemVkIHRvIHRoaXMgd3JpdGVyIGFib3V0DU9CWHw4NDN8U1R8Qmxhbmt8fGFjdGluZyBvdXQgdGhhdCB3YXkuDU9CWHw4NDR8U1R8Qmxhbmt8fCANT0JYfDg0NXxTVHxCbGFua3x8OS84Om1ldCB3aXRoIHB0IGZvciBmL3UgaW4gaGVyIHJvb20uIHNoZSB3YXMgcGxlYXNhbnQgYW5kIGNvb3BlcmF0aXZlLiBzaGUNT0JYfDg0NnxTVHxCbGFua3x8c3RhdGVzIHNoZSBpcyBob3BpbmcgdG8gZ2V0IGFwcHJvdmVkIGZvciBob3VzaW5nIHdpdGggYnJpZGdld2F5IG9yIENPUEUuDU9CWHw4NDd8U1R8Qmxhbmt8fHNoZSBkZW5pZXMgY3VycmVudCBTSS9ISSwgYW5kIGlzIGNvbXBsaWFudCB3aXRoIGhlciBtZWRpY2F0aW9ucy4NT0JYfDg0OHxTVHxCbGFua3x8IA1PQlh8ODQ5fFNUfEJsYW5rfHw5Lzc6IG1ldCB3aXRoIHB0IGZvciBmL3UgaW4gYnJlYWtmYXN0IGFyZWEuIHNoZSBpcyB2ZXJ5IG1vdGl2YXRlZCB0byB0YWxrDU9CWHw4NTB8U1R8Qmxhbmt8fHdpdGggYnJpZGdld2F5IGFib3V0IGhvdXNpbmcgc28gc2hlIGNhbiAiZ2V0IGJhY2sgb24gaGVyIGZlZXQiLiBzaGUgc3RhdGVzDU9CWHw4NTF8U1R8Qmxhbmt8fHNoZSBpcyBzbGVlcGluZyBhbmQgZWF0aW5nIHdlbGwsIGFuZCBoZXIgbW9vZCBpcyAib2siLiBzaGUgZGVuaWVzIGN1cnJlbnQNT0JYfDg1MnxTVHxCbGFua3x8U0kvSEkuDU9CWHw4NTN8U1R8Qmxhbmt8fCANT0JYfDg1NHxTVHxCbGFua3x8OS82OiBtZXQgd2l0aCBwdCBmb3IgZi91IGluIGhlciByb29tIG9uIG5vcnRoIHVuaXQuIHNoZSBpcyByZXF1ZXN0aW5nDU9CWHw4NTV8U1R8Qmxhbmt8fGF0aXZhbiBmb3IgYW54aWV0eSwgd2hpY2ggdGhpcyB3cml0ZXIgcmVmdXNlZCwgYW5kIG9mZmVyZWQgZ2FiYXBlbnRpbg1PQlh8ODU2fFNUfEJsYW5rfHxpbnN0ZWFkLiBQdCB3YXMgb3BlbiB0byB0aGlzLiBTb2NpYWwgV29yayB3aWxsIGJlIHB1dHRpbmcgaW4gYSByZWZlcnJhbCBwZXINT0JYfDg1N3xTVHxCbGFua3x8cHQgcmVxdWVzdCBmb3IgQnJpZGd3YXkgaG91c2luZy4NT0JYfDg1OHxTVHxCbGFua3x8IA1PQlh8ODU5fFNUfEJsYW5rfHxSZXZpZXcgb2YgU3lzdGVtcw1PQlh8ODYwfFNUfEJsYW5rfHxDb25zdGl0dXRpb25hbDoNT0JYfDg2MXxTVHxCbGFua3x8Tm86IGZhdGlndWUsIGZldmVyLiANT0JYfDg2MnxTVHxCbGFua3x8UmVzcGlyYXRvcnk6IG5vcm1hbC9ubyBjaGFuZ2UNT0JYfDg2M3xTVHxCbGFua3x8IA1PQlh8ODY0fFNUfEJsYW5rfHxPYmplY3RpdmUNT0JYfDg2NXxTVHxCbGFua3x8IA1PQlh8ODY2fFNUfEJsYW5rfHxHZW5lcmFsDU9CWHw4Njd8U1R8Qmxhbmt8fFZTOg1PQlh8ODY4fFNUfEJsYW5rfHxWaXRhbCBTaWduczoNT0JYfDg2OXxTVHxCbGFua3x8ICBEYXRlIFRpbWUgICBUZW1wICBQdWxzZSAgUmVzcCAgQi9QICAgICBCL1AgICAgUHVsc2UgIE8yICAgICAgICBPMiBGbG93ICBGaU8yDU9CWHw4NzB8U1R8Qmxhbmt8fCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgTWVhbiAgIE94ICAgICBEZWxpdmVyeSAgUmF0ZQ1PQlh8ODcxfFNUfEJsYW5rfHwgIDAyLzA4IDE5MjEgIDM3LjAgICAgIDg0ICAgIDE4ICAxMzcvODcgIDEwMy45DU9CWHw4NzJ8U1R8Qmxhbmt8fCANT0JYfDg3M3xTVHxCbGFua3x8UEFUSUVOVCBXRUlHSFQ6DU9CWHw4NzR8U1R8Qmxhbmt8fCANT0JYfDg3NXxTVHxCbGFua3x8V2VpZ2h0IChsYik6ICAgMTI1DU9CWHw4NzZ8U1R8Qmxhbmt8fFdlaWdodCAob3opOiAgMy45MQ1PQlh8ODc3fFNUfEJsYW5rfHxXZWlnaHQgKGtnKTogIDU2LjgxMA1PQlh8ODc4fFNUfEJsYW5rfHwgDU9CWHw4Nzl8U1R8Qmxhbmt8fEN1cnJlbnQgbWVkaWNhdGlvbnM6DU9CWHw4ODB8U1R8Qmxhbmt8fEFjdGl2ZSBNZWRzICsgREMnZCBMYXN0IDI0IEhycw1PQlh8ODgxfFNUfEJsYW5rfHxDZXBoYWxleGluICAgNTAwIE1HICAgUUlEICAgUE8gICAgICANT0JYfDg4MnxTVHxCbGFua3x8SW9wYW1pZG9sICAgMTAwIE1MICAgT05DQUxMIFBSTiAgIElWICAgICAgDU9CWHw4ODN8U1R8Qmxhbmt8fFNvZGl1bSBDaGxvcmlkZSAgIDEwIE1MICAgT05DQUxMIFBSTiAgIElWICAgICAgDU9CWHw4ODR8U1R8Qmxhbmt8fE5pY290aW5lICAgNyBNRyAgIFFBTSAgIFRSQU5TREVSTSAgIChDS0QpICAgDU9CWHw4ODV8U1R8Qmxhbmt8fFRyYW1hZG9sIEhDbCAgIDUwIE1HICAgUTZIIFBSTiBQUk4gICBQTyAgICAgIA1PQlh8ODg2fFNUfEJsYW5rfHxDeWFub2NvYmFsYW1pbiAgIDEsMDAwIE1DRyAgIFEzMERAMTYwMCAgIElNICAgICAgDU9CWHw4ODd8U1R8Qmxhbmt8fExvcGVyYW1pZGUgSENsICAgNCBNRyAgIFE0SCBQUk4gUFJOICAgUE8gICAgICANT0JYfDg4OHxTVHxCbGFua3x8UXVldGlhcGluZSBGdW1hcmF0ZSAgIDIwMCBNRyAgIEJFRFRJTUUgICBQTyAgICAgIA1PQlh8ODg5fFNUfEJsYW5rfHxJYnVwcm9mZW4gICA0MDAgTUcgICBRNkggUFJOIFBSTiAgIFBPICAgICAgDU9CWHw4OTB8U1R8Qmxhbmt8fE1lbGF0b25pbiAgIDYgTUcgICBCRURUSU1FICAgUE8gICAgICANT0JYfDg5MXxTVHxCbGFua3x8UG9seXZpbnlsIEFsY29ob2wgICAxIERST1AgICBCSUQgOUEgNVAgICBFQUNIIEVZRSAgICAgIA1PQlh8ODkyfFNUfEJsYW5rfHxIeWRyb2NvcnRpc29uZSAgIDEgQVBQTElDICAgQklEICAgVE9QSUNBTCAgICAgIA1PQlh8ODkzfFNUfEJsYW5rfHxMaWRvY2FpbmUvRXBpbmVwaHJpbmUgICAxIFBBVENIICAgUUFNICAgVE9QSUNBTCAgICAgIA1PQlh8ODk0fFNUfEJsYW5rfHxQYW50b3ByYXpvbGUgU29kaXVtIFNlc3F1aWh5ZHJhdGUgICA0MCBNRyAgIEFDIEJLICAgUE8gICAgICANT0JYfDg5NXxTVHxCbGFua3x8SHlkcm94eXppbmUgUGFtb2F0ZSAgIDI1IE1HICAgVElEIFBSTiBQUk4gICBQTyAgICAgIA1PQlh8ODk2fFNUfEJsYW5rfHxRdWV0aWFwaW5lIEZ1bWFyYXRlICAgNTAgTUcgICBUSUQgUFJOIFBSTiAgIFBPICAgICAgDU9CWHw4OTd8U1R8Qmxhbmt8fExhY3R1bG9zZSAgIDMwIE1MICAgUUFNICAgUE8gICAoQ0tEKSAgIA1PQlh8ODk4fFNUfEJsYW5rfHxHYWJhcGVudGluICAgNjAwIE1HICAgVElEICAgUE8gICAgICANT0JYfDg5OXxTVHxCbGFua3x8Q2FydmVkaWxvbCAgIDMuMTI1IE1HICAgQklEICAgUE8gICAgICANT0JYfDkwMHxTVHxCbGFua3x8TWlydGF6YXBpbmUgICAzMCBNRyAgIEJFRFRJTUUgICBQTyAgICAgIA1PQlh8OTAxfFNUfEJsYW5rfHxBbGJ1dGVyb2wvSXByYXRyb3BpdW0gICAwLjUgTUcgICBRNkggUFJOIFBSTiAgIElOSCAgICAgIA1PQlh8OTAyfFNUfEJsYW5rfHxDbG9uaWRpbmUgSENsICAgMC4xIE1HICAgUTRIIFBSTiBQUk4gICBQTyAgICAgIA1PQlh8OTAzfFNUfEJsYW5rfHxMaXNpbm9wcmlsICAgNSBNRyAgIFFBTSAgIFBPICAgICAgDU9CWHw5MDR8U1R8Qmxhbmt8fEFjZXRhbWlub3BoZW4gICA2NTAgTUcgICBRNEggUFJOIFBSTiAgIFBPICAgICAgDU9CWHw5MDV8U1R8Qmxhbmt8fEFsIEh5ZHJveC9NZyBIeWRyb3gvU2ltZXRoaWNvbmUgICAzMCBNTCAgIFEySCBQUk4gUFJOICAgUE8gICAgICANT0JYfDkwNnxTVHxCbGFua3x8RGlwaGVuaHlkcmFtaW5lIEhDbCAgIDUwIE1HICAgUTRIIFBSTiBQUk4gICBJTSAgICAgIA1PQlh8OTA3fFNUfEJsYW5rfHxNYWduZXNpdW0gSHlkcm94aWRlICAgMzAgTUwgICBEQUlMWSBQUk4gUFJOICAgUE8gICAgICANT0JYfDkwOHxTVHxCbGFua3x8T2xhbnphcGluZSAgIDEwIE1HICAgVElEIFBSTiBQUk4gICBJTSAgICAgIA1PQlh8OTA5fFNUfEJsYW5rfHxTdGVyaWxlIFdhdGVyICAgMi4xIE1MICAgQVNESVIgUFJOICAgSU0gICAgICANT0JYfDkxMHxTVHxCbGFua3x8VHJhem9kb25lIEhDbCAgIDUwIE1HICAgQkVEVElNRSBQUk4gUFJOICAgUE8gICAoREEpICAgDU9CWHw5MTF8U1R8Qmxhbmt8fCANT0JYfDkxMnxTVHxCbGFua3x8IA1PQlh8OTEzfFNUfEJsYW5rfHxBbGxlcmdpZXM6DU9CWHw5MTR8U1R8Qmxhbmt8fEFsbGVyZ2llczoNT0JYfDkxNXxTVHxCbGFua3x8Tm8gS25vd24gRHJ1ZyBBbGxlcmdpZXMgKENvZGVkLCAwOC8xMi8yMCkNT0JYfDkxNnxTVHxCbGFua3x8IA1PQlh8OTE3fFNUfEJsYW5rfHwgDU9CWHw5MTh8U1R8Qmxhbmt8fE51dHJpdGlvbiBhc3Nlc3NtZW50Og1PQlh8OTE5fFNUfEJsYW5rfHxUaGUgZGF0YSBzZXQgYmV0d2VlbiB0aGUgc29saWQgbGluZXMgaGFzIGJlZW4gaW1wb3J0ZWQgZnJvbSB0aGUgZGlldGl0aWFuJ3MgDU9CWHw5MjB8U1R8Qmxhbmt8fGFzc2Vzc21lbnQuICBBbnkgZXhjZXB0aW9ucyBoYXZlIGJlZW4gbm90ZWQgdW5kZXIgUHJvdmlkZXIgY29tbWVudHMuDU9CWHw5MjF8U1R8Qmxhbmt8fF9fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fIA1PQlh8OTIyfFNUfEJsYW5rfHwgDU9CWHw5MjN8U1R8Qmxhbmt8fEJNSSBDYWxjdWxhdGVkOiAgMjAuOA1PQlh8OTI0fFNUfEJsYW5rfHxOdXRyaXRpb24gcmVsYXRlZCBkaWFnbm9zaXM6ICANT0JYfDkyNXxTVHxCbGFua3x8TnV0cml0aW9uIGRpYWdub3NpcyBkZXRhaWxzOiAgDU9CWHw5MjZ8U1R8Qmxhbmt8fE51dHJpdGlvbiBwcm9ibGVtOiAgDU9CWHw5Mjd8U1R8Qmxhbmt8fE51dHJpdGlvbiBldGlvbG9neTogIA1PQlh8OTI4fFNUfEJsYW5rfHxOdXRyaXRpb24gc2lnbnMgYW5kIHN5bXB0b21zOiAgDU9CWHw5Mjl8U1R8Qmxhbmt8fE51dHJpdGlvbiBwcmVzY3JpcHRpb246ICANT0JYfDkzMHxTVHxCbGFua3x8RGlldGl0aWFuIG5hbWU6ICANT0JYfDkzMXxTVHxCbGFua3x8QXNzZXNzbWVudCBjb21wbGV0ZWQ6ICANT0JYfDkzMnxTVHxCbGFua3x8X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX18NT0JYfDkzM3xTVHxCbGFua3x8IA1PQlh8OTM0fFNUfEJsYW5rfHxQcm92aWRlciBjb21tZW50cyBvbiBpbXBvcnRlZCBkaWV0aXRpYW4gYXNzZXNzbWVudDogICANT0JYfDkzNXxTVHxCbGFua3x8IA1PQlh8OTM2fFNUfEJsYW5rfHwgDU9CWHw5Mzd8U1R8Qmxhbmt8fE1lbnRhbCBTdGF0dXMgRXhhbQ1PQlh8OTM4fFNUfEJsYW5rfHxMZXZlbCBvZiBhbGVydG5lc3M6IGFsZXJ0DU9CWHw5Mzl8U1R8Qmxhbmt8fE9yaWVudGF0aW9uOiBhd2FrZSwgYWxlcnQsIG9yaWVudGVkIFg0DU9CWHw5NDB8U1R8Qmxhbmt8fEFwcGVhcmFuY2U6IGFwcHJvcHJpYXRlDU9CWHw5NDF8U1R8Qmxhbmt8fE1vb2Q6IG5vcm1hbC9ldXRoeW1pYw1PQlh8OTQyfFNUfEJsYW5rfHxBZmZlY3Q6IGNvbmcuIHcvdGhvdWdodCBjb250ZW50DU9CWHw5NDN8U1R8Qmxhbmt8fEJlaGF2aW9yOiByZWxheGVkDU9CWHw5NDR8U1R8Qmxhbmt8fEF0dGl0dWRlOiBvcGVuDU9CWHw5NDV8U1R8Qmxhbmt8fFNJL0hJOiBkZW5pZXMNT0JYfDk0NnxTVHxCbGFua3x8U2xlZXA6DU9CWHw5NDd8U1R8Qmxhbmt8fCAgIEhvdXJzIHNsZXB0OiA3DU9CWHw5NDh8U1R8Qmxhbmt8fCAgIFNsZWVwIGNvbmNlcm5zOiBzbGVlcCBjb250LiBkaXN0dXJiYW5jZQ1PQlh8OTQ5fFNUfEJsYW5rfHxTcGVlY2g6IG5vcm1hbCByYXRlICAgcmh5dGhtDU9CWHw5NTB8U1R8Qmxhbmt8fExhbmd1YWdlOiBhcnRpY3VsYXRlDU9CWHw5NTF8U1R8Qmxhbmt8fFRob3VnaHQgcHJvY2Vzc2VzOiBjb2hlcmVudCAgIGdvYWwgZGlyZWN0ZWQNT0JYfDk1MnxTVHxCbGFua3x8QXNzb2NpYXRpb25zOiBubyBsb29zZW5pbmcNT0JYfDk1M3xTVHxCbGFua3x8VGhvdWdodCBjb250ZW50OiBubyBkZWx1c2lvbnMgZWxpY2l0ZWQsIGRlc2lyaW5nIEJyaWRnZXdheSBob3VzaW5nDU9CWHw5NTR8U1R8Qmxhbmt8fEhhbGx1Y2luYXRpb25zOiBkZW5pZXMNT0JYfDk1NXxTVHxCbGFua3x8TWVtb3J5Og1PQlh8OTU2fFNUfEJsYW5rfHwgICBTaG9ydCB0ZXJtOiBpbnRhY3QNT0JYfDk1N3xTVHxCbGFua3x8ICAgTG9uZyB0ZXJtOiBpbnRhY3QNT0JYfDk1OHxTVHxCbGFua3x8QXR0ZW50aW9uOiBhZGVxdWF0ZQ1PQlh8OTU5fFNUfEJsYW5rfHxDb25jZW50cmF0aW9uOiBmYWlyDU9CWHw5NjB8U1R8Qmxhbmt8fEludGVsbGVjdDogbG93LWF2Zw1PQlh8OTYxfFNUfEJsYW5rfHxGdW5kIG9mIGtub3dsZWRnZTogZmFpcg1PQlh8OTYyfFNUfEJsYW5rfHxJbnNpZ2h0L0p1ZGdtZW50OiBpbnNpZ2h0IGZhaXIsIGp1ZGdtZW50IGZhaXINT0JYfDk2M3xTVHxCbGFua3x8IA1PQlh8OTY0fFNUfEJsYW5rfHxTdHJlbmd0aHMgYW5kIERpc2FiaWxpdGllcw1PQlh8OTY1fFNUfEJsYW5rfHxTdHJlbmd0aHM6IGFibGUgdG8gZmVlZCBzZWxmLCBhYmxlIHRvIGFtYnVsYXRlLCBjYW4gbWFpbnRhaW4gc29tZSBBREwncw1PQlh8OTY2fFNUfEJsYW5rfHwgDU9CWHw5Njd8U1R8Qmxhbmt8fFBoeXNpY2FsIEV4YW0NT0JYfDk2OHxTVHxCbGFua3x8R2VuZXJhbCBhcHBlYXJhbmNlOiBhbGVydCwgYXdha2UsIG9yaWVudGVkLCBwbGVhc2FudA1PQlh8OTY5fFNUfEJsYW5rfHxNdXNjdWxvc2tlbGV0YWw6IG5vcm1hbCBpbnNwZWN0aW9uLCBubyBtdXNjbGUgc3Bhc20NT0JYfDk3MHxTVHxCbGFua3x8R2FpdDogbm9ybWFsDU9CWHw5NzF8U1R8Qmxhbmt8fE5ldXJvL0NOUzogbm9ybWFsIGluc3BlY3Rpb24sIG5vcm1hbCBzcGVlY2gsIG5vIG1vdG9yIGRlZmljaXRzDU9CWHw5NzJ8U1R8Qmxhbmt8fCANT0JYfDk3M3xTVHxCbGFua3x8UmVzdWx0cw1PQlh8OTc0fFNUfEJsYW5rfHxGaW5kaW5ncy9EYXRhOg1PQlh8OTc1fFNUfEJsYW5rfHxMYWJvcmF0b3J5IFRlc3RzDU9CWHw5NzZ8U1R8Qmxhbmt8fCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDAyLzA4DU9CWHw5Nzd8U1R8Qmxhbmt8fCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAxNzQwDU9CWHw5Nzh8U1R8Qmxhbmt8fCAgICAgICAgICAgICAgIENoZW1pc3RyeQ1PQlh8OTc5fFNUfEJsYW5rfHwgICAgICAgICAgICAgICAgIFNvZGl1bSAoMTM2IC0gMTQ1IE1NT0wvTCkgICAgICAgICAgICAgICAgICAgIDEzNg1PQlh8OTgwfFNUfEJsYW5rfHwgICAgICAgICAgICAgICAgIFBvdGFzc2l1bSAoMy41IC0gNS4xIE1NT0wvTCkgICAgICAgICAgICAgICAgIDMuOQ1PQlh8OTgxfFNUfEJsYW5rfHwgICAgICAgICAgICAgICAgIENobG9yaWRlICg5OCAtIDEwNyBNTU9ML0wpICAgICAgICAgICAgICAgICAgIDEwNQ1PQlh8OTgyfFNUfEJsYW5rfHwgICAgICAgICAgICAgICAgIENhcmJvbiBEaW94aWRlICgyMSAtIDMyIE1NT0wvTCkgICAgICAgICAgICAgICAyNg1PQlh8OTgzfFNUfEJsYW5rfHwgICAgICAgICAgICAgICAgIEFuaW9uIEdhcCAoNSAtIDE1IE1NT0wvTCkgICAgICAgICAgICAgICAgICAgICAgNQ1PQlh8OTg0fFNUfEJsYW5rfHwgICAgICAgICAgICAgICAgIEJVTiAoNyAtIDE4IE1HL0RMKSAgICAgICAgICAgICAgICAgICAgICAgICAgICAxMA1PQlh8OTg1fFNUfEJsYW5rfHwgICAgICAgICAgICAgICAgIENyZWF0aW5pbmUgKDAuNiAtIDEuMCBNRy9ETCkgICAgICAgICAgICAgIDAuNSAgTA1PQlh8OTg2fFNUfEJsYW5rfHwgICAgICAgICAgICAgICAgIEVzdCBHRlIgKEFmcmljYW4gQW1lcikgKFJBVEUpICAgICAgICAgICAgIDE1OS4xNw1PQlh8OTg3fFNUfEJsYW5rfHwgICAgICAgICAgICAgICAgIEVzdCBHRlIgKE5vbi1BZiBBbWVyKSAoUkFURSkgICAgICAgICAgICAgIDEzMS4zMw1PQlh8OTg4fFNUfEJsYW5rfHwgICAgICAgICAgICAgICAgIEJVTi9DcmVhdGluaW5lIFJhdGlvICgxMiAtIDIwIFJBVElPKSAgICAgICAgICAyMA1PQlh8OTg5fFNUfEJsYW5rfHwgICAgICAgICAgICAgICAgIEdsdWNvc2UgKDc0IC0gMTA2IE1HL0RMKSAgICAgICAgICAgICAgICAgIDEyNiAgSA1PQlh8OTkwfFNUfEJsYW5rfHwgICAgICAgICAgICAgICAgIENhbGNpdW0gKDguNSAtIDEwLjEgTUcvREwpICAgICAgICAgICAgICAgICAgIDguOQ1PQlh8OTkxfFNUfEJsYW5rfHwgICAgICAgICAgICAgICAgIFRvdGFsIEJpbGlydWJpbiAoMC4yIC0gMS4wIE1HL0RMKSAgICAgICAgICAgIDAuNQ1PQlh8OTkyfFNUfEJsYW5rfHwgICAgICAgICAgICAgICAgIEFTVCAoMTUgLSAzNyBVTklUUy9MKSAgICAgICAgICAgICAgICAgICAgICAgICAyMA1PQlh8OTkzfFNUfEJsYW5rfHwgICAgICAgICAgICAgICAgIEFMVCAoMTMgLSA1NiBVTklUUy9MKSAgICAgICAgICAgICAgICAgICAgICAgICAyMA1PQlh8OTk0fFNUfEJsYW5rfHwgICAgICAgICAgICAgICAgIEFsa2FsaW5lIFBob3NwaGF0YXNlICg0NSAtIDExNyBVTklUUy9MKSAgIDE0MiAgSA1PQlh8OTk1fFNUfEJsYW5rfHwgICAgICAgICAgICAgICAgIFRvdGFsIFByb3RlaW4gKDYuNCAtIDguMiBHTS9ETCkgICAgICAgICAgICAgIDcuOQ1PQlh8OTk2fFNUfEJsYW5rfHwgICAgICAgICAgICAgICAgIEFsYnVtaW4gKDMuNCAtIDUuMCBnL2RMKSAgICAgICAgICAgICAgICAgICAgIDMuNQ1PQlh8OTk3fFNUfEJsYW5rfHwgICAgICAgICAgICAgICAgIEdsb2J1bGluICgyLjIgLSA0LjAgRy9ETCkgICAgICAgICAgICAgICAgIDQuNCAgSA1PQlh8OTk4fFNUfEJsYW5rfHwgICAgICAgICAgICAgICAgIEFsYnVtaW4vR2xvYnVsaW4gUmF0aW8gKDAuNyAtIDIuMCBSQVRJTykgICAgIDAuOA1PQlh8OTk5fFNUfEJsYW5rfHwgDU9CWHwxMDAwfFNUfEJsYW5rfHxMYWJvcmF0b3J5IFRlc3RzDU9CWHwxMDAxfFNUfEJsYW5rfHwgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAwMi8wOA1PQlh8MTAwMnxTVHxCbGFua3x8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDE3NDANT0JYfDEwMDN8U1R8Qmxhbmt8fCAgICAgICAgICAgICAgIEhlbWF0b2xvZ3kNT0JYfDEwMDR8U1R8Qmxhbmt8fCAgICAgICAgICAgICAgICAgV0JDICgzLjk4IC0gMTAuMDQgSy9NTTMpICAgICAgICAgICAgICAgICAgICA2LjIxDU9CWHwxMDA1fFNUfEJsYW5rfHwgICAgICAgICAgICAgICAgIFJCQyAoMy45MyAtIDUuMjIgTS9NTTMpICAgICAgICAgICAgICAgICAgICAgNC4wNg1PQlh8MTAwNnxTVHxCbGFua3x8ICAgICAgICAgICAgICAgICBIZ2IgKDExLjIgLSAxNS43IEdNL0RMKSAgICAgICAgICAgICAgICAgICAgIDEyLjMNT0JYfDEwMDd8U1R8Qmxhbmt8fCAgICAgICAgICAgICAgICAgSGN0ICgzNC4xIC0gNDQuOSAlUENWKSAgICAgICAgICAgICAgICAgICAgICAzOC4wDU9CWHwxMDA4fFNUfEJsYW5rfHwgICAgICAgICAgICAgICAgIE1DViAoNzkuNCAtIDk0LjggRkwpICAgICAgICAgICAgICAgICAgICAgICAgOTMuNg1PQlh8MTAwOXxTVHxCbGFua3x8ICAgICAgICAgICAgICAgICBNQ0ggKDI1LjYgLSAzMi4yIFBHKSAgICAgICAgICAgICAgICAgICAgICAgIDMwLjMNT0JYfDEwMTB8U1R8Qmxhbmt8fCAgICAgICAgICAgICAgICAgTUNIQyAoMzIuMiAtIDM1LjUgR00vREwpICAgICAgICAgICAgICAgICAgICAzMi40DU9CWHwxMDExfFNUfEJsYW5rfHwgICAgICAgICAgICAgICAgIFJEVyAoMTEuNyAtIDE0LjQgJSkgICAgICAgICAgICAgICAgICAgICAgICAgMTIuNg1PQlh8MTAxMnxTVHxCbGFua3x8ICAgICAgICAgICAgICAgICBQbHQgQ291bnQgKDE4MiAtIDM2OSBLL01NMykgICAgICAgICAgICAgICAgICAxOTYNT0JYfDEwMTN8U1R8Qmxhbmt8fCAgICAgICAgICAgICAgICAgTVBWICg5LjQgLSAxMi4zIEZMKSAgICAgICAgICAgICAgICAgICAgICAgICAgOS40DU9CWHwxMDE0fFNUfEJsYW5rfHwgICAgICAgICAgICAgICAgIEltbWF0dXJlIEdyYW4gJSAoQXV0bykgKDAuMCAtIDAuOSAlKSAgICAgICAgIDAuMg1PQlh8MTAxNXxTVHxCbGFua3x8ICAgICAgICAgICAgICAgICBOZXV0ICUgKEF1dG8pICgzNC4wIC0gNzEuMSAlKSAgICAgICAgICAgICAgIDQ1LjENT0JYfDEwMTZ8U1R8Qmxhbmt8fCAgICAgICAgICAgICAgICAgTHltcGggJSAoQXV0bykgKDE5LjMgLSA1MS43ICUpICAgICAgICAgICAgICAzOS4xDU9CWHwxMDE3fFNUfEJsYW5rfHwgICAgICAgICAgICAgICAgIE1vbm8gJSAoQXV0bykgKDQuNyAtIDEyLjUgJSkgICAgICAgICAgICAgMTIuNyAgSA1PQlh8MTAxOHxTVHxCbGFua3x8ICAgICAgICAgICAgICAgICBFb3MgJSAoQXV0bykgKDAuNyAtIDUuOCAlKSAgICAgICAgICAgICAgICAgICAyLjMNT0JYfDEwMTl8U1R8Qmxhbmt8fCAgICAgICAgICAgICAgICAgQmFzbyAlIChBdXRvKSAoMC4xIC0gMS4yICUpICAgICAgICAgICAgICAgICAgMC42DU9CWHwxMDIwfFNUfEJsYW5rfHwgICAgICAgICAgICAgICAgIE5ldXQgIyAoQXV0bykgKDEuNTYgLSA2LjEzIEsvTU0zKSAgICAgICAgICAgMi44MA1PQlh8MTAyMXxTVHxCbGFua3x8ICAgICAgICAgICAgICAgICBJbW1hdHVyZSBHcmFuICMgKEF1dG8pICgwLjAgLSAwLjMpICAgICAgICAgIDAuMDENT0JYfDEwMjJ8U1R8Qmxhbmt8fCAgICAgICAgICAgICAgICAgQWJzb2x1dGUgRW9zIChhdXRvKSAoMC4wNCAtIDAuMzYgSy9NTTMpICAgICAwLjE0DU9CWHwxMDIzfFNUfEJsYW5rfHwgICAgICAgICAgICAgICAgIEFic29sdXRlIEJhc29zIChhdXRvKSAoMC4wMSAtIDAuMDgpICAgICAgICAgMC4wNA1PQlh8MTAyNHxTVHxCbGFua3x8ICAgICAgICAgICAgICAgICBOdWNsZWF0ZWQgUkJDICUgKDAgLSAwLjIgJSkgICAgICAgICAgICAgICAgICAwLjANT0JYfDEwMjV8U1R8Qmxhbmt8fCAgICAgICAgICAgICAgICAgTHltcGhvY3l0ZXMgIyAoMS4xOCAtIDMuNzQgSy9NTTMpICAgICAgICAgICAyLjQzDU9CWHwxMDI2fFNUfEJsYW5rfHwgICAgICAgICAgICAgICAgIE1vbm9jeXRlcyAjICgwLjI0IC0gMC44NikgICAgICAgICAgICAgICAgICAgMC43OQ1PQlh8MTAyN3xTVHxCbGFua3x8ICAgICAgICAgICAgICAgICBOdWNsZWF0ZWQgUkJDcyAoMCAtIDAgS01NMykgICAgICAgICAgICAgICAgIDAuMDANT0JYfDEwMjh8U1R8Qmxhbmt8fCANT0JYfDEwMjl8U1R8Qmxhbmt8fCANT0JYfDEwMzB8U1R8Qmxhbmt8fFJhZGlvbG9neSBkYXRhOg1PQlh8MTAzMXxTVHxCbGFua3x8UmVjZW50IEltcHJlc3Npb25zOg1PQlh8MTAzMnxTVHxCbGFua3x8Q09NUFVURVJJWkVEIFRPTU9HUkFQSFkgLSBDVCBMT1dFUiBFWFRSTSBXL0NPTiBSVCAwMi8wOCAyMDQ1DU9CWHwxMDMzfFNUfEJsYW5rfHwqKiogUmVwb3J0IEltcHJlc3Npb24gLSBTdGF0dXM6IFNJR05FRCAgRW50ZXJlZDogMDIvMDkvMjAyMSAwMTMxDU9CWHwxMDM0fFNUfEJsYW5rfHwgDU9CWHwxMDM1fFNUfEJsYW5rfHxJTVBSRVNTSU9OOg1PQlh8MTAzNnxTVHxCbGFua3x8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgDU9CWHwxMDM3fFNUfEJsYW5rfHxTY2xlcm90aWMgZm9jdXMgaW4gdGhlIGRpc3RhbCBmZW1vcmFsIHNoYWZ0IGNvbnNpc3RlbnQgd2l0aCBvbGQNT0JYfDEwMzh8U1R8Qmxhbmt8fGluZmFyY3QuDU9CWHwxMDM5fFNUfEJsYW5rfHwgICAgICAgICAgICAgICAgICAgICAgICAgICAgICANT0JYfDEwNDB8U1R8Qmxhbmt8fE1pbGQgZGVnZW5lcmF0aXZlIGNoYW5nZSB3aXRoIGNob25kcm9jYWxjaW5vc2lzLg1PQlh8MTA0MXxTVHxCbGFua3x8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgDU9CWHwxMDQyfFNUfEJsYW5rfHxKb2ludCBlZmZ1c2lvbiB3aXRoIGEgc21hbGwgYW1vdW50IG9mIGZsdWlkIGluIHRoZSBzdXByYXBhdGVsbGFyDU9CWHwxMDQzfFNUfEJsYW5rfHxidXJzYS4gVGhlcmUgaXMgYWxzbyBhIHJlbGF0aXZlbHkgc21hbGwgQmFrZXIncyBjeXN0Lg1PQlh8MTA0NHxTVHxCbGFua3x8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgDU9CWHwxMDQ1fFNUfEJsYW5rfHxNaWxkIHN1YmN1dGFuZW91cyBlZGVtYSBzZWVuIGFyb3VuZCB0aGUga25lZS4NT0JYfDEwNDZ8U1R8Qmxhbmt8fEluZGl2aWR1YWxpemVkIGRvc2Ugb3B0aW1pemF0aW9uIHRlY2huaXF1ZXMgd2VyZSB1c2VkIGZvciB0aGlzIENULg1PQlh8MTA0N3xTVHxCbGFua3x8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgDU9CWHwxMDQ4fFNUfEJsYW5rfHwgICAgICAgICAgICAgICAgICAgICAgICAgICAgICANT0JYfDEwNDl8U1R8Qmxhbmt8fCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIA1PQlh8MTA1MHxTVHxCbGFua3x8SW1wcmVzc2lvbiBCeTogTURJWUs5OTQ4IC0gUk9CRVJUIEtBTUhPTFRaIE1EDU9CWHwxMDUxfFNUfEJsYW5rfHwgDU9CWHwxMDUyfFNUfEJsYW5rfHwgDU9CWHwxMDUzfFNUfEJsYW5rfHxSZXZpZXdlZCBwcmV2aW91cyByZWNvcmRzOiB5ZXMNT0JYfDEwNTR8U1R8Qmxhbmt8fCANT0JYfDEwNTV8U1R8Qmxhbmt8fCANT0JYfDEwNTZ8U1R8Qmxhbmt8fERpYWdub3NpcywgQXNzZXNzbWVudCAgIFBsYW4NT0JYfDEwNTd8U1R8Qmxhbmt8fEZyZWUgVGV4dCBBIFA6DU9CWHwxMDU4fFNUfEJsYW5rfHw5LzIzOiBNb29kIHN0YWJsZSBvbiB1bml0LiBBd2FpdGluZyBwbGFjZW1lbnQvc2FmZSBkaXNjaGFyZ2UuIA1PQlh8MTA1OXxTVHxCbGFua3x8OS8yNDogTm8gY2hhbmdlcyBpbiBtZWRpY2F0aW9uIHJlZ2ltZW4gb3IgcGxhbiBvZiBjYXJlLiBTVyBhc3Npc3Rpbmcgd2l0aCANT0JYfDEwNjB8U1R8Qmxhbmt8fGFwcGxpY2F0aW9uIHRvIEJyaWdodCBCZWdpbm5pbmdzLiBBd2FpdGluZyBwbGFjZW1lbnQuDU9CWHwxMDYxfFNUfEJsYW5rfHw5LzI1OiBObyBjaGFuZ2VzIGluIG1lZGljYXRpb24gcmVnaW1lbiBhbmQgcGxhbiBvZiBjYXJlLiBBd2FpdGluZyBwbGFjZW1lbnQuDU9CWHwxMDYyfFNUfEJsYW5rfHw5LzI2OiBDb250IGN1cnJlbnQgbWVkaWNhdGlvbiByZWdpbWVuIGFuZCBwbGFuIG9mIGNhcmUuIA1PQlh8MTA2M3xTVHxCbGFua3x8OS8yNzogU3RhYmxlIG9uIHVuaXQuIE5vIGNoYW5nZXMgaW4gdHggcGxhbi4NT0JYfDEwNjR8U1R8Qmxhbmt8fDkvMjg6IE5vIGNoYW5nZXMuIENvbnQgY3VycmVudCB0eCBwbGFuLg1PQlh8MTA2NXxTVHxCbGFua3x8OS8yOTogTm8gY2hhbmdlcyBpbiBjdXJyZW50IHR4IHBsYW4uIFB0IHN0YWJsZSBvbiB1bml0LiBTVyBhc3Npc3Rpbmcgd2l0aCBzYWZlIA1PQlh8MTA2NnxTVHxCbGFua3x8ZGlzY2hhcmdlIHBsYW4gYW5kIHBsYWNlbWVudC4NT0JYfDEwNjd8U1R8Qmxhbmt8fDkvMzA6IE5vIGNoYW5nZXMgaW4gY3VycmVudCB0eCBwbGFuLiBBd2FpdGluZyBwbGFjZW1lbnQsIFNXIGFzc2lzdGluZyB3aXRoIA1PQlh8MTA2OHxTVHxCbGFua3x8ZGlzY2hhcmdlIHBsYW5uaW5nLg1PQlh8MTA2OXxTVHxCbGFua3x8MTAvMDE6IHBzeWNoaWF0cmljYWxseSBzdGFibGUiLiBBd2FpdGluZyBwbGFjZW1lbnQgb3B0aW9ucyBmcm9tIHNvY2lhbCB3b3JrLg1PQlh8MTA3MHxTVHxCbGFua3x8MTAvMDI6IHRyYW5zZmVycmVkIHRvIHNvdXRoLiBwc3ljaGlhdHJpY2FsbHkgc3RhYmxlLiBhd2FpdGluZyBwbGFjZW1lbnQuIA1PQlh8MTA3MXxTVHxCbGFua3x8MTAvMDI6IG5vIGNoYW5nZSB0byBjdXJyZW50IHBsYW4gb2YgY2FyZS4NT0JYfDEwNzJ8U1R8Qmxhbmt8fDEwLzAzLTEwLzA0OiBwdCBpcyBwc3ljaGlhdHJpY2FsbHkgc3RhYmxlLCBhd2FpdGluZyBwbGFjZW1lbnQgb3B0aW9ucy4NT0JYfDEwNzN8U1R8Qmxhbmt8fDEwLzA1OiBTZXJvcXVlbCBkb3NlIGluY3JlYXNlZCB0byAxNTBtZyBxaHMuIA1PQlh8MTA3NHxTVHxCbGFua3x8MTAvMDY6IFJlZmVycmFsIGluIGZvciBCcmlnaHQgQmVnaW5uaW5ncy4gbm8gY2hhbmdlcyB0byBwbGFuIG9mIGNhcmUuIA1PQlh8MTA3NXxTVHxCbGFua3x8MTAvMDc6IG5vIGNoYW5nZXMgdG8gcGxhbiBvZiBjYXJlLiANT0JYfDEwNzZ8U1R8Qmxhbmt8fDEwLzA4OiBObyBjaGFuZ2VzIGluIHR4IHBsYW4uIFNXIGF3YWl0aW5nIHJlc3BvbnNlIGZyb20gQnJpZ2h0IEJlZ2lubmluZ3MuIA1PQlh8MTA3N3xTVHxCbGFua3x8U3RhYmxlIG9uIHVuaXQuDU9CWHwxMDc4fFNUfEJsYW5rfHwxMC8wOTogTm8gY2hhbmdlcyBpbiB0eCBwbGFuLiBBd2FpdGluZyByZXNwb25zZSBmcm9tIEJyaWdodCBCZWdpbm5pbmdzLiANT0JYfDEwNzl8U1R8Qmxhbmt8fDEwLzEwOiBObyBjaGFuZ2VzIGluIGN1cnJlbnQgdHggcGxhbi4gDU9CWHwxMDgwfFNUfEJsYW5rfHwxMC8xMTogTm8gY2hhbmdlcyBpbiB0eCBwbGFuLiBTdGlsbCBhd2FpdGluZyBCcmlnaHQgQmVnaW5uaW5ncyByZXNwb25zZS4NT0JYfDEwODF8U1R8Qmxhbmt8fDEwLzEyOiBObyBjaGFuZ2VzIGluIHR4IHBsYW4uIFBzeWNoaWF0cmljYWxseSBzdGFibGUuIFR4IHRlYW0gYXdhaXRpbmcgcmVzcG9uc2UgDU9CWHwxMDgyfFNUfEJsYW5rfHxmcm9tIEJyaWdodCBCZWdpbm5pbmdzLg1PQlh8MTA4M3xTVHxCbGFua3x8MTAvMTM6IE5vIGNoYW5nZXMgaW4gdHggcGxhbi4gU3RhYmxlIG9uIHVuaXQuIE5vIHVwZGF0ZXMgdG9kYXkgZnJvbSB0eCB0ZWFtIGZyb20NT0JYfDEwODR8U1R8Qmxhbmt8fEJyaWdodCBCZWdpbm5pbmdzLg1PQlh8MTA4NXxTVHxCbGFua3x8MTAvMTQ6IE5vIGNoYW5nZXMgaW4gdHggcGxhbi4gQ29udCBjdXJyZW50IG1lZHMuIFNob3VsZCBoZWFyIGJhY2sgZnJvbSBCcmlnaHQgDU9CWHwxMDg2fFNUfEJsYW5rfHxCZWdpbm5pbmdzIGJ5IGVuZCBvZiB3ZWVrIHJlZ2FyZGluZyBhbiBhc3dlciBmb3IgcGxhY2VtZW50IHBlciBUeCB0ZWFtLiANT0JYfDEwODd8U1R8Qmxhbmt8fDEwLzE1OiBwdCBwc3ljaGlhdHJpY2FsbHkgc3RhYmxlLiB3YWl0aW5nIHRvIGhlYXIgZnJvbSBCcmlnaHQgQmVnaW5uaW5ncyBmb3IgDU9CWHwxMDg4fFNUfEJsYW5rfHxwbGFjZW1lbnQuIA1PQlh8MTA4OXxTVHxCbGFua3x8MTAvMTY6IHB0IGNvbnRpbnVlcyB0byB3YWl0IGZvciBpbnRlcnZpZXcgd2l0aCBCcmlnaHQgQmVnaW5uaW5ncy4gbm8gY2hhbmdlcyB0byANT0JYfDEwOTB8U1R8Qmxhbmt8fHBsYW4gb2YgY2FyZS4gDU9CWHwxMDkxfFNUfEJsYW5rfHwxMC8xNzogY29udCBjdXJyZW50IHR4IHBsYW4NT0JYfDEwOTJ8U1R8Qmxhbmt8fDEwLzE4OiBjb250IGN1cnJlbnQgdHggcGxhbi4NT0JYfDEwOTN8U1R8Qmxhbmt8fDEwLzE5OiBTVyB0byBjb250YWN0IEJyaWdodCBCZWdpbm5pbmdzIGFnYWluLiANT0JYfDEwOTR8U1R8Qmxhbmt8fDEwLzIwOiBQdCBkZW5pZWQgYXQgQnJpZ2h0IEJlZ2lubmluZ3MuIHB0IHBzeWNoaWF0cmljYWxseSBzdGFibGUsIGF3YWl0aW5nIG90aGVyDU9CWHwxMDk1fFNUfEJsYW5rfHxwbGFjZW1lbnQgb3B0aW9ucy4gDU9CWHwxMDk2fFNUfEJsYW5rfHwxMC8yMTogU1cgY2FsbGluZyBCcmlnaHQgQmVnIGFza2luZyB0aGVtIHRvIHJlY29uc2lkZXIgYWNjZXB0aW5nIGhlci4gDU9CWHwxMDk3fFNUfEJsYW5rfHwxMC8yMjogU1cgcHVyc3VpbmcgYnJpZ2h0IGJlZ2lubmluZ3MuIENvbnRpbnVlIHJlZ2ltZW4uIA1PQlh8MTA5OHxTVHxCbGFua3x8MTAvMjM6IERpc3BvIHBsYW5uaW5nIHVuZGVyd2F5LiANT0JYfDEwOTl8U1R8Qmxhbmt8fDEwLzI0OiBEaXNwbyBwbGFubmluZyB1bmRlcndheS4gDU9CWHwxMTAwfFNUfEJsYW5rfHwxMC8yNTogRGlzcG8gcGxhbm5pbmcgdW5kZXJ3YXkNT0JYfDExMDF8U1R8Qmxhbmt8fDEwLzI2OiBEaXNwbyBwbGFubmluZyB1bmRlcndheS4gDU9CWHwxMTAyfFNUfEJsYW5rfHwxMC8yNzogTm8gY2hhbmdlcyBhdCB0aGlzIHRpbWUuIE5vIHVwZGF0ZXMgaW4gdHggdGVhbSB0aGlzIG1vcm5pbmcuIEF3YWl0aW5nIA1PQlh8MTEwM3xTVHxCbGFua3x8cGxhY2VtZW50IG9wdGlvbnMuDU9CWHwxMTA0fFNUfEJsYW5rfHwxMC8yODogTm8gY2hhbmdlcyBpbiBtZWRpY2F0aW9uIHJlZ2ltZW4gb3IgcGxhbiBvZiBjYXJlLiBBd2FpdGluZyBwbGFjZW1lbnQuDU9CWHwxMTA1fFNUfEJsYW5rfHwxMC8yOTogbm8gY2hhbmdlcyB0byBjdXJyZW50IHBsYW4gb2YgY2FyZS4gDU9CWHwxMTA2fFNUfEJsYW5rfHwxMC8zMDogY29udCBjdXJyZW50IG1lZGljYXRpb25zIGFuZCBwbGFuIG9mIGNhcmUuIHJlZmVycmFsIGluIGZvciBWYXJudW0uIA1PQlh8MTEwN3xTVHxCbGFua3x8MTAvMzE6IGNvbnQgY3VycmVudCB0eCBwbGFuLiANT0JYfDExMDh8U1R8Qmxhbmt8fDExLzAxOiBjb250IGN1cnJlbnQgdHggcGxhbi4NT0JYfDExMDl8U1R8Qmxhbmt8fDExLzAyOiBjb250IGN1cnJlbnQgdHggcGxhbi4gDU9CWHwxMTEwfFNUfEJsYW5rfHwxMS8wMzogY29udCBjdXJyZW50IHR4IHBsYW4uDU9CWHwxMTExfFNUfEJsYW5rfHwxMS8wNDogY29udCBjdXJyZW50IHR4IHBsYW4uIG5vIGluZm9ybWF0aW9uIHlldCBvbiBWYXJudW5tIHJlZmVycmFsLiANT0JYfDExMTJ8U1R8Qmxhbmt8fDExLzA1OiBjb250IGN1cnJlbnQgdHggcGxhbi4NT0JYfDExMTN8U1R8Qmxhbmt8fDExLzA2OiBObyBjaGFuZ2VzIGluIG1lZCByZWdpbWVuIG9yIHBsYW4gb2YgY2FyZS4gQXdhaXRpbmcgcmVzcG9uc2UgZnJvbSBWYXJudW0gDU9CWHwxMTE0fFNUfEJsYW5rfHxyZWZlcnJhbC4gDU9CWHwxMTE1fFNUfEJsYW5rfHwxMS8wNzogTm8gY2hhbmdlcyBpbiBjdXJyZW50IHR4IHBsYW4uIFN0YWJsZSBvbiB1bml0Lg1PQlh8MTExNnxTVHxCbGFua3x8MTEvMDg6IE5vIGNoYW5nZXMgaW4gbWVkIHJlZ2ltZW4gb3IgdHggcGxhbi4gDU9CWHwxMTE3fFNUfEJsYW5rfHwxMS8wOTogTm8gY2hhbmdlcy4gU3RhYmxlIG9uIHVuaXQuIEF3YWl0aW5nIHJlc3BvbnNlIGZyb20gVmFybnVtLg1PQlh8MTExOHxTVHxCbGFua3x8MTEvMTA6IE5vIGNoYW5nZXMuIFN0YWJsZSBvbiB1bml0LiBEZW5pZWQgZnJvbSBWYXJudW0uDU9CWHwxMTE5fFNUfEJsYW5rfHwxMS8xMTogTm8gY2hhbmdlcyBpbiBtZWRpY2F0aW9uIHJlZ2ltZW4gb3IgcGxhbiBvZiBjYXJlLiBQdCBpcyBzdGFibGUgb24gdW5pdC4gDU9CWHwxMTIwfFNUfEJsYW5rfHwxMS8xMjogY29udCBjdXJyZW50IHR4IHBsYW4uIA1PQlh8MTEyMXxTVHxCbGFua3x8MTEvMTM6IGNvbnQgY3VycmVudCB0eCBwbGFuLiANT0JYfDExMjJ8U1R8Qmxhbmt8fDExLzE0OiBtZWxhdG9uaW4gaW5jcmVhc2VkIHRvIDZtZy4gU3RhYmxlIG9uIHVuaXQuIA1PQlh8MTEyM3xTVHxCbGFua3x8MTEvMTU6IGNvbnQgY3VycmVudCB0eCBwbGFuLg1PQlh8MTEyNHxTVHxCbGFua3x8MTEvMTY6IHBzeWNoaWF0cmljYWxseSBzdGFibGUsIGF3YWl0aW5nIEFMRiBwbGFjbWVudC4gDU9CWHwxMTI1fFNUfEJsYW5rfHwxMS8xNzogcG9zc2libGUgZGlzY2hhcmdlIG9uIE1vbmRheSB0byBmcmllbmRzIGhvdXNlIGluIE1vc3NleSBIZWFkIChHYWlsIA1PQlh8MTEyNnxTVHxCbGFua3x8TWFydGluZXopLiANT0JYfDExMjd8U1R8Qmxhbmt8fDExLzE4OiBObyBjaGFuZ2VzIGluIG1lZGljYXRpb24gcmVnaW1lbiBvciBwbGFuIG9mIGNhcmUuIFRDIG5vdGlmaWVkIHB0IGlzIG5vdyANT0JYfDExMjh8U1R8Qmxhbmt8fGNvbmNlcm5lZCBhYm91dCBkaXNjaGFyZ2luZyB3aXRob3V0IGhlciBkZWJpdCBjYXJkIGFuZCBhc3Npc3RhbmNlIGNhcmRzLiBTaGUgDU9CWHwxMTI5fFNUfEJsYW5rfHx3YW50cyB0byBoYXZlIHRoZW0gbWFpbGVkIGhlcmUuIFRDIGF3YXJlLiBQdCB0byBkL2MgaG9wZWZ1bGx5IE1vbmRheSB0byBsaXZlIA1PQlh8MTEzMHxTVHxCbGFua3x8d2l0aCBoZXIgZnJpZW5kIEdhaWwgTWFydGluZXouDU9CWHwxMTMxfFNUfEJsYW5rfHwxMS8xOTogTm8gY2hhbmdlcy4gU3RhYmxlIG9uIHVuaXQuIA1PQlh8MTEzMnxTVHxCbGFua3x8MTEvMjA6IENvbnQgY3VycmVudCBtZWRpY2F0aW9uIHJlZ2ltZW4gYW5kIHBsYW4gb2YgY2FyZS4gQW50aWNpcGF0ZWQgZGlzY2hhcmdlIA1PQlh8MTEzM3xTVHxCbGFua3x8aXMgTW9uZGF5IDExLzIzLzIwMjAuDU9CWHwxMTM0fFNUfEJsYW5rfHwxMS8yMS8yMDIwOiBObyBjaGFuZ2VzLiBTdGFibGUgb24gdW5pdC4gQW50aWNpcGF0ZWQgZGlzY2hhcmdlIGlzIE1vbmRheSAxMS8yMy8NT0JYfDExMzV8U1R8Qmxhbmt8fDIwMjAgdG8gZ28gbGl2ZSB3aXRoIGhlciBmcmllbmQgR2FpbCBNYXJ0aW5lei4gDU9CWHwxMTM2fFNUfEJsYW5rfHwxMS8yMi8yMDIwOiBObyBjaGFuZ2VzIGluIG1lZCByZWdpbWVuIG9yIHR4IHBsYW4uIA1PQlh8MTEzN3xTVHxCbGFua3x8MTEvMjMvMjAyMDogVHggdGVhbSBub3RpZmllZCBwdCByZWZ1c2luZyB0byBkL2MgdG8gaGVyIGZyaWVuZHMgaG9tZS4gTm8gY2hhbmdlcyANT0JYfDExMzh8U1R8Qmxhbmt8fGluIG1lZGljYXRpb25zLiANT0JYfDExMzl8U1R8Qmxhbmt8fDExLzI0LzIwMjA6IE5vIGNoYW5nZXMgaW4gbWVkIHJlZ2ltZW4gb3IgcGxhbiBvZiBjYXJlLiBTdGFibGUgb24gdW5pdC4gQXdhaXRpbmcgDU9CWHwxMTQwfFNUfEJsYW5rfHxBTEYgcGxhY2VtZW50Lg1PQlh8MTE0MXxTVHxCbGFua3x8MTEvMjUvMjAyMDogTm8gY2hhbmdlcyBpbiBtZWRpY2F0aW9uIHJlZ2ltZW4gYW5kIHBsYW4gb2YgY2FyZS4gQXdhaXRpbmcgQUxGLg1PQlh8MTE0MnxTVHxCbGFua3x8MTEvMjYvMjAyMDogcHQgbWF5IGRpc2NoYXJnZSB0byBoZXIgZnJpZW5kcyBob21lIGluIE1vc3N5IEhlYWQgb24gbW9uZGF5IG9yIA1PQlh8MTE0M3xTVHxCbGFua3x8dHVlc2RheS4gbm8gY2hhbmdlcyB0byBwbGFuIG9mIGNhcmUuIA1PQlh8MTE0NHxTVHxCbGFua3x8MTEvMjcvMjAyMDogcHQgY29udGludWVzIHRvIG9zY2lsYXRlIGJldHdlZW4gZGlzY2hhcmdpbmcgdG8gaGVyIGZyaWVuZHMgaG91c2Ugb3INT0JYfDExNDV8U1R8Qmxhbmt8fHdhaXRpbmcgZm9yIGFsZiBwbGFjZW1lbnQgLiANT0JYfDExNDZ8U1R8Qmxhbmt8fDExLzI4LzIwMjA6IGNvbnQgY3VycmVudCB0eCBwbGFuLiANT0JYfDExNDd8U1R8Qmxhbmt8fDExLzI5LzIwMjA6IGNvbnQgY3VycmVudCB0eCBwbGFuLg1PQlh8MTE0OHxTVHxCbGFua3x8MTEvMzAvMjAyMDogcHQgc3RpbGwgd2FpdGluZyBmb3IgZGlzY2hhcmdlIG9wdGlvbnMuIGNvbnQgY3VycmVudCB0eCBwbGFuLg1PQlh8MTE0OXxTVHxCbGFua3x8MTIvMDEvMjAyMDogU1cgd29ya2luZyBvbiBsb25nIHRlcm0gY2FyZSB3YWl2ZXIgZm9yIGluc3VyYW5jZSBmb3IgQUxGIHBsYWNlbWVudC4NT0JYfDExNTB8U1R8Qmxhbmt8fCANT0JYfDExNTF8U1R8Qmxhbmt8fDEyLzAyLzIwMjA6IGNvbnQgY3VycmVudCB0eCBwbGFuLiANT0JYfDExNTJ8U1R8Qmxhbmt8fDEyLzAzOiBObyBjaGFuZ2VzIGluIG1lZGljYXRpb24gcmVnaW1lbiBvciBwbGFuIG9mIGNhcmUuIA1PQlh8MTE1M3xTVHxCbGFua3x8MTIvMDQ6IFN0YWJsZSBvbiB1bml0LiBObyBjaGFuZ2VzIGF0IHRoaXMgdGltZS4gQXdhaXRpbmcgQUxGIG9wdGlvbnMuIA1PQlh8MTE1NHxTVHxCbGFua3x8MTIvMDU6IE5vIGNoYW5nZXMuIFN0YWJsZSBvbiB1bml0LiANT0JYfDExNTV8U1R8Qmxhbmt8fDEyLzA2OiBObyBjaGFuZ2VzIGluIGN1cnJlbnQgdHggcGxhbiBvciBtZWRpY2F0aW9ucy4gDU9CWHwxMTU2fFNUfEJsYW5rfHwxMi8wNzogTm8gY2hhbmdlcyBpbiB0eCBwbGFuLiBBd2FpdGluZyBBTEYgcGxhY2VtZW50IG9wdGlvbnMuDU9CWHwxMTU3fFNUfEJsYW5rfHwxMi8wODogTm8gY2hhbmdlcy4gU3RhYmxlIG9uIHVuaXQuIA1PQlh8MTE1OHxTVHxCbGFua3x8MTIvOTogRGlzcG8gcGxhbm5pbmcgdW5kZXJ3YXkuIA1PQlh8MTE1OXxTVHxCbGFua3x8MTIvMTA6IHdhaXRpbmcgb24gbG9uZ3Rlcm0gY2FyZSB3YWl2ZXIgYXBwb2ludG1lbnQgd2hpY2ggbWF5IGJlIDEyLzE1LiBubyANT0JYfDExNjB8U1R8Qmxhbmt8fGNoYW5nZXMuIHB0IHN0YWJsZSBvbiB1bml0Lg1PQlh8MTE2MXxTVHxCbGFua3x8MTIvMTE6IG5vIGNoYW5nZXMuIHN0YWJsZSBvbiB1bml0Lg1PQlh8MTE2MnxTVHxCbGFua3x8MTIvMTI6IG5vIGNoYW5nZXMuIHN0YWJsZSBvbiB1bml0LiANT0JYfDExNjN8U1R8Qmxhbmt8fDEyLzEzOiBjb250IGN1cnJlbnQgdHggcGxhbi4NT0JYfDExNjR8U1R8Qmxhbmt8fDEyLzE0OiBhd2FpdGluZyBsb25ndGVybSBjYXJlIHdhaXZlciBhc3Nlc3NtZW50IHNjaGVkdWxlZCBmb3IgMTIvMzAuIGNvbnQgDU9CWHwxMTY1fFNUfEJsYW5rfHxjdXJyZW50IHR4IHBsYW4uDU9CWHwxMTY2fFNUfEJsYW5rfHwxMi8xNTogQ29udGludWUgY3VycmVudCB0cmVhdG1lbnQgcGxhbi4NT0JYfDExNjd8U1R8Qmxhbmt8fCANT0JYfDExNjh8U1R8Qmxhbmt8fDEyLzE3OiBObyBjaGFuZ2VzIGluIG1lZGljYXRpb24gcmVnaW1lbiBvciBwbGFuIG9mIGNhcmUuIEFzc2Vzc21lbnQgZm9yIEFMRiANT0JYfDExNjl8U1R8Qmxhbmt8fHNjaGVkdWxlZCBmb3IgMTIvMzEvMjAyMCBhdCAxMjAwLiBQdCBhd2FyZS4gDU9CWHwxMTcwfFNUfEJsYW5rfHwxMi8xODogTm8gY2hhbmdlcy4gc3RhYmxlIG9uIHVuaXQuIGF3YWl0aW5nIEFMRiBvcHRpb25zLg1PQlh8MTE3MXxTVHxCbGFua3x8MTIvMTk6IFdpbGwgYWRkIGEgbG93IGRvc2UgYXRpdmFuIGZvciBtb2RlcmF0ZSB0byBzZXZlcmUgYW54aWV0eSBmb3IgdGhlIG5leHQgDU9CWHwxMTcyfFNUfEJsYW5rfHx0aHJlZSBkYXlzLiBFbmNvdXJhZ2VkIGdyb3VwcywgY29waW5nIHNraWxscywgYW5kIGRlZXAgYnJlYXRoaW5nIHRlY2huaXF1ZXMuIFNoZQ1PQlh8MTE3M3xTVHxCbGFua3x8aXMgb3ZlcndoZWxtZWQgd2l0aCBoZXIgY3VycmVudCBzaXR1dGFpb24gb2YgYmVpbmcgaG9tZWxlc3MsIGlucGF0aWVudCBmb3IgdGhlIA1PQlh8MTE3NHxTVHxCbGFua3x8aG9saWRheXMsIGFuZCBubyBwbGFjZSB0byBnby4gQUxGIGFzc2Vzc21lbnQgc2NoZWR1bGVkIGZvciAxMi8zMS8yMDIwIGF0IDEyMDAuIA1PQlh8MTE3NXxTVHxCbGFua3x8MTIvMjA6IEluY3JlYXNlIHNlcm9xdWVsIHRvIDIwMG1nIGF0IGJlZHRpbWUuIGNvbnQgY3VycmVudCB0eCBwbGFuLiANT0JYfDExNzZ8U1R8Qmxhbmt8fDEyLzIxOiBObyBjaGFuZ2VzLiBDb250IGN1cnJlbnQgdHggcGxhbi4NT0JYfDExNzd8U1R8Qmxhbmt8fDEyLzIyOiBObyBjaGFuZ2VzLiBDb250IGN1cnJlbnQgdHggcGxhbi4gQXdhaXRpbmcgQUxGIHBsYWNlbWVudC4gQUxGIGFzc2Vzc21lbnQgDU9CWHwxMTc4fFNUfEJsYW5rfHxzY2hlZHVsZWQgMTIvMzEvMjAyMCBhdCAxMjAwLiANT0JYfDExNzl8U1R8Qmxhbmt8fDEyLzIzOiBObyBjaGFuZ2VzLiBTdGFibGUgb24gdW5pdC4gQUxGIGFzc2Vzc21lbnQgY2hhbmdlZCB0byBKYW4gNSwgMjAyMSBhdCANT0JYfDExODB8U1R8Qmxhbmt8fDA4MDAuIA1PQlh8MTE4MXxTVHxCbGFua3x8MTIvMjQ6IGNvbnQgY3VycmVudCB0eCBwbGFuLiANT0JYfDExODJ8U1R8Qmxhbmt8fDEyLzI1OiBObyBjaGFuZ2VzIGluIG1lZGljYXRpb25zIG9yIGN1cnJlbnQgdHJlYXRtZW50IHBsYW4uDU9CWHwxMTgzfFNUfEJsYW5rfHwxMi8yNjogQ29udGludWUgY3VycmVudCB0cmVhdG1lbnQgcGxhbi4NT0JYfDExODR8U1R8Qmxhbmt8fDEyLzI3OiBQdCB0byBoYXZlIG1lYWxzIG5lYXIgbnVyc2luZyBzdGF0aW9uIGR1ZSB0byBoZXIgaG9hcmRpbmcgZm9vZCBpbiBoZXIgDU9CWHwxMTg1fFNUfEJsYW5rfHxyb29tLiANT0JYfDExODZ8U1R8Qmxhbmt8fDEyLzI4OiBDb250aW51ZSBjdXJyZW50IHBsYW4gb2YgY2FyZS4NT0JYfDExODd8U1R8Qmxhbmt8fDEyLzI5OiBQYXRpZW50IGlzIHN0YWJsZSBvbiB0aGUgdW5pdCwgY29udGludWUgY3VycmVudCB0cmVhdG1lbnQgcGxhbi4NT0JYfDExODh8U1R8Qmxhbmt8fDEyLzMwOiBQYXRpZW50IGlzIHN0YWJsZSBpbiB0aGUgdW5pdCwgY29udGludWUgY3VycmVudCB0cmVhdG1lbnQgcGxhbi4NT0JYfDExODl8U1R8Qmxhbmt8fDEyLzMxOiBObyBjaGFuZ2VzIGluIG1lZCByZWdpbWVuIG9yIHBsYW4gb2YgY2FyZS4gQXdhaXRpbmcgQUxGIGFzc2Vzc21lbnQgMS81Lw1PQlh8MTE5MHxTVHxCbGFua3x8MjAyMS4NT0JYfDExOTF8U1R8Qmxhbmt8fDAxLzAxOiBObyBjaGFuZ2VzLiBjb250IHR4IHBsYW4uIFdpbGwgbm90aWZ5IFNXIHB0IHJlcXVlc3RpbmcgYXNzaXN0YW5jZS4gDU9CWHwxMTkyfFNUfEJsYW5rfHwwMS8wMjogTm8gY2hhbmdlcy4gU3RhYmxlIG9uIHVuaXQuIENvbnQgY3VycmVudCB0eCBwbGFuLiANT0JYfDExOTN8U1R8Qmxhbmt8fDAxLzAzOiBObyBjaGFuZ2VzLiBBTEYgYXNzZXNzbWVudCB0aGlzIFR1ZXNkYXkgMDEvMDUvMjAyMSBhdCAwODAwLg1PQlh8MTE5NHxTVHxCbGFua3x8MDEvMDQ6IE5vIGNoYW5nZXMuIFN0YWJsZSBvbiB1bml0Lg1PQlh8MTE5NXxTVHxCbGFua3x8MDEvMDU6IEFMRiBhc3Nlc3NtZW50IGNvbXBsZXRlZCB3aXRoIGxpYXNvbiBhbmQgU1cgdGhpcyBtb3JuaW5nIGF0IDA4MDAuIE5vIA1PQlh8MTE5NnxTVHxCbGFua3x8dXBkYXRlcyBpbiB0eCB0ZWFtLiBQdCBhd2FpdGluZyBBTEYgcGxhY2VtZW50LiBJbmZvcm1lZCBieSBsaWFzb24gdG9kYXkgaXQgY291bGQNT0JYfDExOTd8U1R8Qmxhbmt8fHRha2UgYW55d2hlcmUgZnJvbSAzMCBkYXlzIHRvIHVwIHRvIGEgeWVhciBmb3IgYWNjZXB0YW5jZS4gDU9CWHwxMTk4fFNUfEJsYW5rfHwwMS8wNjogTm8gY2hhbmdlcy4gQ29udCBjdXJyZW50IG1lZGljYXRpb24gcmVnaW1lbiBhbmQgdHggcGxhbi4gDU9CWHwxMTk5fFNUfEJsYW5rfHwwMS8wNzogUGF0aWVudCBpcyBzdGFibGUgb24gdGhlIHVuaXQsIGNvbnRpbnVlIGN1cnJlbnQgdHJlYXRtZW50IHBsYW4uDU9CWHwxMjAwfFNUfEJsYW5rfHwwMS8wODogTm8gY2hhbmdlcy4gIENvbnRpbnVlIGN1cnJlbnQgdHJlYXRtZW50IHBsYW4uDU9CWHwxMjAxfFNUfEJsYW5rfHwwMS8wOTogUGF0aWVudCBzdGFibGUgb24gdW5pdCwgY29udGludWUgY3VycmVudCB0cmVhdG1lbnQgcGxhbi4NT0JYfDEyMDJ8U1R8Qmxhbmt8fDAxLzEwOiBQYXRpZW50IGlzIHN0YWJsZSBvbiB1bml0LCBjb250aW51ZSBjdXJyZW50IHRyZWF0bWVudCBwbGFuLg1PQlh8MTIwM3xTVHxCbGFua3x8MDEvMTE6IE5vIGNoYW5nZXMgdG8gbWVkaWNhdGlvbnMgb3IgcGxhbiBvZiBjYXJlLiANT0JYfDEyMDR8U1R8Qmxhbmt8fDAxLzEyOiBTb2NpYWwgd29yayB3b3JraW5nIG9uIGxldHRlciBmb3IgcGF0aWVudCdzIGluc3VyYW5jZSByZWxhdGVkIHRvIA1PQlh8MTIwNXxTVHxCbGFua3x8cGxhY2VtZW50LiAgUGF0aWVudCBzdGFibGUgb24gdW5pdCwgY29udGludWUgY3VycmVudCB0cmVhdG1lbnQgcGxhbi4NT0JYfDEyMDZ8U1R8Qmxhbmt8fDAxLzEzOiBObyBjaGFuZ2VzLiAgQ29udGludWUgY3VycmVudCB0cmVhdG1lbnQgcGxhbi4NT0JYfDEyMDd8U1R8Qmxhbmt8fDAxLzE0OiBDb250IGN1cnJlbnQgbWVkIHJlZ2ltZW4gYW5kIHBsYW4gb2YgY2FyZS4gTm8gY2hhbmdlcy4gDU9CWHwxMjA4fFNUfEJsYW5rfHwwMS8xNTogTm8gY2hhbmdlcy4gQ29udGludWUgY3VycmVudCB0eCByZWdpbWVuLiANT0JYfDEyMDl8U1R8Qmxhbmt8fDAxLzE2OiBObyBjaGFuZ2VzLiBTdGFibGUgb24gdW5pdC4gQ29udCBjdXJyZW50IHR4IHBsYW4uIA1PQlh8MTIxMHxTVHxCbGFua3x8MDEvMTc6IE5vIGNoYW5nZXMgaW4gbWVkaWNhdGlvbiByZWdpbWVuLiBDb250IGN1cnJlbnQgdHggcGxhbi4gDU9CWHwxMjExfFNUfEJsYW5rfHwwMS8xODogTm8gY2hhbmdlcyBpbiBtZWRpY2F0aW9uIHJlZ2ltZW4uIENvbnQgdHggcGxhbi4gDU9CWHwxMjEyfFNUfEJsYW5rfHwwMS8xOTogTm8gY2hhbmdlcy4gU3RhYmxlIG9uIHVuaXQuIEF3YWl0aW5nIEFMRi4gDU9CWHwxMjEzfFNUfEJsYW5rfHwwMS8yMDogTm8gY2hhbmdlcy4gUHQgaGFzIGJlZW4gc3RhYmxlIG9uIHVuaXQuIEF3YWl0aW5nIEFMRiBwbGFjZW1lbnQuDU9CWHwxMjE0fFNUfEJsYW5rfHwwMS8yMTogTm8gY2hhbmdlcyB0byBtZWRpY2F0aW9ucyBvciBwbGFubmluZy4NT0JYfDEyMTV8U1R8Qmxhbmt8fDAxLzIyOiBTb2NpYWwgd29yayBjb250aW51ZXMgdG8gd29yayBvbiBBTEYgcGxhY2VtZW50LiAgQ29udGludWUgY3VycmVudCANT0JYfDEyMTZ8U1R8Qmxhbmt8fHRyZWF0bWVudCBwbGFuLg1PQlh8MTIxN3xTVHxCbGFua3x8MDEvMjM6IFBhdGllbnQgc3RhYmxlIG9uIHVuaXQuICBDb250aW51ZSBjdXJyZW50IHRyZWF0bWVudCBwbGFuLg1PQlh8MTIxOHxTVHxCbGFua3x8MDEvMjQtMDEvMjU6Tm8gY2hhbmdlcyB0byBtZWRpY2F0aW9ucyBvciBwbGFuIG9mIGNhcmUuDU9CWHwxMjE5fFNUfEJsYW5rfHwwMS8yNjogUGF0aWVudCBzdGFibGUgb24gdW5pdCwgY29udGludWUgY3VycmVudCB0cmVhdG1lbnQgcGxhbi4NT0JYfDEyMjB8U1R8Qmxhbmt8fDAxLzI3OiBObyBjaGFuZ2VzIHRvIG1lZGljYXRpb25zIG9yIGN1cnJlbnQgcGxhbiBvZiBjYXJlLg1PQlh8MTIyMXxTVHxCbGFua3x8MDEvMjg6IE5vIGNoYW5nZXMuIENvbnQgY3VycmVudCB0eCBwbGFuLiBBd2FpdGluZyBBTEYuIA1PQlh8MTIyMnxTVHxCbGFua3x8MDEvMjk6IE5vIGNoYW5nZXMuIENvbnQgY3VycmVudCB0eCBwbGFuLiBQdCBhd2FpdGluZyBBTEYgcGxhY2VtZW50LiANT0JYfDEyMjN8U1R8Qmxhbmt8fDAxLzMwOiBObyBjaGFuZ2VzIGF0IHRoaXMgdGltZS4gU3RhYmxlIG9uIHVuaXQuIEF3YWl0aW5nIEFMRi4NT0JYfDEyMjR8U1R8Qmxhbmt8fDAxLzMxOiBObyBjaGFuZ2VzLiBBd2FpdGluZyBBTEYgcGxhY2VtZW50IG9wdGlvbnMuDU9CWHwxMjI1fFNUfEJsYW5rfHwwMi8wMTogTm8gY2hhbmdlcywgc3RhYmxlIG9uIHVuaXQuIENvbnQgY3VycmVudCBtZWRzIGFuZCB0eCBwbGFuLiANT0JYfDEyMjZ8U1R8Qmxhbmt8fDAyLzAyOiBObyBjaGFuZ2VzIGluIG1lZGljYXRpb24gcmVnaW1lbiBvciB0eCBwbGFuLiBBd2FpdGluZyBBTEYuIA1PQlh8MTIyN3xTVHxCbGFua3x8MDIvMDM6IFN0YWJsZSBvbiB1bml0LiBDb250IGN1cnJlbnQgdHggcGxhbi4gV2FpdGluZyBvbiBtZWRpY2FpZCB3YWl2ZXIgYW5kIEFMRiANT0JYfDEyMjh8U1R8Qmxhbmt8fHBsYWNlbWVudC4NT0JYfDEyMjl8U1R8Qmxhbmt8fDAyLzA0OiBQYXRpZW50IHN0YWJsZSBvbiB1bml0LiAgQ29udGludWUgY3VycmVudCB0cmVhdG1lbnQgcGxhbi4NT0JYfDEyMzB8U1R8Qmxhbmt8fDAyLzA1OiBObyBjaGFuZ2VzIHRvIG1lZGljYXRpb25zIG9yIGN1cnJlbnQgcGxhbiBvZiBjYXJlLg1PQlh8MTIzMXxTVHxCbGFua3x8MDIvMDY6IE5vIGNoYW5nZXMgdG8gbWVkaWNhdGlvbnMsIG9yIGN1cnJlbnQgcGxhbiBvZiBjYXJlLg1PQlh8MTIzMnxTVHxCbGFua3x8MDIvMDc6IENvbnRpbnVlIGN1cnJlbnQgdHJlYXRtZW50IHBsYW4uDU9CWHwxMjMzfFNUfEJsYW5rfHwwMi8wODogTWVkaWNhbCBOUCB0byBzZWUgcGF0aWVudCBmb3IgcmlnaHQga25lZSBzd2VsbGluZyBhbmQgcGFpbi4gIE5vIGNoYW5nZXMgDU9CWHwxMjM0fFNUfEJsYW5rfHx0byBwbGFuIG9mIGNhcmUuDU9CWHwxMjM1fFNUfEJsYW5rfHwwMi8wOTogUGF0aWVudCBzYXlzIGhlciBrbmVlIGlzIHN0aWxsIGJvdGhlcmluZyBoZXIgc29tZSB0b2RheSwgYnV0IHNoZSBpcyBkb2luZw1PQlh8MTIzNnxTVHxCbGFua3x8b2theS4gIFBhdGllbnQgY29udGludWVzIHRvIHdhaXQgZm9yIGhlciBsb25nLXRlcm0gY2FyZSB3YWl2ZXIgZm9yIEFMRiANT0JYfDEyMzd8U1R8Qmxhbmt8fHBsYWNlbWVudC4NT0JYfDEyMzh8U1R8Qmxhbmt8fExlZ2FsIGhvbGQgc3RhdHVzOg1PQlh8MTIzOXxTVHxCbGFua3x8KioqTk9URTogIFRoZSBkb2N1bWVudGF0aW9uIGJlbG93IGhhcyBiZWVuIGltcG9ydGVkIGZyb20gdGhlIGxlZ2FsIGhvbGQgc3RhdHVzIA1PQlh8MTI0MHxTVHxCbGFua3x8b3JkZXIuICBBbnkgY2hhbmdlcyB0byB0aGUgcGF0aWVudCdzIGxlZ2FsIGhvbGQgc3RhdHVzIE1VU1QgYmUgZW50ZXJlZCBpbiB0aGUgDU9CWHwxMjQxfFNUfEJsYW5rfHxvcmRlci4NT0JYfDEyNDJ8U1R8Qmxhbmt8fCANT0JYfDEyNDN8U1R8Qmxhbmt8fEluaXRpYWwgbGVnYWwgaG9sZCBzdGF0dXM6ICAgICAgIEludm9sdW50YXJ5DU9CWHwxMjQ0fFNUfEJsYW5rfHxVcGRhdGVkIGxlZ2FsIGhvbGQgc3RhdHVzOiAgVm9sdW50YXJ5DU9CWHwxMjQ1fFNUfEJsYW5rfHxEYXRlIGxlZ2FsIHN0YXR1cyBjaGFuZ2VkOiAwOS8wNy8yMA1PQlh8MTI0NnxTVHxCbGFua3x8IA1PQlh8MTI0N3xTVHxCbGFua3x8UHJlY2F1dGlvbnM6IFExNSBtaW4gY2hlY2tzLCBzdGFuZGFyZA1PQlh8MTI0OHxTVHxCbGFua3x8IA1PQlh8MTI0OXxTVHxCbGFua3x8Q29udGludWVkIFN0YXkvRGlzY2hhcmdlIFBsYW4NT0JYfDEyNTB8U1R8Qmxhbmt8fENvb3JkaW5hdGlvbiBvZiBjYXJlL2NvdW5zZWw6IGRpc2N1c3NlZCB3L3NvY2lhbCB3b3JrZXIsIHJldi4gc3RhZmYgDU9CWHwxMjUxfFNUfEJsYW5rfHxkb2N1bWVudGF0aW9uLCB0cmVhdG1lbnQgdGVhbSBtZWV0aW5nDU9CWHwxMjUyfFNUfEJsYW5rfHxFc3RpbWF0ZWQgZGF0ZSBvZiBkaXNjaGFyZ2U6IDAyLzIyLzIxDU9CWHwxMjUzfFNUfEJsYW5rfHxBc3Nlc3NtdC9Db250LiBzdGF5IGNyaXRlcmlhOiBiZWhhdmlvcmFsIGNvbmRpdGlvbnMsIG1lZGljYXRpb24gc3RhYmlsaXphdGlvbiwgDU9CWHwxMjU0fFNUfEJsYW5rfHx1bmFibGUgdG8gY2FyZSBmb3Igc2VsZg1PQlh8MTI1NXxTVHxCbGFua3x8VGhlcmFweSBwYXJ0aWNpcGF0aW9uOiByZWd1bGFyDU9CWHwxMjU2fFNUfEJsYW5rfHxEaXNjaGFyZ2UgcGxhbm5pbmc6DU9CWHwxMjU3fFNUfEJsYW5rfHxBTEYNT0JYfDEyNTh8U1R8Qmxhbmt8fCANT0JYfDEyNTl8U1R8Qmxhbmt8fFRpbWUgU3BlbnQNT0JYfDEyNjB8U1R8Qmxhbmt8fFRpbWUgc3BlbnQgKG1pbnV0ZXMpOiAxNQ1PQlh8MTI2MXxTVHxCbGFua3x8PjUwJSBzcGVudCBvbiBjb3Vuc2VsaW5nL2Nvb3JkaW5hdGlvbiBvZiBjYXJlOiB5ZXMNT0JYfDEyNjJ8U1R8Qmxhbmt8fCANT0JYfDEyNjN8U1R8Qmxhbmt8fFF1YWxpdHkgLSBwc3ljaCB0ZW1wbGF0ZXMNT0JYfDEyNjR8U1R8Qmxhbmt8fCANT0JYfDEyNjV8U1R8Qmxhbmt8fEN1cnJlbnQgTWVkaWNhdGlvbnMNT0JYfDEyNjZ8U1R8Qmxhbmt8fEN1cnJlbnQgbWVkaWNhdGlvbiByZXZpZXc6DU9CWHwxMjY3fFNUfEJsYW5rfHxJIGF0dGVzdCB0aGF0IHRoZSBmb3JlZ29pbmcgbWVkaWNhdGlvbiBsaXN0IGluIHRoZSBtZWRpY2FsIHJlY29yZCBpcyB0cnVlLCANT0JYfDEyNjh8U1R8Qmxhbmt8fGFjY3VyYXRlLCBhbmQgY29tcGxldGUgdG8gdGhlIGJlc3Qgb2YgbXkga25vd2xlZGdlLg1PQlh8MTI2OXxTVHxCbGFua3x8IA1PQlh8MTI3MHxTVHxCbGFua3x8VW5hYmxlIHRvIG9idGFpbjoNT0JYfDEyNzF8U1R8Qmxhbmt8fFVuYWJsZSB0byBvYnRhaW4gYW4gYWNjdXJhdGUgaG9tZSBtZWRpY2F0aW9uIGxpc3QgYXQgdGhpcyB0aW1lLiAgVGhlIHBhdGllbnQgaXMgDU9CWHwxMjcyfFNUfEJsYW5rfHxpbiBhbiB1cmdlbnQgb3IgZW1lcmdlbnQgbWVkaWNhbCBzaXR1YXRpb24gd2hlcmUgdGltZSBpcyBvZiB0aGUgZXNzZW5jZS4gIFRvIA1PQlh8MTI3M3xTVHxCbGFua3x8ZGVsYXkgdHJlYXRtZW50IHdvdWxkIGplb3BhcmRpemUgdGhlIHBhdGllbnQncyBoZWFsdGggc3RhdHVzIG9uIHRoZSBkYXkgb2YgdGhlIA1PQlh8MTI3NHxTVHxCbGFua3x8ZW5jb3VudGVyLg1PQlh8MTI3NXxTVHxCbGFua3x8IA1PQlh8MTI3NnxTVHxCbGFua3x8IA1PQlh8MTI3N3xTVHxCbGFua3x8QWR2YW5jZWQgQ2FyZSBQbGFuIDY1IG9yIE9sZGVyDU9CWHwxMjc4fFNUfEJsYW5rfHxEaXNjdXNzZWQgd2l0aDogcGF0aWVudA1PQlh8MTI3OXxTVHxCbGFua3x8RGlzY3Vzc2lvbiBpbmNsdWRlZDogY29kZSBzdGF0dXMNT0JYfDEyODB8U1R8Qmxhbmt8fCANT0JYfDEyODF8U1R8Qmxhbmt8fFRvYmFjY28gVXNlL0NvdW5zZWxpbmcNT0JYfDEyODJ8U1R8Qmxhbmt8fFRvYmFjY28gdXNlL2NvdW5zZWxpbmc6IHRvYmFjY28gdXNlciwgY2Vzc2F0aW9uIGNvdW5zZWwgPDMgbWluDU9CWHwxMjgzfFNUfEJsYW5rfHwgDU9CWHwxMjg0fFNUfEJsYW5rfHxFbGVjdHJvbmljYWxseSBTaWduZWQgYnkgR3JhZHksSmVubmlmZXIgRCAgQVBSTiBvbiAwMi8wOS8yMSBhdCAxNDE4DU9CWHwxMjg1fFNUfEJsYW5rfHxSUFQgIzogMDIwOS0wNDIxDU9CWHwxMjg2fFNUfEJsYW5rfHwqKipFTkQgT0YgUkVQT1JUKioqDQ==</inboundTemplate>
            <outboundTemplate encoding="base64"></outboundTemplate>
            <inboundDataType>HL7V2</inboundDataType>
            <outboundDataType>HL7V2</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.11.0">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.11.0">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.11.0">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.11.0">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.11.0">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.11.0">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.11.0">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.11.0">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.11.0">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.11.0">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.11.0">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.11.0">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.11.0">
            <elements/>
            <inboundTemplate encoding="base64"></inboundTemplate>
            <outboundTemplate encoding="base64"></outboundTemplate>
            <inboundDataType>HL7V2</inboundDataType>
            <outboundDataType>HL7V2</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.11.0">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.11.0">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.11.0">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.11.0">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.11.0">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.11.0">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.11.0">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.11.0">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.11.0">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.11.0">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.11.0">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.11.0">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.11.0">
            <elements>
              <com.mirth.connect.plugins.javascriptrule.JavaScriptRule version="3.11.0">
                <sequenceNumber>0</sequenceNumber>
                <enabled>true</enabled>
                <script>var des=responseMap.get(&apos;Set Patient Validation&apos;).getStatus();
if (des == &apos;SENT&apos;) {
    return true;
}
return false;</script>
              </com.mirth.connect.plugins.javascriptrule.JavaScriptRule>
            </elements>
          </filter>
          <transportName>JavaScript Writer</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
      </destinationConnectors>
      <preprocessingScript>// Modify the message variable below to pre process data
return message;</preprocessingScript>
      <postprocessingScript>// This script executes once after a message has been processed
// Responses returned from here will be stored as &quot;Postprocessor&quot; in the response map
return;</postprocessingScript>
      <deployScript>// This script executes once when the channel is deployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</deployScript>
      <undeployScript>// This script executes once when the channel is undeployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</undeployScript>
      <properties version="3.11.0">
        <clearGlobalChannelMap>true</clearGlobalChannelMap>
        <messageStorageMode>DEVELOPMENT</messageStorageMode>
        <encryptData>false</encryptData>
        <removeContentOnCompletion>false</removeContentOnCompletion>
        <removeOnlyFilteredOnCompletion>false</removeOnlyFilteredOnCompletion>
        <removeAttachmentsOnCompletion>false</removeAttachmentsOnCompletion>
        <initialState>STARTED</initialState>
        <storeAttachments>true</storeAttachments>
        <metaDataColumns>
          <metaDataColumn>
            <name>SOURCE</name>
            <type>STRING</type>
            <mappingName>mirth_source</mappingName>
          </metaDataColumn>
          <metaDataColumn>
            <name>TYPE</name>
            <type>STRING</type>
            <mappingName>mirth_type</mappingName>
          </metaDataColumn>
        </metaDataColumns>
        <attachmentProperties version="3.11.0">
          <type>None</type>
          <properties/>
        </attachmentProperties>
        <resourceIds class="linked-hash-map">
          <entry>
            <string>Default Resource</string>
            <string>[Default Resource]</string>
          </entry>
        </resourceIds>
      </properties>
      <exportData>
        <metadata>
          <enabled>true</enabled>
          <lastModified>
            <time>1632188246253</time>
            <timezone>America/Bogota</timezone>
          </lastModified>
          <pruningSettings>
            <archiveEnabled>true</archiveEnabled>
          </pruningSettings>
        </metadata>
      </exportData>
    </channel>
  </channels>
</channelGroup>